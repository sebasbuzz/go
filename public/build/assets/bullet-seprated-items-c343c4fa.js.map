{"version":3,"file":"bullet-seprated-items-c343c4fa.js","sources":["../../../resources/client/help-center/articles/use-article.ts","../../../common/resources/client/ui/bullet-seprated-items.tsx"],"sourcesContent":["import {useQuery} from '@tanstack/react-query';\nimport {Article} from '@app/help-center/articles/article';\nimport {useParams} from 'react-router-dom';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\nimport {Section} from '@app/help-center/categories/category';\n\nexport interface ArticlePageNavItem {\n  indent: boolean;\n  display_name: string;\n  slug: string;\n  type: string;\n}\n\nexport interface GetArticleResponse extends BackendResponse {\n  article: Article;\n  pageNav?: ArticlePageNavItem[];\n  categoryNav?: Section[];\n}\n\nexport function useArticle(loader: 'articlePage' | 'updateArticle') {\n  const {categoryId, sectionId, articleId} = useParams();\n  return useQuery<GetArticleResponse>({\n    queryKey: ['hc', 'articles', articleId, categoryId, sectionId, loader],\n    queryFn: () => fetchArticle(articleId!, loader, categoryId, sectionId),\n    initialData: () => {\n      const data = getBootstrapData().loaders?.[loader];\n      const [category, section] = data?.article?.path || [];\n      if (\n        data?.article?.id == articleId &&\n        category?.id == categoryId &&\n        section?.id == sectionId\n      ) {\n        return data;\n      }\n    },\n  });\n}\n\nfunction fetchArticle(\n  articleId: string | number,\n  loader: string,\n  categoryId?: string,\n  sectionId?: string,\n) {\n  const url =\n    categoryId && sectionId\n      ? `hc/articles/${categoryId}/${sectionId}/${articleId}`\n      : `hc/articles/${articleId}`;\n  return apiClient\n    .get<GetArticleResponse>(url, {params: {loader}})\n    .then(response => response.data);\n}\n","import React, {Children, Fragment, ReactNode} from 'react';\nimport clsx from 'clsx';\n\ninterface BulletSeparatedItemsProps {\n  children: ReactNode;\n  className?: string;\n}\n\nexport function BulletSeparatedItems({\n  children,\n  className,\n}: BulletSeparatedItemsProps) {\n  const items = Children.toArray(children);\n  return (\n    <div className={clsx('flex items-center gap-4 overflow-hidden', className)}>\n      {items.map((child, index) => (\n        <Fragment key={index}>\n          <div>{child}</div>\n          {index < items.length - 1 ? <div>&bull;</div> : null}\n        </Fragment>\n      ))}\n    </div>\n  );\n}\n"],"names":["useArticle","loader","categoryId","sectionId","articleId","useParams","useQuery","fetchArticle","data","_a","getBootstrapData","category","section","_b","_c","url","apiClient","response","BulletSeparatedItems","children","className","items","Children","jsx","clsx","child","index","Fragment"],"mappings":"iFAqBO,SAASA,EAAWC,EAAyC,CAClE,KAAM,CAAC,WAAAC,EAAY,UAAAC,EAAW,UAAAC,GAAaC,EAAU,EACrD,OAAOC,EAA6B,CAClC,SAAU,CAAC,KAAM,WAAYF,EAAWF,EAAYC,EAAWF,CAAM,EACrE,QAAS,IAAMM,EAAaH,EAAYH,EAAQC,EAAYC,CAAS,EACrE,YAAa,IAAM,WACjB,MAAMK,GAAOC,EAAAC,EAAA,EAAmB,UAAnB,YAAAD,EAA6BR,GACpC,CAACU,EAAUC,CAAO,IAAIC,EAAAL,GAAA,YAAAA,EAAM,UAAN,YAAAK,EAAe,OAAQ,GAEjD,KAAAC,EAAAN,GAAA,YAAAA,EAAM,UAAN,YAAAM,EAAe,KAAMV,IACrBO,GAAA,YAAAA,EAAU,KAAMT,IAChBU,GAAA,YAAAA,EAAS,KAAMT,EAER,OAAAK,CAEX,CAAA,CACD,CACH,CAEA,SAASD,EACPH,EACAH,EACAC,EACAC,EACA,CACM,MAAAY,EACJb,GAAcC,EACV,eAAeD,CAAU,IAAIC,CAAS,IAAIC,CAAS,GACnD,eAAeA,CAAS,GAC9B,OAAOY,EACJ,IAAwBD,EAAK,CAAC,OAAQ,CAAC,OAAAd,EAAQ,CAAA,EAC/C,KAAKgB,GAAYA,EAAS,IAAI,CACnC,CC7CO,SAASC,EAAqB,CACnC,SAAAC,EACA,UAAAC,CACF,EAA8B,CACtB,MAAAC,EAAQC,EAAAA,SAAS,QAAQH,CAAQ,EACvC,OACGI,EAAAA,IAAA,MAAA,CAAI,UAAWC,EAAK,0CAA2CJ,CAAS,EACtE,SAAAC,EAAM,IAAI,CAACI,EAAOC,WAChBC,EAAAA,SACC,CAAA,SAAA,CAAAJ,EAAAA,IAAC,OAAK,SAAME,CAAA,CAAA,EACXC,EAAQL,EAAM,OAAS,EAAKE,EAAAA,IAAA,MAAA,CAAI,YAAM,CAAA,EAAS,IAAA,GAFnCG,CAGf,CACD,CACH,CAAA,CAEJ"}