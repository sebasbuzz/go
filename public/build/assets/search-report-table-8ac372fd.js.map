{"version":3,"file":"search-report-table-8ac372fd.js","sources":["../../../resources/client/agent/global-loading-progress.tsx","../../../common/resources/client/tags/use-tags.ts","../../../common/resources/client/icons/material/Delete.tsx","../../../common/resources/client/ui/tabs/tabs-context.tsx","../../../common/resources/client/ui/tabs/tabs.tsx","../../../common/resources/client/ui/tabs/tab.tsx","../../../common/resources/client/ui/tabs/tab-line.tsx","../../../common/resources/client/ui/tabs/tab-list.tsx","../../../common/resources/client/datatable/filters/backend-filters-url-key.ts","../../../common/resources/client/datatable/filters/utils/decode-backend-filters.ts","../../../common/resources/client/datatable/filters/utils/encode-backend-filters.ts","../../../common/resources/client/datatable/filters/backend-filter-url-params.ts","../../../common/resources/client/datatable/filters/backend-filter.ts","../../../common/resources/client/datatable/filters/filter-list/filter-list-trigger-button.tsx","../../../common/resources/client/datatable/filters/panels/select-filter-panel.tsx","../../../common/resources/client/datatable/filters/filter-list/filter-list-item-dialog-trigger.tsx","../../../common/resources/client/users/queries/use-normalized-models.ts","../../../common/resources/client/users/queries/use-normalized-model.ts","../../../common/resources/client/ui/forms/normalized-model-field.tsx","../../../common/resources/client/datatable/filters/panels/normalized-model-filter-panel.tsx","../../../common/resources/client/icons/material/DateRange.tsx","../../../common/resources/client/ui/forms/input-field/input.tsx","../../../common/resources/client/ui/forms/input-field/date/date-range-picker/date-picker-field.tsx","../../../common/resources/client/ui/forms/input-field/date/utils.ts","../../../common/resources/client/ui/forms/input-field/date/use-base-date-picker-state.ts","../../../common/resources/client/utils/date/start-of-day.ts","../../../common/resources/client/utils/date/end-of-day.ts","../../../common/resources/client/ui/forms/input-field/date/date-range-picker/use-date-range-picker-state.ts","../../../common/resources/client/icons/material/ArrowRightAlt.tsx","../../../common/resources/client/ui/forms/input-field/date/segments/utils/adjust-segment.ts","../../../common/resources/client/ui/forms/input-field/date/segments/utils/set-segment.ts","../../../common/resources/client/ui/forms/input-field/date/segments/utils/page-step.ts","../../../common/resources/client/ui/forms/input-field/date/segments/editable-date-segment.tsx","../../../common/resources/client/ui/forms/input-field/date/segments/literal-segment.tsx","../../../common/resources/client/ui/forms/input-field/date/segments/utils/get-segment-limits.ts","../../../common/resources/client/ui/forms/input-field/date/segments/date-segment-list.tsx","../../../common/resources/client/ui/forms/input-field/date/calendar/calendar-cell.tsx","../../../common/resources/client/ui/forms/input-field/date/calendar/calendar-month.tsx","../../../common/resources/client/ui/forms/input-field/date/calendar/calendar.tsx","../../../common/resources/client/i18n/formatted-date-time-range.tsx","../../../common/resources/client/i18n/get-user-timezone.ts","../../../common/resources/client/ui/forms/input-field/date/date-range-picker/dialog/date-range-presets.ts","../../../common/resources/client/ui/forms/input-field/date/date-range-picker/dialog/date-range-preset-list.tsx","../../../common/resources/client/utils/hooks/is-tablet-media-query.ts","../../../common/resources/client/ui/forms/toggle/switch.tsx","../../../common/resources/client/ui/forms/input-field/date/date-range-picker/dialog/date-range-compare-presets.ts","../../../common/resources/client/ui/forms/input-field/date/date-range-picker/dialog/date-range-compare-preset-list.tsx","../../../common/resources/client/ui/forms/input-field/date/date-range-picker/dialog/date-range-dialog.tsx","../../../common/resources/client/ui/forms/input-field/date/date-range-picker/date-range-picker.tsx","../../../common/resources/client/ui/forms/input-field/date/date-range-picker/form-date-range-picker.tsx","../../../common/resources/client/datatable/filters/panels/date-range-filter-panel.tsx","../../../common/resources/client/datatable/filters/filter-operator-names.ts","../../../common/resources/client/datatable/filters/panels/input-filter-panel.tsx","../../../common/resources/client/ui/forms/input-field/chip-field/string-to-chip-value.ts","../../../common/resources/client/ui/forms/input-field/chip-field/chip-field.tsx","../../../common/resources/client/ui/forms/input-field/chip-field/form-chip-field.tsx","../../../common/resources/client/datatable/filters/panels/chip-field-filter-panel.tsx","../../../common/resources/client/i18n/formatted-number.tsx","../../../common/resources/client/datatable/filters/filter-list/filter-list-control.tsx","../../../common/resources/client/datatable/filters/filter-list/filter-list.tsx","../../../common/resources/client/icons/material/FilterAlt.tsx","../../../common/resources/client/ui/accordion/accordion.tsx","../../../common/resources/client/datatable/filters/panels/boolean-filter-panel.tsx","../../../common/resources/client/datatable/filters/add-filter-dialog.tsx","../../../common/resources/client/datatable/filters/add-filter-button.tsx","../../../common/resources/client/datatable/filters/timestamp-filters.ts","../../../common/resources/client/auth/user.ts","../../../common/resources/client/datatable/column-templates/name-with-avatar.tsx","../../../common/resources/client/icons/material/MoreVert.tsx","../../../common/resources/client/ui/buttons/button-group.tsx","../../../resources/client/agent/agent-ticket-page/canned-replies/requests/use-create-canned-reply.tsx","../../../resources/client/agent/agent-ticket-page/canned-replies/canned-reply-form.tsx","../../../resources/client/agent/agent-ticket-page/canned-replies/create-canned-reply-dialog.tsx","../../../common/resources/client/datatable/requests/paginated-resources.ts","../../../common/resources/client/datatable/page/data-table-context.ts","../../../common/resources/client/datatable/data-table-header.tsx","../../../common/resources/client/datatable/selected-state-datatable-header.tsx","../../../common/resources/client/datatable/filters/filter-list/filter-list-skeleton.tsx","../../../common/resources/client/datatable/data-table.tsx","../../../common/resources/client/datatable/page/data-table-page.tsx","../../../common/resources/client/icons/material/Add.tsx","../../../common/resources/client/datatable/data-table-add-item-button.tsx","../../../common/resources/client/datatable/requests/delete-selected-rows.ts","../../../common/resources/client/datatable/page/delete-selected-items-action.tsx","../../../resources/client/admin/canned-replies/online-articles.svg","../../../resources/client/admin/canned-replies/canned-replies-datatable-filters.ts","../../../resources/client/agent/agent-ticket-page/canned-replies/requests/use-delete-canned-replies.ts","../../../resources/client/agent/agent-ticket-page/canned-replies/requests/use-update-canned-reply.tsx","../../../resources/client/agent/agent-ticket-page/canned-replies/update-canned-reply-dialog.tsx","../../../common/resources/client/utils/string/truncate-string.ts","../../../common/resources/client/utils/string/strip-tags.ts","../../../resources/client/admin/canned-replies/canned-replies-datatable-columns.tsx","../../../resources/client/admin/canned-replies/canned-replies-datatable-page.tsx","../../../common/resources/client/ui/overlays/dialog/info-dialog-trigger/info-dialog-trigger-icon.tsx","../../../common/resources/client/ui/overlays/dialog/info-dialog-trigger/info-dialog-trigger.tsx","../../../common/resources/client/admin/users/requests/use-ban-user.ts","../../../common/resources/client/ui/forms/input-field/date/date-picker/use-date-picker-state.ts","../../../common/resources/client/ui/forms/input-field/date/date-picker/date-picker.tsx","../../../common/resources/client/admin/users/ban-user-dialog.tsx","../../../resources/client/admin/reports/search-report/search-report-table-columns.tsx","../../../common/resources/client/ui/forms/input-field/date/date-range-picker/date-range-value.ts","../../../resources/client/admin/reports/search-report/use-search-report.ts","../../../resources/client/admin/reports/search-report/search-report-table.tsx"],"sourcesContent":["import {UseQueryResult} from '@tanstack/react-query';\nimport {ProgressBar} from '@common/ui/progress/progress-bar';\nimport React from 'react';\n\ninterface Props {\n  query: UseQueryResult<unknown>;\n}\nexport function GlobalLoadingProgress({query}: Props) {\n  if (query.fetchStatus === 'fetching') {\n    return (\n      <ProgressBar\n        isIndeterminate\n        size=\"xs\"\n        className=\"fixed left-0 right-0 top-0\"\n      />\n    );\n  }\n  return null;\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {PaginationResponse} from '@common/http/backend-response/pagination-response';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {Tag} from '@common/tags/tag';\n\ninterface Response extends BackendResponse {\n  pagination: PaginationResponse<Tag>;\n}\n\ninterface Params {\n  type?: string;\n  notType?: string;\n  perPage?: number;\n  query?: string;\n}\n\nexport function useTags(params: Params) {\n  return useQuery({\n    queryKey: ['tags', params],\n    queryFn: () => fetchTags(params),\n  });\n}\n\nfunction fetchTags(params: Params) {\n  return apiClient\n    .get<Response>(`tags`, {\n      params: {paginate: 'simple', ...params},\n    })\n    .then(response => response.data);\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const DeleteIcon = createSvgIcon(\n  <path d=\"M16 9v10H8V9h8m-1.5-6h-5l-1 1H5v2h14V4h-3.5l-1-1zM18 7H6v12c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7z\" />\n, 'DeleteOutlined');\n","import React, {RefObject} from 'react';\n\nexport interface TabsContext {\n  selectedTab: number;\n  setSelectedTab: (newTab: number) => void;\n  tabsRef: RefObject<HTMLElement[]>;\n  size: 'sm' | 'md';\n  isLazy?: boolean;\n  id: string;\n}\n\nexport const TabContext = React.createContext<TabsContext>(null!);\n","import React, {ReactElement, useId, useMemo, useRef} from 'react';\nimport clsx from 'clsx';\nimport {useControlledState} from '@react-stately/utils';\nimport {TabContext, TabsContext} from './tabs-context';\nimport {TabListProps} from './tab-list';\nimport {TabPanelsProps} from './tab-panels';\n\nexport interface TabsProps {\n  children: [ReactElement<TabListProps>, ReactElement<TabPanelsProps>];\n  size?: 'sm' | 'md';\n  className?: string;\n  selectedTab?: number;\n  defaultSelectedTab?: number;\n  onTabChange?: (newTab: number) => void;\n  isLazy?: boolean;\n  overflow?: string;\n}\n\nexport function Tabs(props: TabsProps) {\n  const {\n    size = 'md',\n    children,\n    className,\n    isLazy,\n    overflow = 'overflow-hidden',\n  } = props;\n\n  const tabsRef = useRef<HTMLButtonElement[]>([]);\n  const id = useId();\n\n  const [selectedTab, setSelectedTab] = useControlledState(\n    props.selectedTab,\n    props.defaultSelectedTab || 0,\n    props.onTabChange\n  );\n\n  const ContextValue: TabsContext = useMemo(() => {\n    return {\n      selectedTab,\n      setSelectedTab,\n      tabsRef,\n      size,\n      isLazy,\n      id,\n    };\n  }, [selectedTab, id, isLazy, setSelectedTab, size]);\n\n  return (\n    <TabContext.Provider value={ContextValue}>\n      <div className={clsx(className, overflow, 'max-w-full')}>{children}</div>\n    </TabContext.Provider>\n  );\n}\n","import React, {JSXElementConstructor, ReactNode, useContext} from 'react';\nimport clsx from 'clsx';\nimport {useFocusManager} from '@react-aria/focus';\nimport {TabContext} from './tabs-context';\nimport {LinkProps} from 'react-router-dom';\n\nexport interface TabProps {\n  className?: string;\n  index?: number;\n  children: ReactNode;\n  isDisabled?: boolean;\n  padding?: string;\n  elementType?: 'button' | 'a' | JSXElementConstructor<any>;\n  to?: LinkProps['to'];\n  relative?: LinkProps['relative'];\n  replace?: LinkProps['replace'];\n  width?: string;\n}\nexport function Tab({\n  index,\n  className,\n  isDisabled,\n  children,\n  padding: paddingProp,\n  elementType = 'button',\n  to,\n  relative,\n  width = 'min-w-min',\n}: TabProps) {\n  const {\n    selectedTab,\n    setSelectedTab,\n    tabsRef,\n    size = 'md',\n    id,\n  } = useContext(TabContext);\n  const isSelected = index === selectedTab;\n  const focusManager = useFocusManager();\n  const padding = paddingProp || (size === 'sm' ? 'px-12' : 'px-18');\n\n  const mergedClassname = clsx(\n    'tracking-wide overflow-hidden capitalize text-sm flex items-center justify-center outline-none transition-colors',\n    'focus-visible:ring focus-visible:ring-2 ring-inset rounded whitespace-nowrap cursor-pointer',\n    width,\n    textColor({isDisabled, isSelected}),\n    className,\n    size === 'md' && `${padding} h-48`,\n    size === 'sm' && `${padding} h-32`,\n    isDisabled && 'pointer-events-none',\n  );\n\n  const onKeyDown = (e: React.KeyboardEvent<HTMLButtonElement>) => {\n    switch (e.key) {\n      case 'ArrowLeft':\n        focusManager?.focusPrevious();\n        break;\n      case 'ArrowRight':\n        focusManager?.focusNext();\n        break;\n      case 'Home':\n        focusManager?.focusFirst();\n        break;\n      case 'End':\n        focusManager?.focusLast();\n        break;\n    }\n  };\n\n  const tabIndex = isSelected ? 0 : -1;\n  const Element = elementType;\n\n  return (\n    <Element\n      disabled={isDisabled}\n      id={`${id}-${index}-tab`}\n      aria-controls={`${id}-${index}-tabpanel`}\n      type=\"button\"\n      role=\"tab\"\n      aria-selected={isSelected}\n      tabIndex={isDisabled ? undefined : tabIndex}\n      onKeyDown={onKeyDown}\n      onClick={() => {\n        setSelectedTab(index!);\n      }}\n      to={to}\n      relative={relative}\n      className={mergedClassname}\n      ref={(el: HTMLElement) => {\n        if (tabsRef.current && el) {\n          tabsRef.current[index!] = el;\n        }\n      }}\n    >\n      {children}\n    </Element>\n  );\n}\n\ninterface TextColorProps {\n  isDisabled?: boolean;\n  isSelected: boolean;\n}\nfunction textColor({isDisabled, isSelected}: TextColorProps): string {\n  if (isDisabled) {\n    return 'text-disabled cursor-default';\n  }\n  if (isSelected) {\n    return 'text-primary';\n  }\n  return 'text-muted hover:text-main';\n}\n","import React, {useContext, useState} from 'react';\nimport {useLayoutEffect} from '@react-aria/utils';\nimport clsx from 'clsx';\nimport {TabContext} from './tabs-context';\n\ninterface TabLineStyle {\n  width?: string;\n  transform?: string;\n  className?: string;\n}\n\nexport function TabLine() {\n  const {tabsRef, selectedTab} = useContext(TabContext);\n  const [style, setStyle] = useState<TabLineStyle>({\n    width: undefined,\n    transform: undefined,\n    className: undefined,\n  });\n\n  useLayoutEffect(() => {\n    if (selectedTab != null && tabsRef.current) {\n      const el = tabsRef.current[selectedTab];\n      if (!el) return;\n\n      setStyle(prevState => {\n        return {\n          width: `${el.offsetWidth}px`,\n          transform: `translateX(${el.offsetLeft}px)`,\n          // disable initial transition for tabline\n          className: prevState.width === undefined ? '' : 'transition-all',\n        };\n      });\n    }\n  }, [setStyle, selectedTab, tabsRef]);\n\n  return (\n    <div\n      className={clsx(\n        'absolute bottom-0 left-0 h-2 bg-primary',\n        style.className\n      )}\n      role=\"presentation\"\n      style={{width: style.width, transform: style.transform}}\n    />\n  );\n}\n","import React, {Children, cloneElement, isValidElement, ReactNode} from 'react';\nimport clsx from 'clsx';\nimport {FocusScope} from '@react-aria/focus';\nimport {TabProps} from './tab';\nimport {TabLine} from './tab-line';\n\nexport interface TabListProps {\n  children: ReactNode;\n  // center tabs within tablist\n  center?: boolean;\n  // expand tabs to fill in tablist space fully. By default, tabs are only as wide as their content.\n  expand?: boolean;\n  className?: string;\n}\nexport function TabList({children, center, expand, className}: TabListProps) {\n  const childrenArray = Children.toArray(children);\n\n  return (\n    <FocusScope>\n      <div\n        className={clsx(\n          // hide scrollbar completely on mobile, show compact one on desktop\n          'flex relative max-w-full overflow-auto border-b max-sm:hidden-scrollbar md:compact-scrollbar',\n          className\n        )}\n        role=\"tablist\"\n        aria-orientation=\"horizontal\"\n      >\n        {childrenArray.map((child, index) => {\n          if (isValidElement<TabProps>(child)) {\n            return cloneElement<TabProps>(child, {\n              index,\n              className: clsx(\n                child.props.className,\n                expand && 'flex-auto',\n                center && index === 0 && 'ml-auto',\n                center && index === childrenArray.length - 1 && 'mr-auto'\n              ),\n            });\n          }\n          return null;\n        })}\n        <TabLine />\n      </div>\n    </FocusScope>\n  );\n}\n","export const BackendFiltersUrlKey = 'filters';\n","import {FilterListValue} from './encode-backend-filters';\n\nexport function decodeBackendFilters(\n  encodedFilters: string | null\n): FilterListValue[] {\n  if (!encodedFilters) return [];\n  let filtersFromQuery: FilterListValue[] = [];\n  try {\n    filtersFromQuery = JSON.parse(atob(decodeURIComponent(encodedFilters)));\n    filtersFromQuery.map(filterValue => {\n      // set value key as value so selects work properly\n      if (filterValue.valueKey != null) {\n        filterValue.value = filterValue.valueKey;\n      }\n      return filterValue;\n    });\n  } catch (e) {\n    //\n  }\n  return filtersFromQuery;\n}\n","import {Key} from 'react';\nimport {BackendFilter} from '../backend-filter';\n\nexport interface FilterListValue {\n  key: Key;\n  value: BackendFilter['control']['defaultValue'];\n  operator?: BackendFilter['defaultOperator'];\n  valueKey?: Key;\n  isInactive?: boolean;\n  extraFilters?: {key: string; operator: string; value: any}[];\n}\n\nexport function encodeBackendFilters(\n  filterValues: FilterListValue[] | null,\n  filters?: BackendFilter[]\n): string {\n  if (!filterValues) return '';\n\n  // prepare values for backend\n  filterValues = !filters\n    ? filterValues\n    : filterValues\n        .filter(item => item.value !== '')\n        .map(item => transformValue(item, filters));\n\n  // remove all placeholder filters\n  filterValues = filterValues.filter(fm => !fm.isInactive);\n\n  if (!filterValues.length) {\n    return '';\n  }\n\n  return encodeURIComponent(btoa(JSON.stringify(filterValues)));\n}\n\nfunction transformValue(\n  filterValue: FilterListValue,\n  filters: BackendFilter[]\n) {\n  const filterConfig = filters.find(f => f.key === filterValue.key);\n  // select components will use a key always, because we can't use objects as\n  // value. Map over select options and replace key with actual value\n  if (filterConfig?.control.type === 'select') {\n    const option = (filterConfig.control.options || []).find(\n      o => o.key === filterValue.value\n    );\n    // if it's language or country select, there might not be an option\n    if (option) {\n      return {...filterValue, value: option.value, valueKey: option.key};\n    }\n  }\n\n  if (filterConfig?.extraFilters?.length) {\n    filterValue['extraFilters'] = filterConfig.extraFilters;\n  }\n\n  return filterValue;\n}\n","import {useNavigate, useSearchParams} from 'react-router-dom';\nimport {Key, useCallback, useMemo} from 'react';\nimport {BackendFilter} from './backend-filter';\nimport {BackendFiltersUrlKey} from './backend-filters-url-key';\nimport {decodeBackendFilters} from './utils/decode-backend-filters';\nimport {\n  encodeBackendFilters,\n  FilterListValue,\n} from './utils/encode-backend-filters';\n\nexport function useBackendFilterUrlParams(\n  filters?: BackendFilter[],\n  pinnedFilters?: string[]\n) {\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n\n  const encodedFilters = searchParams.get(BackendFiltersUrlKey);\n\n  const decodedFilters: FilterListValue[] = useMemo(() => {\n    if (!filters) return [];\n    const decoded = decodeBackendFilters(encodedFilters);\n\n    // if filter is pinned, and it is not applied yet, add a placeholder\n    (pinnedFilters || []).forEach(key => {\n      if (!decoded.find(f => f.key === key)) {\n        const config = filters.find(f => f.key === key)!;\n        decoded.push({\n          key,\n          value: config.control.defaultValue,\n          operator: config.defaultOperator,\n          isInactive: true,\n        });\n      }\n    });\n\n    // preserve original filter order from configuration\n    decoded.sort(\n      (a, b) =>\n        filters.findIndex(f => f.key === a.key) -\n        filters.findIndex(f => f.key === b.key)\n    );\n\n    return decoded;\n  }, [encodedFilters, pinnedFilters, filters]);\n\n  const getDecodedWithoutKeys = useCallback(\n    (values: (FilterListValue | Key)[]) => {\n      const newFilters = [...decodedFilters];\n      values.forEach(value => {\n        const key = typeof value === 'object' ? value.key : value;\n        const index = newFilters.findIndex(f => f.key === key);\n        if (index > -1) {\n          newFilters.splice(index, 1);\n        }\n      });\n      return newFilters;\n    },\n    [decodedFilters]\n  );\n\n  const replaceAll = useCallback(\n    (filterValues: FilterListValue[]) => {\n      const encodedFilters = encodeBackendFilters(filterValues, filters);\n      if (encodedFilters) {\n        searchParams.set(BackendFiltersUrlKey, encodedFilters);\n      } else {\n        searchParams.delete(BackendFiltersUrlKey);\n      }\n      navigate({search: `?${searchParams}`}, {replace: true});\n    },\n    [filters, navigate, searchParams]\n  );\n\n  const add = useCallback(\n    (filterValues: FilterListValue[]) => {\n      const existing = getDecodedWithoutKeys(filterValues);\n      const decodedFilters = [...existing, ...filterValues];\n      replaceAll(decodedFilters);\n    },\n    [getDecodedWithoutKeys, replaceAll]\n  );\n\n  const remove = useCallback(\n    (key: Key) => replaceAll(getDecodedWithoutKeys([key])),\n    [getDecodedWithoutKeys, replaceAll]\n  );\n\n  return {\n    add,\n    remove,\n    replaceAll,\n    decodedFilters,\n    encodedFilters,\n  };\n}\n","import {ComponentType} from 'react';\nimport {MessageDescriptor} from '../../i18n/message-descriptor';\nimport {NormalizedModel} from '@common/datatable/filters/normalized-model';\nimport {ChipValue} from '@common/ui/forms/input-field/chip-field/chip-field';\nimport {AbsoluteDateRange} from '@common/ui/forms/input-field/date/date-range-picker/form-date-range-picker';\nimport {DateValue} from '@internationalized/date';\nimport {FilterListControlProps} from '@common/datatable/filters/filter-list/filter-list-control';\n\nexport interface FilterSelectControl {\n  type: FilterControlType.Select;\n  options: {label: MessageDescriptor; key: string | number; value: any}[];\n  defaultValue?: string | number | boolean;\n  placeholder?: MessageDescriptor;\n  searchPlaceholder?: MessageDescriptor;\n  showSearchField?: boolean;\n}\n\nexport interface FilterNumberInputControl {\n  type: FilterControlType.Input;\n  placeholder?: MessageDescriptor;\n  inputType: 'number';\n  minValue?: number;\n  maxValue?: number;\n  defaultValue: number;\n}\n\nexport interface FilterTextInputControl {\n  type: FilterControlType.Input;\n  placeholder?: MessageDescriptor;\n  inputType: 'string';\n  minLength?: number;\n  maxLength?: number;\n  defaultValue: string;\n}\n\nexport interface FilterSelectModelControl {\n  type: FilterControlType.SelectModel;\n  model: string;\n  defaultValue?: NormalizedModel;\n}\n\nexport interface FilterChipFieldControl {\n  type: FilterControlType.ChipField;\n  options: FilterSelectControl['options'];\n  placeholder?: MessageDescriptor;\n  defaultValue: ChipValue[];\n}\n\nexport interface FilterBooleanToggleControl {\n  type: FilterControlType.BooleanToggle;\n  // value can be something other than boolean, toggling will either send that value or nothing\n  defaultValue: string | number | boolean | null;\n}\n\nexport interface DatePickerFilterControl {\n  type: FilterControlType.DateRangePicker;\n  defaultValue: AbsoluteDateRange;\n  min?: DateValue;\n  max?: DateValue;\n}\n\nexport interface CustomFilterControl {\n  type: FilterControlType.Custom;\n  panel: ComponentType<{filter: BackendFilter<CustomFilterControl>}>;\n  listItem: ComponentType<FilterListControlProps<number, CustomFilterControl>>;\n  defaultValue?: any;\n}\n\nexport type FilterControl =\n  | FilterSelectControl\n  | FilterNumberInputControl\n  | FilterTextInputControl\n  | FilterSelectModelControl\n  | FilterChipFieldControl\n  | DatePickerFilterControl\n  | FilterBooleanToggleControl\n  | CustomFilterControl;\n\nexport interface BackendFilter<T = FilterControl> {\n  key: string;\n  label: MessageDescriptor;\n  description?: MessageDescriptor;\n  control: T;\n  defaultOperator: FilterOperator;\n  operators?: FilterOperator[];\n  extraFilters?: {key: string; operator: FilterOperator; value: any}[];\n}\n\nexport enum FilterControlType {\n  Select = 'select',\n  DateRangePicker = 'dateRangePicker',\n  SelectModel = 'selectModel',\n  Input = 'input',\n  BooleanToggle = 'booleanToggle',\n  ChipField = 'chipField',\n  Custom = 'custom',\n}\n\nexport enum FilterOperator {\n  eq = '=',\n  ne = '!=',\n  gt = '>',\n  gte = '>=',\n  lt = '<',\n  lte = '<=',\n  has = 'has',\n  hasAll = 'hasAll',\n  doesntHave = 'doesntHave',\n  between = 'between',\n}\n\nexport const ALL_PRIMITIVE_OPERATORS = [\n  FilterOperator.eq,\n  FilterOperator.ne,\n  FilterOperator.gt,\n  FilterOperator.gte,\n  FilterOperator.lt,\n  FilterOperator.lte,\n];\n","import {BackendFilter, FilterControlType} from '../backend-filter';\nimport {ComponentPropsWithRef, forwardRef, ReactNode} from 'react';\nimport {Button} from '@common/ui/buttons/button';\nimport {KeyboardArrowDownIcon} from '@common/icons/material/KeyboardArrowDown';\nimport {Trans} from '@common/i18n/trans';\nimport clsx from 'clsx';\n\ninterface TriggerButtonProps\n  extends Omit<ComponentPropsWithRef<'button'>, 'color'> {\n  isInactive?: boolean;\n  filter: BackendFilter;\n  children?: ReactNode;\n}\nexport const FilterListTriggerButton = forwardRef<\n  HTMLButtonElement,\n  TriggerButtonProps\n>((props, ref) => {\n  // pass through all props from menu trigger and dialog trigger to button\n  const {isInactive, filter, ...domProps} = props;\n\n  if (isInactive) {\n    return <InactiveFilterButton filter={filter} {...domProps} ref={ref} />;\n  }\n\n  return <ActiveFilterButton filter={filter} {...domProps} ref={ref} />;\n});\n\ninterface InactiveFilterButtonProps\n  extends Omit<ComponentPropsWithRef<'button'>, 'color'> {\n  filter: BackendFilter;\n}\nexport const InactiveFilterButton = forwardRef<\n  HTMLButtonElement,\n  InactiveFilterButtonProps\n>(({filter, ...domProps}, ref) => {\n  return (\n    <Button\n      variant=\"outline\"\n      size=\"xs\"\n      color=\"paper\"\n      radius=\"rounded-md\"\n      border=\"border\"\n      ref={ref}\n      endIcon={<KeyboardArrowDownIcon />}\n      {...domProps}\n    >\n      <Trans {...filter.label} />\n    </Button>\n  );\n});\n\nexport const ActiveFilterButton = forwardRef<\n  HTMLButtonElement,\n  InactiveFilterButtonProps\n>(({filter, children, ...domProps}, ref) => {\n  const isBoolean = filter.control.type === FilterControlType.BooleanToggle;\n  return (\n    <Button\n      variant=\"outline\"\n      size=\"xs\"\n      color=\"primary\"\n      radius=\"rounded-r-md\"\n      border=\"border-y border-r\"\n      endIcon={!isBoolean && <KeyboardArrowDownIcon />}\n      ref={ref}\n      {...domProps}\n    >\n      <span\n        className={clsx(\n          !isBoolean && 'border-r border-r-primary-light mr-8 pr-8'\n        )}\n      >\n        <Trans {...filter.label} />\n      </span>\n      {children}\n    </Button>\n  );\n});\n","import {FormSelect} from '@common/ui/forms/select/select';\nimport {Item} from '@common/ui/forms/listbox/item';\nimport {Trans} from '@common/i18n/trans';\nimport {FilterPanelProps} from '@common/datatable/filters/panels/filter-panel-props';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {FilterSelectControl} from '@common/datatable/filters/backend-filter';\n\nexport function SelectFilterPanel({\n  filter,\n}: FilterPanelProps<FilterSelectControl>) {\n  const {trans} = useTrans();\n\n  return (\n    <FormSelect\n      size=\"sm\"\n      name={`${filter.key}.value`}\n      selectionMode=\"single\"\n      showSearchField={filter.control.showSearchField}\n      placeholder={\n        filter.control.placeholder\n          ? trans(filter.control.placeholder)\n          : undefined\n      }\n      searchPlaceholder={\n        filter.control.searchPlaceholder\n          ? trans(filter.control.searchPlaceholder)\n          : undefined\n      }\n    >\n      {filter.control.options.map(option => (\n        <Item key={option.key} value={option.key}>\n          <Trans {...option.label} />\n        </Item>\n      ))}\n    </FormSelect>\n  );\n}\n","import {DialogTrigger} from '../../../ui/overlays/dialog/dialog-trigger';\nimport {FilterListTriggerButton} from './filter-list-trigger-button';\nimport {ReactNode} from 'react';\nimport {useForm} from 'react-hook-form';\nimport {FilterItemFormValue} from '../add-filter-dialog';\nimport {useDialogContext} from '../../../ui/overlays/dialog/dialog-context';\nimport {Dialog} from '../../../ui/overlays/dialog/dialog';\nimport {DialogHeader} from '../../../ui/overlays/dialog/dialog-header';\nimport {Trans} from '../../../i18n/trans';\nimport {DialogBody} from '../../../ui/overlays/dialog/dialog-body';\nimport {Form} from '../../../ui/forms/form';\nimport {DialogFooter} from '../../../ui/overlays/dialog/dialog-footer';\nimport {Button} from '../../../ui/buttons/button';\nimport {FilterListControlProps} from './filter-list-control';\n\ninterface FilterListItemDialogTriggerProps extends FilterListControlProps<any> {\n  label: ReactNode;\n  panel: ReactNode;\n}\nexport function FilterListItemDialogTrigger(\n  props: FilterListItemDialogTriggerProps\n) {\n  const {onValueChange, isInactive, filter, label} = props;\n  return (\n    <DialogTrigger\n      offset={10}\n      type=\"popover\"\n      onClose={(value?: FilterItemFormValue) => {\n        if (value !== undefined) {\n          onValueChange(value);\n        }\n      }}\n    >\n      <FilterListTriggerButton isInactive={isInactive} filter={filter}>\n        {label}\n      </FilterListTriggerButton>\n      <FilterListControlDialog {...props} />\n    </DialogTrigger>\n  );\n}\n\nexport function FilterListControlDialog({\n  filter,\n  panel,\n  value,\n  operator,\n}: FilterListItemDialogTriggerProps) {\n  const form = useForm<Record<string, FilterItemFormValue>>({\n    defaultValues: {\n      [filter.key]: {value, operator},\n    },\n  });\n  const {close, formId} = useDialogContext();\n  return (\n    <Dialog size=\"xs\">\n      <DialogHeader>\n        <Trans {...filter.label} />\n      </DialogHeader>\n      <DialogBody padding=\"px-14 pt-14 pb-4 max-h-288\">\n        <Form\n          form={form}\n          id={formId}\n          onSubmit={formValue => {\n            close(formValue[filter.key]);\n          }}\n        >\n          {filter.description && (\n            <div className=\"text-muted text-xs mb-14\">\n              <Trans {...filter.description} />\n            </div>\n          )}\n          {panel}\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button\n          form={formId}\n          type=\"submit\"\n          variant=\"flat\"\n          color=\"primary\"\n          size=\"xs\"\n        >\n          <Trans message=\"Apply\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {\n  keepPreviousData,\n  useQuery,\n  UseQueryOptions,\n} from '@tanstack/react-query';\nimport {NormalizedModel} from '../../datatable/filters/normalized-model';\nimport {apiClient} from '../../http/query-client';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\n\ninterface Response extends BackendResponse {\n  results: NormalizedModel[];\n}\n\ninterface Params {\n  query?: string;\n  perPage?: number;\n  with?: string;\n}\n\nexport function useNormalizedModels(\n  endpoint: string,\n  queryParams: Params,\n  queryOptions?: Omit<\n    UseQueryOptions<Response, unknown, Response, [string, Params]>,\n    'queryKey' | 'queryFn'\n  > | null,\n) {\n  return useQuery({\n    queryKey: [endpoint, queryParams],\n    queryFn: () => fetchModels(endpoint, queryParams),\n    placeholderData: keepPreviousData,\n    ...queryOptions,\n  });\n}\n\nasync function fetchModels(endpoint: string, params: Params) {\n  return apiClient.get<Response>(endpoint, {params}).then(r => r.data);\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {NormalizedModel} from '../../datatable/filters/normalized-model';\nimport {apiClient} from '../../http/query-client';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\n\ninterface Response extends BackendResponse {\n  model: NormalizedModel;\n}\n\nexport function useNormalizedModel(\n  endpoint: string,\n  queryParams?: Record<string, string>,\n  queryOptions?: {enabled?: boolean},\n) {\n  return useQuery({\n    queryKey: [endpoint, queryParams],\n    queryFn: () => fetchModel(endpoint, queryParams),\n    ...queryOptions,\n  });\n}\n\nasync function fetchModel(\n  endpoint: string,\n  params?: Record<string, string>,\n): Promise<Response> {\n  return apiClient.get(endpoint, {params}).then(r => r.data);\n}\n","import React, {ReactNode, useRef, useState} from 'react';\nimport {useTrans} from '../../i18n/use-trans';\nimport {Trans} from '../../i18n/trans';\nimport {Avatar} from '../images/avatar';\nimport {Tooltip} from '../tooltip/tooltip';\nimport {IconButton} from '../buttons/icon-button';\nimport {EditIcon} from '../../icons/material/Edit';\nimport {message} from '../../i18n/message';\nimport {Item} from './listbox/item';\nimport {useController, useFormContext} from 'react-hook-form';\nimport {useControlledState} from '@react-stately/utils';\nimport {getInputFieldClassNames} from './input-field/get-input-field-class-names';\nimport clsx from 'clsx';\nimport {Skeleton} from '../skeleton/skeleton';\nimport {useNormalizedModels} from '../../users/queries/use-normalized-models';\nimport {useNormalizedModel} from '../../users/queries/use-normalized-model';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {opacityAnimation} from '../animation/opacity-animation';\nimport {Select} from '@common/ui/forms/select/select';\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\nimport {BaseFieldProps} from '@common/ui/forms/input-field/base-field-props';\n\ninterface NormalizedModelFieldProps {\n  label?: ReactNode;\n  className?: string;\n  background?: BaseFieldProps['background'];\n  value?: string | number;\n  placeholder?: MessageDescriptor;\n  searchPlaceholder?: MessageDescriptor;\n  defaultValue?: string | number;\n  onChange?: (value: string | number) => void;\n  invalid?: boolean;\n  errorMessage?: string;\n  description?: ReactNode;\n  autoFocus?: boolean;\n  queryParams?: Record<string, string>;\n  endpoint: string;\n  disabled?: boolean;\n  required?: boolean;\n}\nexport function NormalizedModelField({\n  label,\n  className,\n  background,\n  value,\n  defaultValue = '',\n  placeholder = message('Select item...'),\n  searchPlaceholder = message('Find an item...'),\n  onChange,\n  description,\n  errorMessage,\n  invalid,\n  autoFocus,\n  queryParams,\n  endpoint,\n  disabled,\n  required,\n}: NormalizedModelFieldProps) {\n  const inputRef = useRef<HTMLButtonElement>(null);\n  const [inputValue, setInputValue] = useState('');\n  const [selectedValue, setSelectedValue] = useControlledState(\n    value,\n    defaultValue,\n    onChange,\n  );\n  const query = useNormalizedModels(endpoint, {\n    query: inputValue,\n    ...queryParams,\n  });\n  const {trans} = useTrans();\n\n  const fieldClassNames = getInputFieldClassNames({size: 'md'});\n\n  if (selectedValue) {\n    return (\n      <div className={className}>\n        <div className={fieldClassNames.label}>{label}</div>\n        <div\n          className={clsx(\n            'rounded-input border p-8',\n            background,\n            invalid && 'border-danger',\n          )}\n        >\n          <AnimatePresence initial={false} mode=\"wait\">\n            <SelectedModelPreview\n              disabled={disabled}\n              endpoint={endpoint}\n              modelId={selectedValue}\n              queryParams={queryParams}\n              onEditClick={() => {\n                setSelectedValue('');\n                setInputValue('');\n                requestAnimationFrame(() => {\n                  inputRef.current?.focus();\n                  inputRef.current?.click();\n                });\n              }}\n            />\n          </AnimatePresence>\n        </div>\n        {description && !errorMessage && (\n          <div className={fieldClassNames.description}>{description}</div>\n        )}\n        {errorMessage && (\n          <div className={fieldClassNames.error}>{errorMessage}</div>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <Select\n      className={className}\n      showSearchField\n      invalid={invalid}\n      errorMessage={errorMessage}\n      description={description}\n      color=\"white\"\n      isAsync\n      background={background}\n      placeholder={trans(placeholder)}\n      searchPlaceholder={trans(searchPlaceholder)}\n      label={label}\n      isLoading={query.isFetching}\n      items={query.data?.results}\n      inputValue={inputValue}\n      onInputValueChange={setInputValue}\n      selectionMode=\"single\"\n      selectedValue={selectedValue}\n      onSelectionChange={setSelectedValue}\n      ref={inputRef}\n      autoFocus={autoFocus}\n      disabled={disabled}\n      required={required}\n    >\n      {model => (\n        <Item\n          value={model.id}\n          key={model.id}\n          description={model.description}\n          startIcon={<Avatar src={model.image} />}\n        >\n          {model.name}\n        </Item>\n      )}\n    </Select>\n  );\n}\n\ninterface SelectedModelPreviewProps {\n  modelId: string | number;\n  selectedValue?: number | string;\n  onEditClick?: () => void;\n  endpoint?: string;\n  disabled?: boolean;\n  queryParams?: NormalizedModelFieldProps['queryParams'];\n}\nfunction SelectedModelPreview({\n  modelId,\n  onEditClick,\n  endpoint,\n  disabled,\n  queryParams,\n}: SelectedModelPreviewProps) {\n  const {data, isLoading} = useNormalizedModel(\n    `${endpoint}/${modelId}`,\n    queryParams,\n  );\n\n  if (isLoading || !data?.model) {\n    return <LoadingSkeleton key=\"skeleton\" />;\n  }\n\n  return (\n    <m.div\n      className={clsx(\n        'flex items-center gap-10',\n        disabled && 'pointer-events-none cursor-not-allowed text-disabled',\n      )}\n      key=\"preview\"\n      {...opacityAnimation}\n    >\n      {data.model.image && <Avatar src={data.model.image} />}\n      <div>\n        <div className=\"text-sm leading-4\">{data.model.name}</div>\n        <div className=\"text-xs text-muted\">{data.model.description}</div>\n      </div>\n      <Tooltip label={<Trans message=\"Change item\" />}>\n        <IconButton\n          className=\"ml-auto text-muted\"\n          size=\"sm\"\n          onClick={onEditClick}\n          disabled={disabled}\n        >\n          <EditIcon />\n        </IconButton>\n      </Tooltip>\n    </m.div>\n  );\n}\n\nfunction LoadingSkeleton() {\n  return (\n    <m.div className=\"flex items-center gap-10\" {...opacityAnimation}>\n      <Skeleton variant=\"rect\" size=\"w-32 h-32\" />\n      <div className=\"max-h-[36px] flex-auto\">\n        <Skeleton className=\"text-xs\" />\n        <Skeleton className=\"max-h-8 text-xs\" />\n      </div>\n      <Skeleton variant=\"icon\" size=\"w-24 h-24\" />\n    </m.div>\n  );\n}\n\ninterface FormNormalizedModelFieldProps extends NormalizedModelFieldProps {\n  name: string;\n}\nexport function FormNormalizedModelField({\n  name,\n  ...fieldProps\n}: FormNormalizedModelFieldProps) {\n  const {clearErrors} = useFormContext();\n  const {\n    field: {onChange, value = ''},\n    fieldState: {invalid, error},\n  } = useController({\n    name,\n  });\n\n  return (\n    <NormalizedModelField\n      value={value}\n      onChange={value => {\n        onChange(value);\n        clearErrors(name);\n      }}\n      invalid={invalid}\n      errorMessage={error?.message}\n      {...fieldProps}\n    />\n  );\n}\n","import {FilterPanelProps} from './filter-panel-props';\nimport {FormNormalizedModelField} from '@common/ui/forms/normalized-model-field';\nimport {FilterSelectModelControl} from '@common/datatable/filters/backend-filter';\n\nexport function NormalizedModelFilterPanel({\n  filter,\n}: FilterPanelProps<FilterSelectModelControl>) {\n  return (\n    <FormNormalizedModelField\n      name={`${filter.key}.value`}\n      endpoint={`normalized-models/${filter.control.model}`}\n    />\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const DateRangeIcon = createSvgIcon(\n  <path d=\"M7 11h2v2H7v-2zm14-5v14c0 1.1-.9 2-2 2H5c-1.11 0-2-.9-2-2l.01-14c0-1.1.88-2 1.99-2h1V2h2v2h8V2h2v2h1c1.1 0 2 .9 2 2zM5 8h14V6H5v2zm14 12V10H5v10h14zm-4-7h2v-2h-2v2zm-4 0h2v-2h-2v2z\" />\n, 'DateRangeOutlined');\n","import {FocusScope} from '@react-aria/focus';\nimport React, {ComponentPropsWithoutRef, CSSProperties, ReactNode} from 'react';\nimport clsx from 'clsx';\n\ninterface InputProps {\n  className?: string;\n  children: ReactNode;\n  autoFocus?: boolean;\n  disabled?: boolean;\n  style?: CSSProperties;\n  inputProps?: ComponentPropsWithoutRef<'div'>;\n  wrapperProps?: ComponentPropsWithoutRef<'div'>;\n  onClick?: React.MouseEventHandler<HTMLDivElement>;\n}\n\nexport const Input = React.forwardRef<HTMLDivElement, InputProps>(\n  (props, ref) => {\n    const {\n      children,\n      inputProps,\n      wrapperProps,\n      className,\n      autoFocus,\n      style,\n      onClick,\n    } = props;\n\n    return (\n      <div {...wrapperProps} onClick={onClick}>\n        <div\n          {...inputProps}\n          role=\"group\"\n          className={clsx(\n            className,\n            'flex items-center focus-within:ring focus-within:ring-primary/focus focus-within:border-primary/60'\n          )}\n          ref={ref}\n          style={style}\n        >\n          <FocusScope autoFocus={autoFocus}>{children}</FocusScope>\n        </div>\n      </div>\n    );\n  }\n);\n","import React, {ComponentPropsWithoutRef, FocusEventHandler, Ref} from 'react';\r\nimport clsx from 'clsx';\r\nimport {createFocusManager} from '@react-aria/focus';\r\nimport {mergeProps, useObjectRef} from '@react-aria/utils';\r\nimport {getInputFieldClassNames} from '../../get-input-field-class-names';\r\nimport {Field, FieldProps} from '../../field';\r\nimport {Input} from '../../input';\r\nimport {useField} from '../../use-field';\r\n\r\nexport interface DatePickerFieldProps\r\n  extends Omit<FieldProps, 'fieldClassNames'> {\r\n  inputRef?: Ref<HTMLDivElement>;\r\n  onBlur?: FocusEventHandler;\r\n  showCalendarFooter?: boolean;\r\n}\r\nexport const DatePickerField = React.forwardRef<\r\n  HTMLDivElement,\r\n  DatePickerFieldProps\r\n>(({inputRef, wrapperProps, children, onBlur, ...other}, ref) => {\r\n  const fieldClassNames = getInputFieldClassNames(other);\r\n  const objRef = useObjectRef(ref);\r\n\r\n  const {fieldProps, inputProps} = useField({\r\n    ...other,\r\n    focusRef: objRef,\r\n    labelElementType: 'span',\r\n  });\r\n\r\n  fieldClassNames.wrapper = clsx(\r\n    fieldClassNames.wrapper,\r\n    other.disabled && 'pointer-events-none',\r\n  );\r\n\r\n  return (\r\n    <Field\r\n      wrapperProps={mergeProps<ComponentPropsWithoutRef<'div'>[]>(\r\n        wrapperProps!,\r\n        {\r\n          onBlur: e => {\r\n            if (objRef.current && !objRef.current.contains(e.relatedTarget)) {\r\n              onBlur?.(e);\r\n            }\r\n          },\r\n          onClick: () => {\r\n            // focus first segment when clicking on label or somewhere else in the field, but no directly on segment\r\n            const focusManager = createFocusManager(objRef);\r\n            focusManager?.focusFirst();\r\n          },\r\n        },\r\n      )}\r\n      fieldClassNames={fieldClassNames}\r\n      ref={objRef}\r\n      {...fieldProps}\r\n    >\r\n      <Input\r\n        inputProps={inputProps}\r\n        className={clsx(fieldClassNames.input, 'gap-10')}\r\n        ref={inputRef}\r\n      >\r\n        {children}\r\n      </Input>\r\n    </Field>\r\n  );\r\n});\r\n","import {CalendarDate, DateValue} from '@internationalized/date';\n\nexport function getDefaultGranularity(date: DateValue) {\n  if (date instanceof CalendarDate) {\n    return 'day';\n  }\n  return 'minute';\n}\n\nexport function dateIsInvalid(\n  date: CalendarDate,\n  min?: DateValue,\n  max?: DateValue\n) {\n  return (\n    (min != null && date.compare(min) < 0) ||\n    (max != null && date.compare(max) > 0)\n  );\n}\n","import {useState} from 'react';\nimport {DateValue, toZoned, ZonedDateTime} from '@internationalized/date';\nimport {getDefaultGranularity} from './utils';\nimport type {DatePickerValueProps} from './date-picker/use-date-picker-state';\nimport {DateRangeValue} from './date-range-picker/date-range-value';\nimport {useUserTimezone} from '@common/i18n/use-user-timezone';\n\nexport function useBaseDatePickerState(\n  selectedDate: DateValue,\n  props:\n    | DatePickerValueProps<ZonedDateTime>\n    | DatePickerValueProps<Partial<DateRangeValue>, DateRangeValue>\n) {\n  const timezone = useUserTimezone();\n  const [calendarIsOpen, setCalendarIsOpen] = useState(false);\n  const closeDialogOnSelection = props.closeDialogOnSelection ?? true;\n\n  const granularity = props.granularity || getDefaultGranularity(selectedDate);\n  const min = props.min ? toZoned(props.min, timezone) : undefined;\n  const max = props.max ? toZoned(props.max, timezone) : undefined;\n\n  return {\n    timezone,\n    granularity,\n    min,\n    max,\n    calendarIsOpen,\n    setCalendarIsOpen,\n    closeDialogOnSelection,\n  };\n}\n","import {ZonedDateTime} from '@internationalized/date';\n\nexport function startOfDay(date: ZonedDateTime): ZonedDateTime {\n  return date.set({hour: 0, minute: 0, second: 0, millisecond: 0});\n}\n","import {ZonedDateTime} from '@internationalized/date';\n\nexport function endOfDay(date: ZonedDateTime): ZonedDateTime {\n  return date.set({\n    hour: 24 - 1,\n    minute: 60 - 1,\n    second: 60 - 1,\n    millisecond: 1000 - 1,\n  });\n}\n","import {useControlledState} from '@react-stately/utils';\nimport {HTMLAttributes, useCallback, useState} from 'react';\nimport {\n  CalendarDate,\n  DateValue,\n  endOfMonth,\n  isSameDay,\n  isSameMonth,\n  maxDate,\n  minDate,\n  startOfMonth,\n  toCalendarDate,\n  toZoned,\n  ZonedDateTime,\n} from '@internationalized/date';\nimport {\n  BaseDatePickerState,\n  DatePickerValueProps,\n} from '../date-picker/use-date-picker-state';\nimport {DateRangeValue} from './date-range-value';\nimport {useBaseDatePickerState} from '../use-base-date-picker-state';\nimport {startOfDay} from '@common/utils/date/start-of-day';\nimport {endOfDay} from '@common/utils/date/end-of-day';\nimport {useCurrentDateTime} from '@common/i18n/use-current-date-time';\n\nexport interface IsPlaceholderValue {\n  start: boolean;\n  end: boolean;\n}\n\nexport type DateRangePickerState = BaseDatePickerState<\n  DateRangeValue,\n  IsPlaceholderValue\n>;\n\nexport function useDateRangePickerState(\n  props: DatePickerValueProps<Partial<DateRangeValue>, DateRangeValue>,\n): DateRangePickerState {\n  const now = useCurrentDateTime();\n  const [isPlaceholder, setIsPlaceholder] = useState<IsPlaceholderValue>({\n    start: (!props.value || !props.value.start) && !props.defaultValue?.start,\n    end: (!props.value || !props.value.end) && !props.defaultValue?.end,\n  });\n\n  // if user clears the date, we will want to still keep an\n  // instance internally, but return null via \"onChange\" callback\n  const setStateValue = props.onChange;\n  const [internalValue, setInternalValue] = useControlledState(\n    props.value ? completeRange(props.value, now) : undefined,\n    !props.value ? completeRange(props.defaultValue, now) : undefined,\n    value => {\n      setIsPlaceholder({start: false, end: false});\n      setStateValue?.(value);\n    },\n  );\n\n  const {\n    min,\n    max,\n    granularity,\n    timezone,\n    calendarIsOpen,\n    setCalendarIsOpen,\n    closeDialogOnSelection,\n  } = useBaseDatePickerState(internalValue.start, props);\n\n  const clear = useCallback(() => {\n    setIsPlaceholder({start: true, end: true});\n    setInternalValue(completeRange(null, now));\n    setStateValue?.(null);\n    setCalendarIsOpen(false);\n  }, [now, setInternalValue, setStateValue, setCalendarIsOpen]);\n\n  const [anchorDate, setAnchorDate] = useState<CalendarDate | null>(null);\n  const [isHighlighting, setIsHighlighting] = useState(false);\n  const [highlightedRange, setHighlightedRange] =\n    useState<DateRangeValue>(internalValue);\n  const [calendarDates, setCalendarDates] = useState<CalendarDate[]>(() => {\n    return rangeToCalendarDates(internalValue, max);\n  });\n\n  const constrainRange = useCallback(\n    (range: DateRangeValue): DateRangeValue => {\n      let start = range.start;\n      let end = range.end;\n\n      // make sure start date is after min date and before max date/range end\n      if (min) {\n        start = maxDate(start, min);\n      }\n      const startMax = max ? minDate(max, end) : end;\n      start = minDate(start, startMax);\n\n      // make sure end date is after min date/range start and before max date\n      const endMin = min ? maxDate(min, start) : start;\n      end = maxDate(end, endMin);\n\n      if (max) {\n        end = minDate(end, max);\n      }\n\n      return {start: toZoned(start, timezone), end: toZoned(end, timezone)};\n    },\n    [min, max, timezone],\n  );\n\n  const setSelectedValue = useCallback(\n    (newRange: DateRangeValue) => {\n      const value = {\n        ...constrainRange(newRange),\n        preset: newRange.preset,\n      };\n      setInternalValue(value);\n      setHighlightedRange(value);\n      setCalendarDates(rangeToCalendarDates(value, max));\n      setIsPlaceholder({start: false, end: false});\n    },\n    [setInternalValue, constrainRange, max],\n  );\n\n  const dayIsActive = useCallback(\n    (day: CalendarDate) => {\n      return (\n        (!isPlaceholder.start && isSameDay(day, highlightedRange.start)) ||\n        (!isPlaceholder.end && isSameDay(day, highlightedRange.end))\n      );\n    },\n    [highlightedRange, isPlaceholder],\n  );\n\n  const dayIsHighlighted = useCallback(\n    (day: CalendarDate) => {\n      return (\n        (isHighlighting || (!isPlaceholder.start && !isPlaceholder.end)) &&\n        day.compare(highlightedRange.start) >= 0 &&\n        day.compare(highlightedRange.end) <= 0\n      );\n    },\n    [highlightedRange, isPlaceholder, isHighlighting],\n  );\n\n  const dayIsRangeStart = useCallback(\n    (day: CalendarDate) => isSameDay(day, highlightedRange.start),\n    [highlightedRange],\n  );\n\n  const dayIsRangeEnd = useCallback(\n    (day: CalendarDate) => isSameDay(day, highlightedRange.end),\n    [highlightedRange],\n  );\n\n  const getCellProps = useCallback(\n    (date: CalendarDate, isSameMonth: boolean): HTMLAttributes<HTMLElement> => {\n      return {\n        onPointerEnter: () => {\n          if (isHighlighting && isSameMonth) {\n            setHighlightedRange(\n              makeRange({start: anchorDate!, end: date, timezone}),\n            );\n          }\n        },\n        onClick: () => {\n          if (!isHighlighting) {\n            setIsHighlighting(true);\n            setAnchorDate(date);\n            setHighlightedRange(makeRange({start: date, end: date, timezone}));\n          } else {\n            const finalRange = makeRange({\n              start: anchorDate!,\n              end: date,\n              timezone,\n            });\n            // cast to start and end of day after making range, because \"makeRange\"\n            // will flip start and end dates, if they are out of order\n            finalRange.start = startOfDay(finalRange.start);\n            finalRange.end = endOfDay(finalRange.end);\n            setIsHighlighting(false);\n            setAnchorDate(null);\n            setSelectedValue?.(finalRange);\n            if (closeDialogOnSelection) {\n              setCalendarIsOpen?.(false);\n            }\n          }\n        },\n      };\n    },\n    [\n      anchorDate,\n      isHighlighting,\n      setSelectedValue,\n      setCalendarIsOpen,\n      closeDialogOnSelection,\n      timezone,\n    ],\n  );\n\n  return {\n    selectedValue: internalValue,\n    setSelectedValue,\n    calendarIsOpen,\n    setCalendarIsOpen,\n    dayIsActive,\n    dayIsHighlighted,\n    dayIsRangeStart,\n    dayIsRangeEnd,\n    getCellProps,\n    calendarDates,\n    setIsPlaceholder,\n    isPlaceholder,\n    clear,\n    setCalendarDates,\n    min,\n    max,\n    granularity,\n    timezone,\n    closeDialogOnSelection,\n  };\n}\n\nfunction rangeToCalendarDates(\n  range: DateRangeValue,\n  max?: DateValue,\n): CalendarDate[] {\n  let start = toCalendarDate(startOfMonth(range.start));\n  let end = toCalendarDate(endOfMonth(range.end));\n\n  // make sure we don't show the same month twice\n  if (isSameMonth(start, end)) {\n    end = endOfMonth(end.add({months: 1}));\n  }\n\n  // if next month is disabled, show previous instead\n  if (max && end.compare(max) > 0) {\n    end = start;\n    start = startOfMonth(start.subtract({months: 1}));\n  }\n  return [start, end];\n}\n\ninterface MakeRangeProps {\n  start: DateValue;\n  end: DateValue;\n  timezone: string;\n}\nfunction makeRange(props: MakeRangeProps): DateRangeValue {\n  const start = toZoned(props.start, props.timezone);\n  const end = toZoned(props.end, props.timezone);\n  if (start.compare(end) > 0) {\n    return {start: end, end: start};\n  }\n  return {start, end};\n}\n\nfunction completeRange(\n  range: Partial<DateRangeValue> | null | undefined,\n  now: ZonedDateTime,\n): DateRangeValue {\n  if (range?.start && range?.end) {\n    return range as DateRangeValue;\n  } else if (!range?.start && range?.end) {\n    range.start = range.end.subtract({months: 1});\n    return range as DateRangeValue;\n  } else if (!range?.end && range?.start) {\n    range.end = range.start.add({months: 1});\n    return range as DateRangeValue;\n  }\n  return {start: now, end: now.add({months: 1})};\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const ArrowRightAltIcon = createSvgIcon(\n  <path d=\"M16.01 11H4v2h12.01v3L20 12l-3.99-4v3z\" />\n, 'ArrowRightAltOutlined');\n","import {ZonedDateTime} from '@internationalized/date';\n\nexport function adjustSegment(\n  value: ZonedDateTime,\n  part: string,\n  amount: number,\n  options: Intl.ResolvedDateTimeFormatOptions\n) {\n  switch (part) {\n    case 'era':\n    case 'year':\n    case 'month':\n    case 'day':\n      return value.cycle(part, amount, {round: part === 'year'});\n  }\n\n  if ('hour' in value) {\n    switch (part) {\n      case 'dayPeriod': {\n        const hours = value.hour;\n        const isPM = hours >= 12;\n        return value.set({hour: isPM ? hours - 12 : hours + 12});\n      }\n      case 'hour':\n      case 'minute':\n      case 'second':\n        return value.cycle(part, amount, {\n          round: part !== 'hour',\n          hourCycle: options.hour12 ? 12 : 24,\n        });\n    }\n  }\n\n  return value;\n}\n","import {ZonedDateTime} from '@internationalized/date';\n\nexport function setSegment(\n  value: ZonedDateTime,\n  part: string,\n  segmentValue: number,\n  options: Intl.ResolvedDateTimeFormatOptions\n) {\n  switch (part) {\n    case 'day':\n    case 'month':\n    case 'year':\n      return value.set({[part]: segmentValue});\n  }\n\n  if ('hour' in value) {\n    switch (part) {\n      case 'dayPeriod': {\n        const hours = value.hour;\n        const wasPM = hours >= 12;\n        const isPM = segmentValue >= 12;\n        if (isPM === wasPM) {\n          return value;\n        }\n        return value.set({hour: wasPM ? hours - 12 : hours + 12});\n      }\n      case 'hour':\n        // In 12 hour time, ensure that AM/PM does not change\n        if (options.hour12) {\n          const hours = value.hour;\n          const wasPM = hours >= 12;\n          if (!wasPM && segmentValue === 12) {\n            segmentValue = 0;\n          }\n          if (wasPM && segmentValue < 12) {\n            segmentValue += 12;\n          }\n        }\n      // fallthrough\n      case 'minute':\n      case 'second':\n        return value.set({[part]: segmentValue});\n    }\n  }\n\n  return value;\n}\n","export const PAGE_STEP = {\n  year: 5,\n  month: 2,\n  day: 7,\n  hour: 2,\n  minute: 15,\n  second: 15,\n  dayPeriod: 1,\n};\n","import {useFocusManager} from '@react-aria/focus';\nimport React, {\n  ComponentPropsWithoutRef,\n  HTMLAttributes,\n  KeyboardEventHandler,\n  useMemo,\n  useRef,\n} from 'react';\nimport {NumberParser} from '@internationalized/number';\nimport {mergeProps} from '@react-aria/utils';\nimport {today, ZonedDateTime} from '@internationalized/date';\nimport {useSelectedLocale} from '@common/i18n/selected-locale';\nimport {useDateFormatter} from '@common/i18n/use-date-formatter';\nimport {DatePickerState} from '../date-picker/use-date-picker-state';\nimport {adjustSegment} from './utils/adjust-segment';\nimport {setSegment} from './utils/set-segment';\nimport {PAGE_STEP} from './utils/page-step';\nimport {DateRangePickerState} from '../date-range-picker/use-date-range-picker-state';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\n\nexport interface EditableSegment {\n  type: 'day' | 'dayPeriod' | 'hour' | 'minute' | 'month' | 'second' | 'year';\n  text: string;\n  value: number;\n  minValue: number;\n  maxValue: number;\n  minLength: number;\n}\n\ninterface DatePickerSegmentProps {\n  segment: EditableSegment;\n  domProps?: ComponentPropsWithoutRef<'div'>;\n  state: DatePickerState | DateRangePickerState;\n  value: ZonedDateTime;\n  onChange: (newValue: ZonedDateTime) => void;\n  isPlaceholder?: boolean;\n}\nexport function EditableDateSegment({\n  segment,\n  domProps,\n  value,\n  onChange,\n  isPlaceholder,\n  state: {timezone, calendarIsOpen, setCalendarIsOpen},\n}: DatePickerSegmentProps) {\n  const isMobile = useIsMobileMediaQuery();\n  const enteredKeys = useRef('');\n  const {localeCode} = useSelectedLocale();\n  const focusManager = useFocusManager();\n  const formatter = useDateFormatter({timeZone: timezone});\n  const parser = useMemo(\n    () => new NumberParser(localeCode, {maximumFractionDigits: 0}),\n    [localeCode],\n  );\n\n  const setSegmentValue = (newValue: number) => {\n    onChange(\n      setSegment(value, segment.type, newValue, formatter.resolvedOptions()),\n    );\n  };\n\n  const adjustSegmentValue = (amount: number) => {\n    onChange(\n      adjustSegment(value, segment.type, amount, formatter.resolvedOptions()),\n    );\n  };\n\n  const backspace = () => {\n    if (parser.isValidPartialNumber(segment.text)) {\n      const newValue = segment.text.slice(0, -1);\n      const parsed = parser.parse(newValue);\n      if (newValue.length === 0 || parsed === 0) {\n        const now = today(timezone);\n        if (segment.type in now) {\n          // @ts-ignore\n          setSegmentValue(now[segment.type]);\n        }\n      } else {\n        setSegmentValue(parsed);\n      }\n      enteredKeys.current = newValue;\n    } else if (segment.type === 'dayPeriod') {\n      adjustSegmentValue(-1);\n    }\n  };\n\n  const onKeyDown: KeyboardEventHandler = e => {\n    if (e.ctrlKey || e.metaKey || e.shiftKey || e.altKey) {\n      return;\n    }\n\n    // Navigation between date segments and deletion\n    switch (e.key) {\n      case 'ArrowLeft':\n        e.preventDefault();\n        e.stopPropagation();\n        focusManager?.focusPrevious();\n        break;\n      case 'ArrowRight':\n        e.preventDefault();\n        e.stopPropagation();\n        focusManager?.focusNext();\n        break;\n      case 'Enter':\n        (e.target as HTMLElement).closest('form')?.requestSubmit();\n        setCalendarIsOpen(!calendarIsOpen);\n        break;\n      case 'Tab':\n        break;\n      case 'Backspace':\n      case 'Delete': {\n        e.preventDefault();\n        e.stopPropagation();\n        backspace();\n        break;\n      }\n\n      // Spinbutton incrementing/decrementing\n      case 'ArrowUp':\n        e.preventDefault();\n        enteredKeys.current = '';\n        adjustSegmentValue(1);\n        break;\n      case 'ArrowDown':\n        e.preventDefault();\n        enteredKeys.current = '';\n        adjustSegmentValue(-1);\n        break;\n      case 'PageUp':\n        e.preventDefault();\n        enteredKeys.current = '';\n        adjustSegmentValue(PAGE_STEP[segment.type] || 1);\n        break;\n      case 'PageDown':\n        e.preventDefault();\n        enteredKeys.current = '';\n        adjustSegmentValue(-(PAGE_STEP[segment.type] || 1));\n        break;\n      case 'Home':\n        e.preventDefault();\n        enteredKeys.current = '';\n        setSegmentValue(segment.maxValue);\n        break;\n      case 'End':\n        e.preventDefault();\n        enteredKeys.current = '';\n        setSegmentValue(segment.minValue);\n        break;\n    }\n\n    onInput(e.key);\n  };\n\n  const amPmFormatter = useDateFormatter({hour: 'numeric', hour12: true});\n  const am = useMemo(() => {\n    const amDate = new Date();\n    amDate.setHours(0);\n    return amPmFormatter\n      .formatToParts(amDate)\n      .find(part => part.type === 'dayPeriod')!.value;\n  }, [amPmFormatter]);\n  const pm = useMemo(() => {\n    const pmDate = new Date();\n    pmDate.setHours(12);\n    return amPmFormatter\n      .formatToParts(pmDate)\n      .find(part => part.type === 'dayPeriod')!.value;\n  }, [amPmFormatter]);\n\n  // Update date values on user keyboard input\n  const onInput = (key: string) => {\n    const newValue = enteredKeys.current + key;\n\n    switch (segment.type) {\n      case 'dayPeriod':\n        if (am.toLowerCase().startsWith(key)) {\n          setSegmentValue(0);\n        } else if (pm.toLowerCase().startsWith(key)) {\n          setSegmentValue(12);\n        } else {\n          break;\n        }\n        focusManager?.focusNext();\n        break;\n      case 'day':\n      case 'hour':\n      case 'minute':\n      case 'second':\n      case 'month':\n      case 'year': {\n        if (!parser.isValidPartialNumber(newValue)) {\n          return;\n        }\n\n        let numberValue = parser.parse(newValue);\n        let segmentValue = numberValue;\n        let allowsZero = segment.minValue === 0;\n        if (segment.type === 'hour' && formatter.resolvedOptions().hour12) {\n          switch (formatter.resolvedOptions().hourCycle) {\n            case 'h11':\n              if (numberValue > 11) {\n                segmentValue = parser.parse(key);\n              }\n              break;\n            case 'h12':\n              allowsZero = false;\n              if (numberValue > 12) {\n                segmentValue = parser.parse(key);\n              }\n              break;\n          }\n\n          if (segment.value >= 12 && numberValue > 1) {\n            numberValue += 12;\n          }\n        } else if (numberValue > segment.maxValue) {\n          segmentValue = parser.parse(key);\n        }\n\n        if (Number.isNaN(numberValue)) {\n          return;\n        }\n\n        const shouldSetValue = segmentValue !== 0 || allowsZero;\n        if (shouldSetValue) {\n          setSegmentValue(segmentValue);\n        }\n\n        if (\n          Number(`${numberValue}0`) > segment.maxValue ||\n          newValue.length >= String(segment.maxValue).length\n        ) {\n          enteredKeys.current = '';\n          if (shouldSetValue) {\n            focusManager?.focusNext();\n          }\n        } else {\n          enteredKeys.current = newValue;\n        }\n        break;\n      }\n    }\n  };\n\n  const spinButtonProps: HTMLAttributes<HTMLDivElement> = isMobile\n    ? {}\n    : {\n        'aria-label': segment.type,\n        'aria-valuetext': isPlaceholder ? undefined : `${segment.value}`,\n        'aria-valuemin': segment.minValue,\n        'aria-valuemax': segment.maxValue,\n        'aria-valuenow': isPlaceholder ? undefined : segment.value,\n        tabIndex: 0,\n        onKeyDown,\n      };\n\n  return (\n    <div\n      {...mergeProps(domProps!, {\n        ...spinButtonProps,\n        onFocus: e => {\n          enteredKeys.current = '';\n          e.target.scrollIntoView({block: 'nearest'});\n        },\n        onClick: e => {\n          e.preventDefault();\n          e.stopPropagation();\n        },\n      } as HTMLAttributes<HTMLDivElement>)}\n      className=\"box-content cursor-default select-none whitespace-nowrap rounded p-2 text-center tabular-nums caret-transparent outline-none focus:bg-primary focus:text-on-primary\"\n    >\n      {segment.text.padStart(segment.minLength, '0')}\n    </div>\n  );\n}\n","import {useFocusManager} from '@react-aria/focus';\nimport {ComponentPropsWithoutRef} from 'react';\n\nexport interface LiteralSegment {\n  type: 'literal';\n  minLength: 1;\n  text: string;\n}\n\ninterface LiteralSegmentProps extends ComponentPropsWithoutRef<'div'> {\n  segment: LiteralSegment;\n  domProps?: ComponentPropsWithoutRef<'div'>;\n}\nexport function LiteralDateSegment({segment, domProps}: LiteralSegmentProps) {\n  const focusManager = useFocusManager();\n  return (\n    <div\n      {...domProps}\n      onPointerDown={e => {\n        if (e.pointerType === 'mouse') {\n          e.preventDefault();\n          const res = focusManager?.focusNext({from: e.target as HTMLElement});\n          if (!res) {\n            focusManager?.focusPrevious({from: e.target as HTMLElement});\n          }\n        }\n      }}\n      aria-hidden\n      className=\"min-w-4 cursor-default select-none\"\n    >\n      {segment.text}\n    </div>\n  );\n}\n","import {\n  DateValue,\n  getMinimumDayInMonth,\n  getMinimumMonthInYear,\n} from '@internationalized/date';\n\nexport function getSegmentLimits(\n  date: DateValue,\n  type: string,\n  options: Intl.ResolvedDateTimeFormatOptions\n) {\n  switch (type) {\n    case 'year':\n      return {\n        value: date.year,\n        placeholder: 'yyyy',\n        minValue: 1,\n        maxValue: date.calendar.getYearsInEra(date),\n      };\n    case 'month':\n      return {\n        value: date.month,\n        placeholder: 'mm',\n        minValue: getMinimumMonthInYear(date),\n        maxValue: date.calendar.getMonthsInYear(date),\n      };\n    case 'day':\n      return {\n        value: date.day,\n        minValue: getMinimumDayInMonth(date),\n        maxValue: date.calendar.getDaysInMonth(date),\n        placeholder: 'dd',\n      };\n  }\n\n  if ('hour' in date) {\n    switch (type) {\n      case 'dayPeriod':\n        return {\n          value: date.hour >= 12 ? 12 : 0,\n          minValue: 0,\n          maxValue: 12,\n          placeholder: '--',\n        };\n      case 'hour':\n        if (options.hour12) {\n          const isPM = date.hour >= 12;\n          return {\n            value: date.hour,\n            minValue: isPM ? 12 : 0,\n            maxValue: isPM ? 23 : 11,\n            placeholder: '--',\n          };\n        }\n\n        return {\n          value: date.hour,\n          minValue: 0,\n          maxValue: 23,\n          placeholder: '--',\n        };\n      case 'minute':\n        return {\n          value: date.minute,\n          minValue: 0,\n          maxValue: 59,\n          placeholder: '--',\n        };\n    }\n  }\n\n  return {};\n}\n","import React, {ComponentPropsWithoutRef, useMemo} from 'react';\nimport {ZonedDateTime} from '@internationalized/date';\nimport {EditableDateSegment, EditableSegment} from './editable-date-segment';\nimport {LiteralDateSegment, LiteralSegment} from './literal-segment';\nimport {useDateFormatter} from '@common/i18n/use-date-formatter';\nimport {DatePickerState} from '../date-picker/use-date-picker-state';\nimport {getSegmentLimits} from './utils/get-segment-limits';\nimport {DateRangePickerState} from '../date-range-picker/use-date-range-picker-state';\n\ninterface DateSegmentListProps {\n  segmentProps?: ComponentPropsWithoutRef<'div'>;\n  state: DatePickerState | DateRangePickerState;\n  value: ZonedDateTime;\n  onChange: (newValue: ZonedDateTime) => void;\n  isPlaceholder?: boolean;\n}\nexport function DateSegmentList({\n  segmentProps,\n  state,\n  value,\n  onChange,\n  isPlaceholder,\n}: DateSegmentListProps) {\n  const {granularity} = state;\n  const options = useMemo(() => {\n    const memoOptions: Intl.DateTimeFormatOptions = {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric',\n    };\n    if (granularity === 'minute') {\n      memoOptions.hour = 'numeric';\n      memoOptions.minute = 'numeric';\n    }\n    return memoOptions;\n  }, [granularity]);\n\n  const formatter = useDateFormatter(options);\n\n  const dateValue = useMemo(() => value.toDate(), [value]);\n  const segments = useMemo(() => {\n    return formatter.formatToParts(dateValue).map(segment => {\n      const limits = getSegmentLimits(\n        value,\n        segment.type,\n        formatter.resolvedOptions(),\n      );\n      const textValue =\n        isPlaceholder && segment.type !== 'literal'\n          ? limits.placeholder\n          : segment.value;\n      return {\n        type: segment.type,\n        text: segment.value === ', ' ? ' ' : textValue,\n        ...limits,\n        minLength:\n          segment.type !== 'literal' ? String(limits.maxValue).length : 1,\n      } as LiteralSegment | EditableSegment;\n    });\n  }, [dateValue, formatter, isPlaceholder, value]);\n\n  return (\n    <div className=\"flex items-center\">\n      {segments.map((segment, index) => {\n        if (segment.type === 'literal') {\n          return (\n            <LiteralDateSegment\n              domProps={segmentProps}\n              key={index}\n              segment={segment}\n            />\n          );\n        }\n        return (\n          <EditableDateSegment\n            isPlaceholder={isPlaceholder}\n            domProps={segmentProps}\n            state={state}\n            value={value}\n            onChange={onChange}\n            segment={segment}\n            key={index}\n          />\n        );\n      })}\n    </div>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport {\n  CalendarDate,\n  DateValue,\n  getDayOfWeek,\n  isSameMonth,\n  isToday,\n} from '@internationalized/date';\nimport {useSelectedLocale} from '../../../../../i18n/selected-locale';\nimport {DatePickerState} from '../date-picker/use-date-picker-state';\nimport {dateIsInvalid} from '../utils';\nimport {DateRangePickerState} from '../date-range-picker/use-date-range-picker-state';\n\ninterface CalendarCellProps {\n  date: CalendarDate;\n  currentMonth: DateValue;\n  state: DatePickerState | DateRangePickerState;\n}\nexport function CalendarCell({\n  date,\n  currentMonth,\n  state: {\n    dayIsActive,\n    dayIsHighlighted,\n    dayIsRangeStart,\n    dayIsRangeEnd,\n    getCellProps,\n    timezone,\n    min,\n    max,\n  },\n}: CalendarCellProps) {\n  const {localeCode} = useSelectedLocale();\n  const dayOfWeek = getDayOfWeek(date, localeCode);\n  const isActive = dayIsActive(date);\n  const isHighlighted = dayIsHighlighted(date);\n  const isRangeStart = dayIsRangeStart(date);\n  const isRangeEnd = dayIsRangeEnd(date);\n  const dayIsToday = isToday(date, timezone);\n  const sameMonth = isSameMonth(date, currentMonth);\n  const isDisabled = dateIsInvalid(date, min, max);\n\n  return (\n    <div\n      role=\"button\"\n      aria-disabled={isDisabled}\n      className={clsx(\n        'w-40 h-40 text-sm relative isolate flex-shrink-0',\n        isDisabled && 'text-disabled pointer-events-none',\n        !sameMonth && 'invisible pointer-events-none'\n      )}\n      {...getCellProps(date, sameMonth)}\n    >\n      <span\n        className={clsx(\n          'absolute inset-0 flex items-center justify-center rounded-full w-full h-full select-none z-10 cursor-pointer',\n          !isActive && !dayIsToday && 'hover:bg-hover',\n          isActive && 'bg-primary text-on-primary font-semibold',\n          dayIsToday && !isActive && 'bg-chip'\n        )}\n      >\n        {date.day}\n      </span>\n      {isHighlighted && sameMonth && (\n        <span\n          className={clsx(\n            'absolute w-full h-full inset-0 bg-primary/focus',\n            (isRangeStart || dayOfWeek === 0 || date.day === 1) &&\n              'rounded-l-full',\n            (isRangeEnd ||\n              dayOfWeek === 6 ||\n              date.day ===\n                currentMonth.calendar.getDaysInMonth(currentMonth)) &&\n              'rounded-r-full'\n          )}\n        />\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport {m} from 'framer-motion';\nimport {\n  CalendarDate,\n  endOfMonth,\n  getWeeksInMonth,\n  startOfMonth,\n  startOfWeek,\n} from '@internationalized/date';\nimport {KeyboardArrowLeftIcon} from '../../../../../icons/material/KeyboardArrowLeft';\nimport {IconButton} from '../../../../buttons/icon-button';\nimport {KeyboardArrowRightIcon} from '../../../../../icons/material/KeyboardArrowRight';\nimport {CalendarCell} from './calendar-cell';\nimport {DatePickerState} from '../date-picker/use-date-picker-state';\nimport {useDateFormatter} from '../../../../../i18n/use-date-formatter';\nimport {useSelectedLocale} from '../../../../../i18n/selected-locale';\nimport {dateIsInvalid} from '../utils';\nimport {DateRangePickerState} from '../date-range-picker/use-date-range-picker-state';\n\nexport interface CalendarMonthProps {\n  state: DatePickerState | DateRangePickerState;\n  startDate: CalendarDate;\n  isFirst: boolean;\n  isLast: boolean;\n}\nexport function CalendarMonth({\n  startDate,\n  state,\n  isFirst,\n  isLast,\n}: CalendarMonthProps) {\n  const {localeCode} = useSelectedLocale();\n  const weeksInMonth = getWeeksInMonth(startDate, localeCode);\n  const monthStart = startOfWeek(startDate, localeCode);\n\n  return (\n    <div className=\"w-280 flex-shrink-0\">\n      <CalendarMonthHeader\n        isFirst={isFirst}\n        isLast={isLast}\n        state={state}\n        currentMonth={startDate}\n      />\n      <div className=\"block\" role=\"grid\">\n        <WeekdayHeader state={state} startDate={startDate} />\n        {[...new Array(weeksInMonth).keys()].map(weekIndex => (\n          <m.div className=\"flex mb-6\" key={weekIndex}>\n            {[...new Array(7).keys()].map(dayIndex => (\n              <CalendarCell\n                key={dayIndex}\n                date={monthStart.add({weeks: weekIndex, days: dayIndex})}\n                currentMonth={startDate}\n                state={state}\n              />\n            ))}\n          </m.div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\ninterface CalendarMonthHeaderProps {\n  state: DatePickerState | DateRangePickerState;\n  currentMonth: CalendarDate;\n  isFirst: boolean;\n  isLast: boolean;\n}\nfunction CalendarMonthHeader({\n  currentMonth,\n  isFirst,\n  isLast,\n  state: {calendarDates, setCalendarDates, timezone, min, max},\n}: CalendarMonthHeaderProps) {\n  const shiftCalendars = (direction: 'forward' | 'backward') => {\n    const count = calendarDates.length;\n    let newDates: CalendarDate[];\n    if (direction === 'forward') {\n      newDates = calendarDates.map(date =>\n        endOfMonth(date.add({months: count}))\n      );\n    } else {\n      newDates = calendarDates.map(date =>\n        endOfMonth(date.subtract({months: count}))\n      );\n    }\n    setCalendarDates(newDates);\n  };\n\n  const monthFormatter = useDateFormatter({\n    month: 'long',\n    year: 'numeric',\n    era: currentMonth.calendar.identifier !== 'gregory' ? 'long' : undefined,\n    calendar: currentMonth.calendar.identifier,\n  });\n\n  const isBackwardDisabled = dateIsInvalid(\n    currentMonth.subtract({days: 1}),\n    min,\n    max\n  );\n  const isForwardDisabled = dateIsInvalid(\n    startOfMonth(currentMonth.add({months: 1})),\n    min,\n    max\n  );\n\n  return (\n    <div className=\"flex items-center justify-between gap-10\">\n      <IconButton\n        size=\"md\"\n        className={clsx('text-muted', !isFirst && 'invisible')}\n        disabled={!isFirst || isBackwardDisabled}\n        aria-hidden={!isFirst}\n        onClick={() => {\n          shiftCalendars('backward');\n        }}\n      >\n        <KeyboardArrowLeftIcon />\n      </IconButton>\n      <div className=\"text-sm font-semibold select-none\">\n        {monthFormatter.format(currentMonth.toDate(timezone))}\n      </div>\n      <IconButton\n        size=\"md\"\n        className={clsx('text-muted', !isLast && 'invisible')}\n        disabled={!isLast || isForwardDisabled}\n        aria-hidden={!isLast}\n        onClick={() => {\n          shiftCalendars('forward');\n        }}\n      >\n        <KeyboardArrowRightIcon />\n      </IconButton>\n    </div>\n  );\n}\n\ninterface WeekdayHeaderProps {\n  state: DatePickerState | DateRangePickerState;\n  startDate: CalendarDate;\n}\nfunction WeekdayHeader({state: {timezone}, startDate}: WeekdayHeaderProps) {\n  const {localeCode} = useSelectedLocale();\n  const dayFormatter = useDateFormatter({weekday: 'short'});\n\n  const monthStart = startOfWeek(startDate, localeCode);\n\n  return (\n    <div className=\"flex\">\n      {[...new Array(7).keys()].map(index => {\n        const date = monthStart.add({days: index});\n        const dateDay = date.toDate(timezone);\n        const weekday = dayFormatter.format(dateDay);\n        return (\n          <div\n            className=\"w-40 h-40 text-sm font-semibold relative flex-shrink-0\"\n            key={index}\n          >\n            <div className=\"absolute flex items-center justify-center w-full h-full select-none\">\n              {weekday}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import React, {Fragment} from 'react';\nimport {startOfMonth, toCalendarDate} from '@internationalized/date';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\nimport {CalendarMonth} from './calendar-month';\nimport {DatePickerState} from '../date-picker/use-date-picker-state';\nimport {DateRangePickerState} from '../date-range-picker/use-date-range-picker-state';\n\ninterface CalendarProps {\n  state: DatePickerState | DateRangePickerState;\n  visibleMonths?: 1 | 2;\n}\nexport function Calendar({state, visibleMonths = 1}: CalendarProps) {\n  const isMobile = useIsMobileMediaQuery();\n\n  if (isMobile) {\n    visibleMonths = 1;\n  }\n\n  return (\n    <Fragment>\n      {[...new Array(visibleMonths).keys()].map(index => {\n        const startDate = toCalendarDate(\n          startOfMonth(state.calendarDates[index])\n        );\n        const isFirst = index === 0;\n        const isLast = index === visibleMonths - 1;\n        return (\n          <CalendarMonth\n            key={index}\n            state={state}\n            startDate={startDate}\n            isFirst={isFirst}\n            isLast={isLast}\n          />\n        );\n      })}\n    </Fragment>\n  );\n}\n","import {DateValue, parseAbsolute} from '@internationalized/date';\nimport {Fragment, memo} from 'react';\nimport {useDateFormatter} from './use-date-formatter';\nimport {useSettings} from '../core/settings/use-settings';\nimport {shallowEqual} from '../utils/shallow-equal';\nimport {useUserTimezone} from './use-user-timezone';\nimport {DateFormatPresets} from '@common/i18n/formatted-date';\n\ninterface FormattedDateTimeRangeProps {\n  start?: string | DateValue | Date;\n  end?: string | DateValue | Date;\n  options?: Intl.DateTimeFormatOptions;\n  preset?: keyof typeof DateFormatPresets;\n}\nexport const FormattedDateTimeRange = memo(\n  ({start, end, options, preset}: FormattedDateTimeRangeProps) => {\n    const {dates} = useSettings();\n    const timezone = useUserTimezone();\n    const formatter = useDateFormatter(\n      options ||\n        (DateFormatPresets as Record<string, Intl.DateTimeFormatOptions>)[\n          preset || dates?.format\n        ]\n    );\n\n    if (!start || !end) {\n      return null;\n    }\n\n    let value: string;\n\n    try {\n      value = formatter.formatRange(\n        castToDate(start, timezone),\n        castToDate(end, timezone)\n      );\n    } catch (e) {\n      value = '';\n    }\n\n    return <Fragment>{value}</Fragment>;\n  },\n  shallowEqual\n);\n\nfunction castToDate(date: string | DateValue | Date, timezone: string): Date {\n  if (typeof date === 'string') {\n    return parseAbsolute(date, timezone).toDate();\n  }\n  if ('toDate' in date) {\n    return date.toDate(timezone);\n  }\n  return date;\n}\n","import {getBootstrapData} from '../core/bootstrap-data/use-backend-bootstrap-data';\nimport {getLocalTimeZone} from '@internationalized/date';\n\nexport function getUserTimezone(): string {\n  const defaultTimezone = getBootstrapData()?.settings.dates.default_timezone;\n  const preferredTimezone =\n    getBootstrapData()?.user?.timezone || defaultTimezone || 'auto';\n\n  if (!preferredTimezone || preferredTimezone === 'auto') {\n    return getLocalTimeZone();\n  }\n  return preferredTimezone;\n}\n","import {DateRangeValue} from '../date-range-value';\nimport {message} from '@common/i18n/message';\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\nimport {\n  endOfMonth,\n  endOfWeek,\n  endOfYear,\n  now,\n  startOfMonth,\n  startOfWeek,\n  startOfYear,\n} from '@internationalized/date';\nimport {startOfDay} from '@common/utils/date/start-of-day';\nimport {endOfDay} from '@common/utils/date/end-of-day';\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\nimport {getUserTimezone} from '@common/i18n/get-user-timezone';\n\nconst Now = startOfDay(now(getUserTimezone()));\nconst locale = getBootstrapData()?.i18n?.language || 'en';\n\nexport interface DateRangePreset {\n  key: number;\n  label: MessageDescriptor;\n  getRangeValue: () => DateRangeValue;\n}\n\nexport const DateRangePresets: DateRangePreset[] = [\n  {\n    key: 0,\n    label: message('Today'),\n    getRangeValue: () => ({\n      preset: 0,\n      start: Now,\n      end: endOfDay(Now),\n    }),\n  },\n  {\n    key: 1,\n    label: message('Yesterday'),\n    getRangeValue: () => ({\n      preset: 1,\n      start: Now.subtract({days: 1}),\n      end: endOfDay(Now).subtract({days: 1}),\n    }),\n  },\n  {\n    key: 2,\n    label: message('This week'),\n    getRangeValue: () => ({\n      preset: 2,\n      start: startOfWeek(Now, locale),\n      end: endOfWeek(endOfDay(Now), locale),\n    }),\n  },\n  {\n    key: 3,\n    label: message('Last week'),\n    getRangeValue: () => {\n      const start = startOfWeek(Now, locale).subtract({days: 7});\n      return {\n        preset: 3,\n        start,\n        end: start.add({days: 6}),\n      };\n    },\n  },\n  {\n    key: 4,\n    label: message('Last 7 days'),\n    getRangeValue: () => ({\n      preset: 4,\n      start: Now.subtract({days: 7}),\n      end: endOfDay(Now),\n    }),\n  },\n  {\n    key: 6,\n    label: message('Last 30 days'),\n    getRangeValue: () => ({\n      preset: 6,\n      start: Now.subtract({days: 30}),\n      end: endOfDay(Now),\n    }),\n  },\n  {\n    key: 7,\n    label: message('Last 3 months'),\n    getRangeValue: () => ({\n      preset: 7,\n      start: Now.subtract({months: 3}),\n      end: endOfDay(Now),\n    }),\n  },\n  {\n    key: 8,\n    label: message('Last 12 months'),\n    getRangeValue: () => ({\n      preset: 8,\n      start: Now.subtract({months: 12}),\n      end: endOfDay(Now),\n    }),\n  },\n  {\n    key: 9,\n    label: message('This month'),\n    getRangeValue: () => ({\n      preset: 9,\n      start: startOfMonth(Now),\n      end: endOfMonth(endOfDay(Now)),\n    }),\n  },\n  {\n    key: 10,\n    label: message('This year'),\n    getRangeValue: () => ({\n      preset: 10,\n      start: startOfYear(Now),\n      end: endOfYear(endOfDay(Now)),\n    }),\n  },\n  {\n    key: 11,\n    label: message('Last year'),\n    getRangeValue: () => ({\n      preset: 11,\n      start: startOfYear(Now).subtract({years: 1}),\n      end: endOfYear(endOfDay(Now)).subtract({years: 1}),\n    }),\n  },\n];\n","import {List, ListItem} from '@common/ui/list/list';\nimport {DateRangePresets} from '@common/ui/forms/input-field/date/date-range-picker/dialog/date-range-presets';\nimport {Trans} from '@common/i18n/trans';\nimport {DateRangeValue} from '@common/ui/forms/input-field/date/date-range-picker/date-range-value';\n\ninterface DateRangePresetList {\n  onPresetSelected: (value: DateRangeValue) => void;\n  selectedValue?: DateRangeValue | null;\n}\nexport function DatePresetList({\n  onPresetSelected,\n  selectedValue,\n}: DateRangePresetList) {\n  return (\n    <List>\n      {DateRangePresets.map(preset => (\n        <ListItem\n          borderRadius=\"rounded-none\"\n          capitalizeFirst\n          key={preset.key}\n          isSelected={selectedValue?.preset === preset.key}\n          onSelected={() => {\n            const newValue = preset.getRangeValue();\n            onPresetSelected(newValue);\n          }}\n        >\n          <Trans {...preset.label} />\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n","import {useMediaQuery, UseMediaQueryOptions} from './use-media-query';\n\nexport function useIsTabletMediaQuery(options?: UseMediaQueryOptions) {\n  return useMediaQuery('(max-width: 1024px)', options);\n}\n","import React, {ComponentPropsWithoutRef, ReactNode, useId} from 'react';\nimport clsx from 'clsx';\nimport {useController} from 'react-hook-form';\nimport {mergeProps, useObjectRef} from '@react-aria/utils';\nimport {InputSize} from '../input-field/input-size';\nimport {getInputFieldClassNames} from '../input-field/get-input-field-class-names';\nimport {AutoFocusProps, useAutoFocus} from '../../focus/use-auto-focus';\n\ninterface SwitchProps\n  extends AutoFocusProps,\n    Omit<ComponentPropsWithoutRef<'input'>, 'size'> {\n  size?: InputSize;\n  className?: string;\n  description?: ReactNode;\n  invalid?: boolean;\n  errorMessage?: string;\n}\nexport const Switch = React.forwardRef<HTMLInputElement, SwitchProps>(\n  (props, ref) => {\n    const {\n      children,\n      size = 'sm',\n      description,\n      className,\n      invalid,\n      autoFocus,\n      errorMessage,\n      ...domProps\n    } = props;\n\n    const inputRef = useObjectRef(ref);\n    useAutoFocus({autoFocus}, inputRef);\n\n    const style = getSizeClassName(size);\n    const fieldClassNames = getInputFieldClassNames(props);\n\n    const descriptionId = useId();\n\n    return (\n      <div className={clsx(className, 'isolate')}>\n        <label className=\"flex items-center select-none\">\n          <input\n            {...domProps}\n            type=\"checkbox\"\n            role=\"switch\"\n            aria-invalid={invalid || undefined}\n            aria-describedby={description ? descriptionId : undefined}\n            ref={inputRef}\n            aria-checked={domProps.checked}\n            className={clsx(\n              style,\n              !invalid &&\n                'checked:bg-primary dark:checked:bg-primary-dark checked:border-primary dark:checked:border-primary-dark',\n              invalid && 'checked:bg-danger checked:border-danger',\n              'outline-none cursor-pointer bg-chip border-chip border checked:bg-primary checked:border-primary p-0 overflow-hidden relative rounded-3xl appearance-none transition-colors flex-shrink-0 flex items-center outline-none',\n              'before:z-10 before:border before:rounded-3xl before:block before:bg-white before:transition-transform before:translate-x-2',\n              'checked:before:border-white',\n              'focus-visible:ring',\n              props.disabled && 'opacity-80 cursor-not-allowed'\n            )}\n          />\n          {children && (\n            <span\n              className={clsx(\n                fieldClassNames.size.font,\n                'ml-12',\n                invalid && 'text-danger',\n                props.disabled && 'text-disabled'\n              )}\n            >\n              {children}\n            </span>\n          )}\n        </label>\n        {description && !errorMessage && (\n          <div id={descriptionId} className={fieldClassNames.description}>\n            {description}\n          </div>\n        )}\n        {errorMessage && (\n          <div id={descriptionId} className={fieldClassNames.error}>\n            {errorMessage}\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n\ninterface FormSwitchProps extends SwitchProps {\n  name: string;\n}\nexport function FormSwitch(props: FormSwitchProps) {\n  const {\n    field: {onChange, onBlur, value = false, ref},\n    fieldState: {invalid, error},\n  } = useController({\n    name: props.name,\n  });\n\n  const formProps: Partial<SwitchProps> = {\n    onChange: e => {\n      if (e.target.value && e.target.value !== 'on') {\n        onChange(e.target.checked ? e.target.value : false);\n      } else {\n        onChange(e);\n      }\n    },\n    onBlur,\n    checked: !!value,\n    invalid,\n    errorMessage: error?.message,\n    name: props.name,\n  };\n\n  return <Switch ref={ref} {...mergeProps(props, formProps)} />;\n}\n\nfunction getSizeClassName(size: InputSize): string {\n  switch (size) {\n    case 'xl':\n      return 'w-68 h-36 before:w-28 before:h-28 checked:before:translate-x-36';\n    case 'lg':\n      return 'w-56 h-30 before:w-22 before:h-22 checked:before:translate-x-30';\n    case 'md':\n      return 'w-46 h-24 before:w-18 before:h-18 checked:before:translate-x-24';\n    case 'xs':\n      return 'w-30 h-16 before:w-12 before:h-12 checked:before:translate-x-16';\n    default:\n      return 'w-38 h-20 before:w-14 before:h-14 checked:before:translate-x-20';\n  }\n}\n","import {message} from '@common/i18n/message';\nimport {DateRangeValue} from '@common/ui/forms/input-field/date/date-range-picker/date-range-value';\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\n\nexport interface DateRangeComparePreset {\n  key: number;\n  label: MessageDescriptor;\n  getRangeValue: (range: DateRangeValue) => DateRangeValue;\n}\n\nexport const DateRangeComparePresets: DateRangeComparePreset[] = [\n  {\n    key: 0,\n    label: message('Preceding period'),\n    getRangeValue: (range: DateRangeValue) => {\n      const startDate = range.start;\n      const endDate = range.end;\n\n      const diffInMilliseconds =\n        endDate.toDate().getTime() - startDate.toDate().getTime();\n      const diffInMinutes = diffInMilliseconds / (1000 * 60);\n      const newStart = startDate.subtract({minutes: diffInMinutes});\n      return {\n        preset: 0,\n        start: newStart,\n        end: startDate,\n      };\n    },\n  },\n  {\n    key: 1,\n    label: message('Same period last year'),\n    getRangeValue: (range: DateRangeValue) => {\n      return {\n        start: range.start.subtract({years: 1}),\n        end: range.end.subtract({years: 1}),\n        preset: 1,\n      };\n    },\n  },\n  {\n    key: 2,\n    label: message('Custom'),\n    getRangeValue: (range: DateRangeValue) => {\n      return {\n        start: range.start.subtract({weeks: 1}),\n        end: range.end.subtract({weeks: 1}),\n        preset: 2,\n      };\n    },\n  },\n];\n","import {List, ListItem} from '@common/ui/list/list';\nimport {Trans} from '@common/i18n/trans';\nimport {DateRangeValue} from '@common/ui/forms/input-field/date/date-range-picker/date-range-value';\nimport {DateRangeComparePresets} from '@common/ui/forms/input-field/date/date-range-picker/dialog/date-range-compare-presets';\n\ninterface DateRangePresetList {\n  originalRangeValue: DateRangeValue;\n  onPresetSelected: (value: DateRangeValue) => void;\n  selectedValue?: DateRangeValue | null;\n}\nexport function DateRangeComparePresetList({\n  originalRangeValue,\n  onPresetSelected,\n  selectedValue,\n}: DateRangePresetList) {\n  return (\n    <List>\n      {DateRangeComparePresets.map(preset => (\n        <ListItem\n          borderRadius=\"rounded-none\"\n          capitalizeFirst\n          key={preset.key}\n          isSelected={selectedValue?.preset === preset.key}\n          onSelected={() => {\n            const newValue = preset.getRangeValue(originalRangeValue);\n            onPresetSelected(newValue);\n          }}\n        >\n          <Trans {...preset.label} />\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n","import React, {Fragment, ReactNode, useRef, useState} from 'react';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {DatePickerField} from '../date-picker-field';\nimport {DateRangePickerState} from '../use-date-range-picker-state';\nimport {Calendar} from '../../calendar/calendar';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {Button} from '@common/ui/buttons/button';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {ArrowRightAltIcon} from '@common/icons/material/ArrowRightAlt';\nimport {DateSegmentList} from '../../segments/date-segment-list';\nimport {Trans} from '@common/i18n/trans';\nimport {FormattedDateTimeRange} from '@common/i18n/formatted-date-time-range';\nimport {DatePresetList} from './date-range-preset-list';\nimport {useIsTabletMediaQuery} from '@common/utils/hooks/is-tablet-media-query';\nimport {Switch} from '@common/ui/forms/toggle/switch';\nimport {DateRangeComparePresetList} from '@common/ui/forms/input-field/date/date-range-picker/dialog/date-range-compare-preset-list';\n\ninterface DateRangeDialogProps {\n  state: DateRangePickerState;\n  compareState?: DateRangePickerState;\n  compareVisibleDefault?: boolean;\n  showInlineDatePickerField?: boolean;\n}\nexport function DateRangeDialog({\n  state,\n  compareState,\n  showInlineDatePickerField = false,\n  compareVisibleDefault = false,\n}: DateRangeDialogProps) {\n  const isTablet = useIsTabletMediaQuery();\n  const {close} = useDialogContext();\n  const initialStateRef = useRef<DateRangePickerState>(state);\n  const hasPlaceholder = state.isPlaceholder.start || state.isPlaceholder.end;\n  const [compareVisible, setCompareVisible] = useState(compareVisibleDefault);\n\n  const footer = (\n    <DialogFooter\n      dividerTop\n      startAction={\n        !hasPlaceholder && !isTablet ? (\n          <div className=\"text-xs\">\n            <FormattedDateTimeRange\n              start={state.selectedValue.start.toDate()}\n              end={state.selectedValue.end.toDate()}\n              options={{dateStyle: 'medium'}}\n            />\n          </div>\n        ) : undefined\n      }\n    >\n      <Button\n        variant=\"text\"\n        size=\"xs\"\n        onClick={() => {\n          state.setSelectedValue(initialStateRef.current.selectedValue);\n          state.setIsPlaceholder(initialStateRef.current.isPlaceholder);\n          close();\n        }}\n      >\n        <Trans message=\"Cancel\" />\n      </Button>\n      <Button\n        variant=\"flat\"\n        color=\"primary\"\n        size=\"xs\"\n        onClick={() => {\n          const value = state.selectedValue;\n          if (compareState && compareVisible) {\n            value.compareStart = compareState.selectedValue.start;\n            value.compareEnd = compareState.selectedValue.end;\n          }\n          close(value);\n        }}\n      >\n        <Trans message=\"Select\" />\n      </Button>\n    </DialogFooter>\n  );\n\n  return (\n    <Dialog size=\"auto\">\n      <DialogBody className=\"flex\" padding=\"p-0\">\n        {!isTablet && (\n          <div className=\"min-w-192 py-14\">\n            <DatePresetList\n              selectedValue={state.selectedValue}\n              onPresetSelected={preset => {\n                state.setSelectedValue(preset);\n                if (state.closeDialogOnSelection) {\n                  close(preset);\n                }\n              }}\n            />\n            {!!compareState && (\n              <Fragment>\n                <Switch\n                  className=\"mx-20 mb-10 mt-14\"\n                  checked={compareVisible}\n                  onChange={e => setCompareVisible(e.target.checked)}\n                >\n                  <Trans message=\"Compare\" />\n                </Switch>\n                {compareVisible && (\n                  <DateRangeComparePresetList\n                    originalRangeValue={state.selectedValue}\n                    selectedValue={compareState.selectedValue}\n                    onPresetSelected={preset => {\n                      compareState.setSelectedValue(preset);\n                    }}\n                  />\n                )}\n              </Fragment>\n            )}\n          </div>\n        )}\n        <AnimatePresence initial={false}>\n          <Calendars\n            state={state}\n            compareState={compareState}\n            showInlineDatePickerField={showInlineDatePickerField}\n            compareVisible={compareVisible}\n          />\n        </AnimatePresence>\n      </DialogBody>\n      {!state.closeDialogOnSelection && footer}\n    </Dialog>\n  );\n}\n\ninterface CustomRangePanelProps {\n  state: DateRangePickerState;\n  compareState?: DateRangePickerState;\n  showInlineDatePickerField?: boolean;\n  compareVisible: boolean;\n}\nfunction Calendars({\n  state,\n  compareState,\n  showInlineDatePickerField,\n  compareVisible,\n}: CustomRangePanelProps) {\n  return (\n    <m.div\n      initial={{width: 0, overflow: 'hidden'}}\n      animate={{width: 'auto'}}\n      exit={{width: 0, overflow: 'hidden'}}\n      transition={{type: 'tween', duration: 0.125}}\n      className=\"border-l px-20 pb-20 pt-10\"\n    >\n      {showInlineDatePickerField && (\n        <div>\n          <InlineDatePickerField state={state} />\n          {!!compareState && compareVisible && (\n            <InlineDatePickerField\n              state={compareState}\n              label={<Trans message=\"Compare\" />}\n            />\n          )}\n        </div>\n      )}\n      <div className=\"flex items-start gap-36\">\n        <Calendar state={state} visibleMonths={2} />\n      </div>\n    </m.div>\n  );\n}\n\ninterface InlineDatePickerFieldProps {\n  state: DateRangePickerState;\n  label?: ReactNode;\n}\nfunction InlineDatePickerField({state, label}: InlineDatePickerFieldProps) {\n  const {selectedValue, setSelectedValue} = state;\n  return (\n    <DatePickerField className=\"mb-20 mt-10\" label={label}>\n      <DateSegmentList\n        state={state}\n        value={selectedValue.start}\n        onChange={newValue => {\n          setSelectedValue({...selectedValue, start: newValue});\n        }}\n      />\n      <ArrowRightAltIcon className=\"block flex-shrink-0 text-muted\" size=\"md\" />\n      <DateSegmentList\n        state={state}\n        value={selectedValue.end}\n        onChange={newValue => {\n          setSelectedValue({...selectedValue, end: newValue});\n        }}\n      />\n    </DatePickerField>\n  );\n}\n","import React, {\n  ComponentPropsWithoutRef,\n  Fragment,\n  MouseEvent,\n  useRef,\n} from 'react';\nimport {DateRangeIcon} from '../../../../../icons/material/DateRange';\nimport {DialogTrigger} from '../../../../overlays/dialog/dialog-trigger';\nimport {DatePickerField, DatePickerFieldProps} from './date-picker-field';\nimport {useDateRangePickerState} from './use-date-range-picker-state';\nimport {ArrowRightAltIcon} from '../../../../../icons/material/ArrowRightAlt';\nimport {DatePickerValueProps} from '../date-picker/use-date-picker-state';\nimport {DateRangeValue} from './date-range-value';\nimport {DateSegmentList} from '../segments/date-segment-list';\nimport {DateRangeDialog} from './dialog/date-range-dialog';\nimport {useIsMobileMediaQuery} from '../../../../../utils/hooks/is-mobile-media-query';\n\nexport interface DateRangePickerProps\n  extends DatePickerValueProps<Partial<DateRangeValue>>,\n    Omit<DatePickerFieldProps, 'children'> {}\nexport function DateRangePicker(props: DateRangePickerProps) {\n  const {granularity, closeDialogOnSelection, ...fieldProps} = props;\n  const state = useDateRangePickerState(props);\n  const inputRef = useRef<HTMLDivElement>(null);\n  const isMobile = useIsMobileMediaQuery();\n  const hideCalendarIcon = isMobile && granularity !== 'day';\n\n  const dialog = (\n    <DialogTrigger\n      offset={8}\n      placement=\"bottom-start\"\n      isOpen={state.calendarIsOpen}\n      onOpenChange={state.setCalendarIsOpen}\n      type=\"popover\"\n      triggerRef={inputRef}\n      returnFocusToTrigger={false}\n      moveFocusToDialog={false}\n    >\n      <DateRangeDialog state={state} />\n    </DialogTrigger>\n  );\n\n  const openOnClick: ComponentPropsWithoutRef<'div'> = {\n    onClick: e => {\n      e.stopPropagation();\n      e.preventDefault();\n      if (!isHourSegment(e)) {\n        state.setCalendarIsOpen(true);\n      } else {\n        state.setCalendarIsOpen(false);\n      }\n    },\n  };\n\n  const value = state.selectedValue;\n  const onChange = state.setSelectedValue;\n\n  return (\n    <Fragment>\n      <DatePickerField\n        ref={inputRef}\n        wrapperProps={openOnClick}\n        endAdornment={!hideCalendarIcon ? <DateRangeIcon /> : undefined}\n        {...fieldProps}\n      >\n        <DateSegmentList\n          isPlaceholder={state.isPlaceholder?.start}\n          state={state}\n          segmentProps={openOnClick}\n          value={value.start}\n          onChange={newValue => {\n            onChange({start: newValue, end: value.end});\n          }}\n        />\n        <ArrowRightAltIcon\n          className=\"block flex-shrink-0 text-muted\"\n          size=\"md\"\n        />\n        <DateSegmentList\n          isPlaceholder={state.isPlaceholder?.end}\n          state={state}\n          segmentProps={openOnClick}\n          value={value.end}\n          onChange={newValue => {\n            onChange({start: value.start, end: newValue});\n          }}\n        />\n      </DatePickerField>\n      {dialog}\n    </Fragment>\n  );\n}\n\nfunction isHourSegment(e: MouseEvent<HTMLDivElement>): boolean {\n  return ['hour', 'minute', 'dayPeriod'].includes(\n    (e.currentTarget as HTMLElement).ariaLabel || ''\n  );\n}\n","import {parseAbsoluteToLocal, ZonedDateTime} from '@internationalized/date';\nimport {DateRangeValue} from './date-range-value';\nimport {useController} from 'react-hook-form';\nimport {mergeProps} from '@react-aria/utils';\nimport React from 'react';\nimport {DateRangePicker, DateRangePickerProps} from './date-range-picker';\n\nexport interface AbsoluteDateRange {\n  start?: string;\n  end?: string;\n  preset?: number;\n}\n\ninterface FormDateRange {\n  start?: string | ZonedDateTime;\n  end?: string | ZonedDateTime;\n  preset?: number;\n}\n\nexport interface FormDateRangePickerProps extends DateRangePickerProps {\n  name: string;\n}\nexport function FormDateRangePicker(props: FormDateRangePickerProps) {\n  const {\n    field: {onChange, onBlur, value, ref},\n    fieldState: {invalid, error},\n  } = useController({\n    name: props.name,\n  });\n\n  const formProps: Partial<DateRangePickerProps> = {\n    onChange: e => {\n      onChange(e ? dateRangeToAbsoluteRange(e) : null);\n    },\n    onBlur,\n    value: absoluteRangeToDateRange(value),\n    invalid,\n    errorMessage: error?.message,\n    inputRef: ref,\n  };\n\n  return <DateRangePicker {...mergeProps(formProps, props)} />;\n}\n\nexport function absoluteRangeToDateRange(props: FormDateRange | null) {\n  const {start, end, preset} = props || {};\n  const dateRange: Partial<DateRangeValue> = {preset};\n  try {\n    if (start) {\n      dateRange.start =\n        typeof start === 'string' ? parseAbsoluteToLocal(start) : start;\n    }\n    if (end) {\n      dateRange.end = typeof end === 'string' ? parseAbsoluteToLocal(end) : end;\n    }\n  } catch (e) {\n    // ignore\n  }\n  return dateRange;\n}\n\nexport function dateRangeToAbsoluteRange({\n  start,\n  end,\n  preset,\n}: Partial<DateRangeValue> = {}): AbsoluteDateRange {\n  const absoluteRange: AbsoluteDateRange = {\n    preset,\n  };\n  if (start) {\n    absoluteRange.start = start.toAbsoluteString();\n  }\n  if (end) {\n    absoluteRange.end = end.toAbsoluteString();\n  }\n  return absoluteRange;\n}\n","import {FormDateRangePicker} from '@common/ui/forms/input-field/date/date-range-picker/form-date-range-picker';\nimport {FilterPanelProps} from '@common/datatable/filters/panels/filter-panel-props';\nimport {DatePickerFilterControl} from '@common/datatable/filters/backend-filter';\n\nexport function DateRangeFilterPanel({\n  filter,\n}: FilterPanelProps<DatePickerFilterControl>) {\n  return (\n    <FormDateRangePicker\n      min={filter.control.min}\n      max={filter.control.max}\n      size=\"sm\"\n      name={`${filter.key}.value`}\n      granularity=\"day\"\n      closeDialogOnSelection={true}\n    />\n  );\n}\n","import {FilterOperator} from './backend-filter';\nimport {message} from '../../i18n/message';\nimport {MessageDescriptor} from '../../i18n/message-descriptor';\n\nexport const FilterOperatorNames: {[op in FilterOperator]: MessageDescriptor} =\n  {\n    '=': message('is'),\n    '!=': message('is not'),\n    '>': message('is greater than'),\n    '>=': message('is greater than or equal to'),\n    '<': message('is less than'),\n    '<=': message('is less than or equal to'),\n    has: message('Include'),\n    doesntHave: message('Do not include'),\n    between: message('Is between'),\n    hasAll: message('Include all'),\n  };\n","import {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@common/i18n/trans';\nimport {FormSelect} from '@common/ui/forms/select/select';\nimport {Item} from '@common/ui/forms/listbox/item';\nimport {FilterOperatorNames} from '@common/datatable/filters/filter-operator-names';\nimport {Fragment} from 'react';\nimport {FilterPanelProps} from '@common/datatable/filters/panels/filter-panel-props';\nimport {\n  FilterNumberInputControl,\n  FilterTextInputControl,\n} from '@common/datatable/filters/backend-filter';\n\nexport function InputFilterPanel({\n  filter,\n}: FilterPanelProps<FilterTextInputControl | FilterNumberInputControl>) {\n  const control = filter.control;\n  return (\n    <Fragment>\n      <FormSelect\n        selectionMode=\"single\"\n        name={`${filter.key}.operator`}\n        className=\"mb-14\"\n        size=\"sm\"\n        required\n      >\n        {filter.operators?.map(operator => (\n          <Item key={operator} value={operator}>\n            {<Trans {...FilterOperatorNames[operator]} />}\n          </Item>\n        ))}\n      </FormSelect>\n      <FormTextField\n        size=\"sm\"\n        name={`${filter.key}.value`}\n        type={filter.control.inputType}\n        min={'minValue' in control ? control.minValue : undefined}\n        max={'maxValue' in control ? control.maxValue : undefined}\n        minLength={'minLength' in control ? control.minLength : undefined}\n        maxLength={'maxLength' in control ? control.maxLength : undefined}\n        required\n      />\n    </Fragment>\n  );\n}\n","import {ChipValue} from './chip-field';\n\nexport function stringToChipValue(value: string | number): ChipValue {\n  // add both name and description so \"validateWith\" works properly in chip field, if it depends on description\n  return {id: value, name: `${value}`, description: `${value}`};\n}\n","import React, {\n  HTMLAttributes,\n  Key,\n  ReactElement,\n  ReactNode,\n  Ref,\n  RefObject,\n  useCallback,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport {useFocusManager} from '@react-aria/focus';\nimport clsx from 'clsx';\nimport {mergeProps, useLayoutEffect, useObjectRef} from '@react-aria/utils';\nimport {useControlledState} from '@react-stately/utils';\nimport {ChipList} from './chip-list';\nimport {Field} from '../field';\nimport {Input} from '../input';\nimport {Chip, ChipProps} from './chip';\nimport {NormalizedModel} from '@common/datatable/filters/normalized-model';\nimport {getInputFieldClassNames} from '../get-input-field-class-names';\nimport {ProgressCircle} from '../../../progress/progress-circle';\nimport {useField} from '../use-field';\nimport {Avatar} from '../../../images/avatar';\nimport {Listbox} from '../../listbox/listbox';\nimport {useListbox} from '../../listbox/use-listbox';\nimport {BaseFieldPropsWithDom} from '../base-field-props';\nimport {useListboxKeyboardNavigation} from '../../listbox/use-listbox-keyboard-navigation';\nimport {createEventHandler} from '@common/utils/dom/create-event-handler';\nimport {ListBoxChildren, ListboxProps} from '../../listbox/types';\nimport {stringToChipValue} from './string-to-chip-value';\nimport {Popover} from '../../../overlays/popover';\nimport {KeyboardArrowDownIcon} from '@common/icons/material/KeyboardArrowDown';\n\nexport interface ChipValue extends Omit<NormalizedModel, 'model_type'> {\n  invalid?: boolean;\n  errorMessage?: string;\n}\n\nexport type ChipFieldProps<T> = Omit<\n  ListboxProps,\n  'selectionMode' | 'displayWith'\n> &\n  Omit<\n    BaseFieldPropsWithDom<HTMLInputElement>,\n    'value' | 'onChange' | 'defaultValue'\n  > & {\n    value?: (ChipValue | string)[];\n    defaultValue?: (ChipValue | string)[];\n    displayWith?: (value: ChipValue) => ReactNode;\n    validateWith?: (value: ChipValue) => ChipValue;\n    allowCustomValue?: boolean;\n    showDropdownArrow?: boolean;\n    onChange?: (value: ChipValue[]) => void;\n    suggestions?: T[];\n    children?: ListBoxChildren<T>['children'];\n    placeholder?: string;\n    chipSize?: ChipProps['size'];\n    openMenuOnFocus?: boolean;\n    valueKey?: 'id' | 'name';\n    onChipClick?: (value: ChipValue) => void;\n  };\n\nfunction ChipFieldInner<T>(\n  props: ChipFieldProps<T>,\n  ref: Ref<HTMLInputElement>,\n) {\n  const fieldRef = useRef<HTMLDivElement>(null);\n  const inputRef = useObjectRef(ref);\n  const {\n    displayWith = v => v.name,\n    validateWith,\n    children,\n    suggestions,\n    isLoading,\n    inputValue,\n    onInputValueChange,\n    onItemSelected,\n    placeholder,\n    onOpenChange,\n    chipSize = 'sm',\n    openMenuOnFocus = true,\n    showEmptyMessage,\n    value: propsValue,\n    defaultValue,\n    onChange: propsOnChange,\n    valueKey,\n    isAsync,\n    allowCustomValue = true,\n    showDropdownArrow,\n    onChipClick,\n    ...inputFieldProps\n  } = props;\n  const fieldClassNames = getInputFieldClassNames({\n    ...props,\n    flexibleHeight: true,\n  });\n\n  const [value, onChange] = useChipFieldValueState(props);\n\n  const [listboxIsOpen, setListboxIsOpen] = useState(false);\n\n  const loadingIndicator = (\n    <ProgressCircle isIndeterminate size=\"sm\" aria-label=\"loading...\" />\n  );\n\n  const dropdownArrow = showDropdownArrow ? <KeyboardArrowDownIcon /> : null;\n\n  const {fieldProps, inputProps} = useField({\n    ...inputFieldProps,\n    focusRef: inputRef,\n    endAdornment: isLoading && listboxIsOpen ? loadingIndicator : dropdownArrow,\n  });\n\n  return (\n    <Field fieldClassNames={fieldClassNames} {...fieldProps}>\n      <Input\n        ref={fieldRef}\n        className={clsx('flex flex-wrap items-center', fieldClassNames.input)}\n        onClick={() => {\n          // refocus input when clicking outside it, but while still inside chip field\n          inputRef.current?.focus();\n        }}\n      >\n        <ListWrapper\n          displayChipUsing={displayWith}\n          onChipClick={onChipClick}\n          items={value}\n          setItems={onChange}\n          chipSize={chipSize}\n        />\n        <ChipInput\n          showEmptyMessage={showEmptyMessage}\n          inputProps={inputProps}\n          inputValue={inputValue}\n          onInputValueChange={onInputValueChange}\n          fieldRef={fieldRef}\n          inputRef={inputRef}\n          chips={value}\n          setChips={onChange}\n          validateWith={validateWith}\n          isLoading={isLoading}\n          suggestions={suggestions}\n          placeholder={placeholder}\n          openMenuOnFocus={openMenuOnFocus}\n          listboxIsOpen={listboxIsOpen}\n          setListboxIsOpen={setListboxIsOpen}\n          allowCustomValue={allowCustomValue}\n        >\n          {children}\n        </ChipInput>\n      </Input>\n    </Field>\n  );\n}\n\ninterface ListWrapperProps {\n  items: ChipValue[];\n  setItems: (items: ChipValue[]) => void;\n  displayChipUsing: (value: ChipValue) => ReactNode;\n  chipSize?: ChipProps['size'];\n  onChipClick?: (value: ChipValue) => void;\n}\nfunction ListWrapper({\n  items,\n  setItems,\n  displayChipUsing,\n  chipSize,\n  onChipClick,\n}: ListWrapperProps) {\n  const manager = useFocusManager();\n  const removeItem = useCallback(\n    (key: Key) => {\n      const i = items.findIndex(cr => cr.id === key);\n      const newItems = [...items];\n      if (i > -1) {\n        newItems.splice(i, 1);\n        setItems(newItems);\n      }\n      return newItems;\n    },\n    [items, setItems],\n  );\n\n  return (\n    <ChipList\n      className=\"my-8 max-w-full flex-shrink-0 flex-wrap\"\n      size={chipSize}\n      selectable\n    >\n      {items.map(item => (\n        <Chip\n          key={item.id}\n          errorMessage={item.errorMessage}\n          adornment={item.image ? <Avatar circle src={item.image} /> : null}\n          onClick={() => onChipClick?.(item)}\n          onRemove={() => {\n            const newItems = removeItem(item.id);\n            if (newItems.length) {\n              // focus previous chip\n              manager?.focusPrevious({tabbable: true});\n            } else {\n              // focus input\n              manager?.focusLast();\n            }\n          }}\n        >\n          {displayChipUsing(item)}\n        </Chip>\n      ))}\n    </ChipList>\n  );\n}\n\ninterface ChipInputProps<T> {\n  showEmptyMessage?: boolean;\n  inputProps: ReturnType<typeof useField>['inputProps'];\n  inputValue?: string;\n  onInputValueChange?: (value: string) => void;\n  fieldRef: RefObject<HTMLDivElement>;\n  inputRef: RefObject<HTMLInputElement>;\n  chips: ChipValue[];\n  setChips: (items: ChipValue[]) => void;\n  validateWith?: (value: ChipValue) => ChipValue;\n  isLoading?: boolean;\n  suggestions?: T[];\n  placeholder?: string;\n  openMenuOnFocus?: boolean;\n  listboxIsOpen: boolean;\n  setListboxIsOpen: (value: boolean) => void;\n  allowCustomValue: boolean;\n  children: ListBoxChildren<T>['children'];\n}\nfunction ChipInput<T>(props: ChipInputProps<T>) {\n  const {\n    inputRef,\n    fieldRef,\n    validateWith,\n    setChips,\n    chips,\n    suggestions,\n    inputProps,\n    placeholder,\n    openMenuOnFocus,\n    listboxIsOpen,\n    setListboxIsOpen,\n    allowCustomValue,\n    isLoading,\n  } = props;\n  const inputClassName = 'outline-none text-sm mx-8 my-4 h-30 flex-auto';\n  const manager = useFocusManager();\n\n  const addItems = useCallback(\n    (items?: ChipValue[]) => {\n      items = (items || []).filter(item => {\n        const invalid = !item || !item.id || !item.name;\n        const alreadyExists = chips.findIndex(cr => cr.id === item?.id) > -1;\n        return !alreadyExists && !invalid;\n      });\n      if (!items.length) return;\n\n      if (validateWith) {\n        items = items.map(item => validateWith(item));\n      }\n      setChips([...chips, ...items]);\n    },\n    [chips, setChips, validateWith],\n  );\n\n  const listbox = useListbox<T>({\n    ...props,\n    clearInputOnItemSelection: true,\n    isOpen: listboxIsOpen,\n    onOpenChange: setListboxIsOpen,\n    items: suggestions,\n    selectionMode: 'none',\n    role: 'listbox',\n    virtualFocus: true,\n    onItemSelected: value => {\n      handleItemSelection(value as string);\n    },\n  });\n\n  const {\n    state: {\n      activeIndex,\n      setActiveIndex,\n      isOpen,\n      setIsOpen,\n      inputValue,\n      setInputValue,\n    },\n    refs,\n    listboxId,\n    collection,\n    onInputChange,\n  } = listbox;\n\n  const handleItemSelection = (textValue: string) => {\n    const option =\n      collection.size && activeIndex != null\n        ? [...collection.values()][activeIndex]\n        : null;\n    if (option?.item) {\n      addItems([option.item]);\n    } else if (allowCustomValue) {\n      addItems([stringToChipValue(option ? option.value : textValue)]);\n    }\n\n    setInputValue('');\n    setActiveIndex(null);\n    setIsOpen(false);\n  };\n\n  // position dropdown relative to whole chip field, not the input\n  useLayoutEffect(() => {\n    if (fieldRef.current && refs.reference.current !== fieldRef.current) {\n      listbox.reference(fieldRef.current);\n    }\n  }, [fieldRef, listbox, refs]);\n\n  const {handleTriggerKeyDown, handleListboxKeyboardNavigation} =\n    useListboxKeyboardNavigation(listbox);\n\n  const handleFocusAndClick = createEventHandler(() => {\n    if (openMenuOnFocus && !isOpen) {\n      setIsOpen(true);\n    }\n  });\n\n  return (\n    <Listbox\n      listbox={listbox}\n      mobileOverlay={Popover}\n      isLoading={isLoading}\n      onPointerDown={e => {\n        // prevent focus from leaving input when scrolling listbox via mouse\n        e.preventDefault();\n      }}\n    >\n      <input\n        type=\"text\"\n        className={clsx(inputClassName, 'bg-transparent')}\n        placeholder={placeholder}\n        {...mergeProps(inputProps, {\n          ref: inputRef,\n          value: inputValue,\n          onChange: onInputChange,\n          onPaste: e => {\n            const paste = e.clipboardData.getData('text');\n            const emails = paste.match(\n              /([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9._-]+)/gi,\n            );\n            if (emails) {\n              e.preventDefault();\n              const selection = window.getSelection();\n              if (selection?.rangeCount) {\n                selection.deleteFromDocument();\n                addItems(emails.map(email => stringToChipValue(email)));\n              }\n            }\n          },\n          'aria-autocomplete': 'list',\n          'aria-controls': isOpen ? listboxId : undefined,\n          autoComplete: 'off',\n          autoCorrect: 'off',\n          spellCheck: 'false',\n          onKeyDown: e => {\n            const input = e.target as HTMLInputElement;\n\n            if (e.key === 'Enter') {\n              // prevent form submitting\n              e.preventDefault();\n              // add chip from selected listbox option or current input text value\n              handleItemSelection(input.value);\n              return;\n            }\n\n            // on escape, clear input and close dropdown\n            if (e.key === 'Escape' && isOpen) {\n              setIsOpen(false);\n              setInputValue('');\n            }\n\n            // move focus to input when focus is on first item and prevent arrow up from cycling listbox\n            if (\n              e.key === 'ArrowUp' &&\n              isOpen &&\n              (activeIndex === 0 || activeIndex == null)\n            ) {\n              setActiveIndex(null);\n              return;\n            }\n\n            // block left and right arrows from navigating in input, if focus is on listbox\n            if (\n              activeIndex != null &&\n              (e.key === 'ArrowLeft' || e.key === 'ArrowRight')\n            ) {\n              e.preventDefault();\n              return;\n            }\n\n            // move focus on the last chip, if focus is at the  start of input\n            if (\n              (e.key === 'ArrowLeft' ||\n                e.key === 'Backspace' ||\n                e.key === 'Delete') &&\n              input.selectionStart === 0 &&\n              activeIndex == null &&\n              chips.length\n            ) {\n              manager?.focusPrevious({tabbable: true});\n              return;\n            }\n\n            // fallthrough to listbox navigation handlers for arrow keys\n            const handled = handleTriggerKeyDown(e);\n            if (!handled) {\n              handleListboxKeyboardNavigation(e);\n            }\n          },\n          onFocus: handleFocusAndClick,\n          onClick: handleFocusAndClick,\n        } as HTMLAttributes<HTMLInputElement>)}\n      />\n    </Listbox>\n  );\n}\n\nfunction useChipFieldValueState({\n  onChange,\n  value,\n  defaultValue,\n  valueKey,\n}: ChipFieldProps<any>) {\n  // convert value from string[] to ChipValue[], if needed\n  const propsValue = useMemo(() => {\n    return mixedValueToChipValue(value);\n  }, [value]);\n\n  // convert defaultValue from string[] to ChipValue[], if needed\n  const propsDefaultValue = useMemo(() => {\n    return mixedValueToChipValue(defaultValue);\n  }, [defaultValue]);\n\n  // emit string[] or ChipValue[] on change, based on \"valueKey\" prop\n  const handleChange = useCallback(\n    (value: ChipValue[]) => {\n      const newValue = valueKey ? value.map(v => v[valueKey]) : value;\n      onChange?.(newValue as any);\n    },\n    [onChange, valueKey],\n  );\n\n  return useControlledState<ChipValue[]>(\n    !propsValue ? undefined : propsValue,\n    propsDefaultValue || [],\n    handleChange,\n  );\n}\n\nfunction mixedValueToChipValue(\n  value?: (string | number | ChipValue)[] | null,\n): ChipValue[] | undefined {\n  if (value == null) {\n    return undefined;\n  }\n\n  return value.map(v => {\n    return typeof v !== 'object' ? stringToChipValue(v as string) : v;\n  });\n}\n\nexport const ChipField = React.forwardRef(ChipFieldInner) as <T>(\n  props: ChipFieldProps<T> & {ref?: Ref<HTMLInputElement>},\n) => ReactElement;\n","import {useController} from 'react-hook-form';\nimport {mergeProps} from '@react-aria/utils';\nimport React from 'react';\nimport {ChipField, ChipFieldProps} from './chip-field';\n\nexport type FormChipFieldProps<T> = ChipFieldProps<T> & {\n  name: string;\n};\n\nexport function FormChipField<T>({children, ...props}: FormChipFieldProps<T>) {\n  const {\n    field: {onChange, onBlur, value = [], ref},\n    fieldState: {invalid, error},\n  } = useController({\n    name: props.name,\n  });\n\n  const formProps: Partial<ChipFieldProps<T>> = {\n    onChange,\n    onBlur,\n    value,\n    invalid,\n    errorMessage: error?.message,\n  };\n\n  return (\n    <ChipField ref={ref} {...mergeProps(formProps, props)}>\n      {children}\n    </ChipField>\n  );\n}\n","import {Item} from '@common/ui/forms/listbox/item';\nimport {FilterPanelProps} from '@common/datatable/filters/panels/filter-panel-props';\nimport {FormChipField} from '@common/ui/forms/input-field/chip-field/form-chip-field';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {FilterChipFieldControl} from '@common/datatable/filters/backend-filter';\nimport {Trans} from '@common/i18n/trans';\n\nexport function ChipFieldFilterPanel({\n  filter,\n}: FilterPanelProps<FilterChipFieldControl>) {\n  const {trans} = useTrans();\n  return (\n    <FormChipField\n      size=\"sm\"\n      name={`${filter.key}.value`}\n      valueKey=\"id\"\n      allowCustomValue={false}\n      showDropdownArrow\n      placeholder={\n        filter.control.placeholder\n          ? trans(filter.control.placeholder)\n          : undefined\n      }\n      displayWith={chip =>\n        filter.control.options.find(o => o.key === chip.id)?.label.message\n      }\n      suggestions={filter.control.options.map(o => ({\n        id: o.key,\n        name: o.label.message,\n      }))}\n    >\n      {chip => (\n        <Item key={chip.id} value={chip.id}>\n          {<Trans message={chip.name} />}\n        </Item>\n      )}\n    </FormChipField>\n  );\n}\n","import {Fragment, memo} from 'react';\nimport {useNumberFormatter} from './use-number-formatter';\nimport {NumberFormatOptions} from '@internationalized/number';\nimport {shallowEqual} from '../utils/shallow-equal';\n\ninterface FormattedNumberProps extends NumberFormatOptions {\n  value: number;\n}\nexport const FormattedNumber = memo(\n  ({value, ...options}: FormattedNumberProps) => {\n    const formatter = useNumberFormatter(options);\n\n    if (isNaN(value)) {\n      value = 0;\n    }\n\n    return <Fragment>{formatter.format(value)}</Fragment>;\n  },\n  shallowEqual\n);\n","import {\n  BackendFilter,\n  CustomFilterControl,\n  DatePickerFilterControl,\n  FilterBooleanToggleControl,\n  FilterChipFieldControl,\n  FilterControl,\n  FilterControlType,\n  FilterNumberInputControl,\n  FilterOperator,\n  FilterSelectControl,\n  FilterSelectModelControl,\n  FilterTextInputControl,\n} from '../backend-filter';\nimport {FilterListTriggerButton} from './filter-list-trigger-button';\nimport {Trans} from '@common/i18n/trans';\nimport {SelectFilterPanel} from '../panels/select-filter-panel';\nimport {FilterListItemDialogTrigger} from './filter-list-item-dialog-trigger';\nimport {Avatar} from '@common/ui/images/avatar';\nimport {NormalizedModelFilterPanel} from '../panels/normalized-model-filter-panel';\nimport {DateRangeFilterPanel} from '../panels/date-range-filter-panel';\nimport {Fragment, Key, ReactNode} from 'react';\nimport {DateRangePresets} from '@common/ui/forms/input-field/date/date-range-picker/dialog/date-range-presets';\nimport {FormattedDateTimeRange} from '@common/i18n/formatted-date-time-range';\nimport {AbsoluteDateRange} from '@common/ui/forms/input-field/date/date-range-picker/form-date-range-picker';\nimport {InputFilterPanel} from '../panels/input-filter-panel';\nimport {FilterOperatorNames} from '../filter-operator-names';\nimport {FilterItemFormValue} from '../add-filter-dialog';\nimport {useNormalizedModel} from '@common/users/queries/use-normalized-model';\nimport {Skeleton} from '@common/ui/skeleton/skeleton';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {ChipFieldFilterPanel} from '@common/datatable/filters/panels/chip-field-filter-panel';\nimport {FormattedNumber} from '@common/i18n/formatted-number';\n\nexport interface FilterListControlProps<T = unknown, E = FilterControl> {\n  filter: BackendFilter<E>;\n  onValueChange: (value: FilterItemFormValue<T>) => void;\n  value: T;\n  operator?: FilterOperator;\n  isInactive?: boolean;\n}\nexport function FilterListControl(props: FilterListControlProps<any, any>) {\n  switch (props.filter.control.type) {\n    case FilterControlType.DateRangePicker:\n      return <DatePickerControl {...props} />;\n    case FilterControlType.BooleanToggle:\n      return <BooleanToggleControl {...props} />;\n    case FilterControlType.Select:\n      return <SelectControl {...props} />;\n    case FilterControlType.ChipField:\n      return <ChipFieldControl {...props} />;\n    case FilterControlType.Input:\n      return <InputControl {...props} />;\n    case FilterControlType.SelectModel:\n      return <SelectModelControl {...props} />;\n    case FilterControlType.Custom:\n      const Control = (props.filter.control as CustomFilterControl).listItem;\n      return <Control {...props} />;\n    default:\n      return null;\n  }\n}\n\nfunction DatePickerControl(\n  props: FilterListControlProps<\n    Required<AbsoluteDateRange>,\n    DatePickerFilterControl\n  >,\n) {\n  const {value, filter} = props;\n\n  let valueLabel: ReactNode;\n  if (value.preset !== undefined) {\n    valueLabel = <Trans {...DateRangePresets[value.preset].label} />;\n  } else {\n    valueLabel = (\n      <FormattedDateTimeRange\n        start={new Date(value.start)}\n        end={new Date(value.end)}\n        options={{dateStyle: 'medium'}}\n      />\n    );\n  }\n\n  return (\n    <FilterListItemDialogTrigger\n      {...props}\n      label={valueLabel}\n      panel={<DateRangeFilterPanel filter={filter} />}\n    />\n  );\n}\n\nfunction BooleanToggleControl({\n  filter,\n  isInactive,\n  onValueChange,\n}: FilterListControlProps<\n  FilterBooleanToggleControl['defaultValue'],\n  FilterBooleanToggleControl\n>) {\n  // todo: toggle control on or off here\n  return (\n    <FilterListTriggerButton\n      onClick={() => {\n        onValueChange({value: filter.control.defaultValue});\n      }}\n      filter={filter}\n      isInactive={isInactive}\n    />\n  );\n}\n\nfunction SelectControl(\n  props: FilterListControlProps<Key, FilterSelectControl>,\n) {\n  const {filter, value} = props;\n  const option = filter.control.options.find(o => o.key === value);\n  return (\n    <FilterListItemDialogTrigger\n      {...props}\n      label={option ? <Trans {...option.label} /> : null}\n      panel={<SelectFilterPanel filter={filter} />}\n    />\n  );\n}\n\nfunction ChipFieldControl(\n  props: FilterListControlProps<string[], FilterChipFieldControl>,\n) {\n  return (\n    <FilterListItemDialogTrigger\n      {...props}\n      label={<MultipleValues {...props} />}\n      panel={<ChipFieldFilterPanel filter={props.filter} />}\n    />\n  );\n}\n\nfunction MultipleValues(\n  props: FilterListControlProps<string[], FilterChipFieldControl>,\n) {\n  const {trans} = useTrans();\n  const {filter, value} = props;\n  const options = value.map(v => filter.control.options.find(o => o.key === v));\n  const maxShownCount = 3;\n  const notShownCount = value.length - maxShownCount;\n\n  // translate names, add commas and limit to 3\n  const names = (\n    <Fragment>\n      {options\n        .filter(Boolean)\n        .slice(0, maxShownCount)\n        .map((o, i) => {\n          let name = '';\n          if (i !== 0) {\n            name += ', ';\n          }\n          name += trans(o!.label);\n          return name;\n        })}\n    </Fragment>\n  );\n\n  // indicate that there are some names not shown\n  return notShownCount > 0 ? (\n    <Trans\n      message=\":names + :count more\"\n      values={{names: names, count: notShownCount}}\n    />\n  ) : (\n    names\n  );\n}\n\nfunction InputControl(\n  props: FilterListControlProps<\n    string,\n    FilterTextInputControl | FilterNumberInputControl\n  >,\n) {\n  const {filter, value, operator} = props;\n\n  const operatorLabel = operator ? (\n    <Trans {...FilterOperatorNames[operator]} />\n  ) : null;\n\n  const formattedValue =\n    filter.control.inputType === 'number' ? (\n      <FormattedNumber value={value as any} />\n    ) : (\n      value\n    );\n\n  return (\n    <FilterListItemDialogTrigger\n      {...props}\n      label={\n        <Fragment>\n          {operatorLabel} {formattedValue}\n        </Fragment>\n      }\n      panel={<InputFilterPanel filter={filter} />}\n    />\n  );\n}\n\nfunction SelectModelControl(\n  props: FilterListControlProps<string, FilterSelectModelControl>,\n) {\n  const {value, filter} = props;\n  const {isLoading, data} = useNormalizedModel(\n    `normalized-models/${filter.control.model}/${value}`,\n    undefined,\n    {enabled: !!value},\n  );\n\n  const skeleton = (\n    <Fragment>\n      <Skeleton variant=\"avatar\" size=\"w-18 h-18 mr-6\" />\n      <Skeleton variant=\"rect\" size=\"w-50\" />\n    </Fragment>\n  );\n  const modelPreview = (\n    <Fragment>\n      <Avatar size=\"xs\" src={data?.model.image} className=\"mr-6\" />\n      {data?.model.name}\n    </Fragment>\n  );\n\n  const label = isLoading || !data ? skeleton : modelPreview;\n\n  return (\n    <FilterListItemDialogTrigger\n      {...props}\n      label={label}\n      panel={<NormalizedModelFilterPanel filter={filter} />}\n    />\n  );\n}\n","import clsx from 'clsx';\nimport {BackendFilter} from '../backend-filter';\nimport {useBackendFilterUrlParams} from '../backend-filter-url-params';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {CloseIcon} from '@common/icons/material/Close';\nimport {FilterListControl} from './filter-list-control';\nimport {FilterItemFormValue} from '../add-filter-dialog';\n\ninterface FilterListProps {\n  filters: BackendFilter[];\n  // these filters will always be shown, even if value is not yet selected for filter\n  pinnedFilters?: string[];\n  className?: string;\n}\nexport function FilterList({\n  filters,\n  pinnedFilters,\n  className,\n}: FilterListProps) {\n  const {decodedFilters, remove, replaceAll} = useBackendFilterUrlParams(\n    filters,\n    pinnedFilters\n  );\n\n  if (!decodedFilters.length) return null;\n\n  return (\n    <div className={clsx('flex items-center gap-6 overflow-x-auto', className)}>\n      {decodedFilters.map((field, index) => {\n        const filter = filters.find(f => f.key === field.key);\n\n        if (!filter) return null;\n\n        const handleValueChange = (payload: FilterItemFormValue) => {\n          const newFilters = [...decodedFilters];\n          newFilters.splice(index, 1, {\n            key: filter.key,\n            value: payload.value,\n            isInactive: false,\n            operator: payload.operator || filter.defaultOperator,\n          });\n          replaceAll(newFilters);\n        };\n\n        return (\n          <div key={field.key}>\n            {!field.isInactive && (\n              <IconButton\n                variant=\"outline\"\n                color=\"primary\"\n                size=\"xs\"\n                radius=\"rounded-l-md\"\n                onClick={() => {\n                  remove(field.key);\n                }}\n              >\n                <CloseIcon />\n              </IconButton>\n            )}\n            <FilterListControl\n              filter={filter}\n              isInactive={field.isInactive}\n              value={field.valueKey != null ? field.valueKey : field.value}\n              operator={field.operator}\n              onValueChange={handleValueChange}\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FilterAltIcon = createSvgIcon(\n  <path d=\"M7 6h10l-5.01 6.3L7 6zm-2.75-.39C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61z\" />\n, 'FilterAltOutlined');\n","import React, {\n  cloneElement,\n  isValidElement,\n  Key,\n  ReactElement,\n  ReactNode,\n  useId,\n  useRef,\n} from 'react';\nimport clsx from 'clsx';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {useControlledState} from '@react-stately/utils';\nimport {FocusScope, useFocusManager} from '@react-aria/focus';\nimport {AccordionAnimation} from '@common/ui/accordion/accordtion-animation';\nimport {ArrowDropDownIcon} from '@common/icons/material/ArrowDropDown';\n\ntype Props = {\n  variant?: 'outline' | 'default' | 'minimal';\n  children?: ReactNode;\n  mode?: 'single' | 'multiple';\n  expandedValues?: Key[];\n  defaultExpandedValues?: Key[];\n  onExpandedChange?: (key: Key[]) => void;\n  className?: string;\n  isLazy?: boolean;\n};\nexport const Accordion = React.forwardRef<HTMLDivElement, Props>(\n  (\n    {\n      variant = 'default',\n      mode = 'single',\n      children,\n      className,\n      isLazy,\n      ...other\n    },\n    ref,\n  ) => {\n    const [expandedValues, setExpandedValues] = useControlledState(\n      other.expandedValues,\n      other.defaultExpandedValues || [],\n      other.onExpandedChange,\n    );\n\n    const itemsCount = React.Children.count(children);\n\n    return (\n      <div\n        className={clsx(variant === 'outline' && 'space-y-10', className)}\n        ref={ref}\n        role=\"presentation\"\n      >\n        <AnimatePresence>\n          <FocusScope>\n            {React.Children.map(children, (child, index) => {\n              if (!isValidElement<ClonedItemProps>(child)) return null;\n              return cloneElement<ClonedItemProps>(child, {\n                key: child.key || index,\n                value: child.props.value || index,\n                isFirst: index === 0,\n                isLast: index === itemsCount - 1,\n                mode,\n                variant,\n                expandedValues,\n                setExpandedValues,\n                isLazy,\n              });\n            })}\n          </FocusScope>\n        </AnimatePresence>\n      </div>\n    );\n  },\n);\n\ninterface AccordionItemProps {\n  children: ReactNode;\n  disabled?: boolean;\n  label: ReactNode;\n  description?: ReactNode;\n  value?: Key;\n  isFirst?: boolean;\n  isLast?: boolean;\n  bodyClassName?: string;\n  labelClassName?: string;\n  buttonPadding?: string;\n  chevronPosition?: 'left' | 'right';\n  startIcon?: ReactElement;\n  endAppend?: ReactElement;\n}\ninterface ClonedItemProps extends AccordionItemProps {\n  variant?: 'outline' | 'default' | 'minimal';\n  expandedValues: Key[];\n  setExpandedValues: (keys: Key[]) => void;\n  mode: 'single' | 'multiple';\n  value: Key;\n  isLazy?: boolean;\n}\nexport function AccordionItem({\n  children,\n  label,\n  disabled,\n  bodyClassName,\n  labelClassName,\n  buttonPadding = 'py-10 pl-14 pr-10',\n  startIcon,\n  description,\n  endAppend,\n  chevronPosition = 'right',\n  isFirst,\n  isLast,\n  ...other\n}: AccordionItemProps) {\n  const {expandedValues, setExpandedValues, variant, value, mode, isLazy} =\n    other as ClonedItemProps;\n  const ref = useRef<HTMLButtonElement>(null);\n  const isExpanded = !disabled && expandedValues.includes(value);\n  const wasExpandedOnce = useRef(false);\n  if (isExpanded) {\n    wasExpandedOnce.current = true;\n  }\n  const focusManager = useFocusManager();\n  const id = useId();\n  const buttonId = `${id}-button`;\n  const panelId = `${id}-panel`;\n\n  const onKeyDown = (e: React.KeyboardEvent<HTMLButtonElement>) => {\n    switch (e.key) {\n      case 'ArrowDown':\n        focusManager?.focusNext();\n        break;\n      case 'ArrowUp':\n        focusManager?.focusPrevious();\n        break;\n      case 'Home':\n        focusManager?.focusFirst();\n        break;\n      case 'End':\n        focusManager?.focusLast();\n        break;\n    }\n  };\n\n  const toggle = () => {\n    const i = expandedValues.indexOf(value);\n    if (i > -1) {\n      const newKeys = [...expandedValues];\n      newKeys.splice(i, 1);\n      setExpandedValues(newKeys);\n    } else if (mode === 'single') {\n      setExpandedValues([value]);\n    } else {\n      setExpandedValues([...expandedValues, value]);\n    }\n  };\n\n  const chevron = (\n    <div className={clsx(variant === 'minimal' && '')}>\n      <ArrowDropDownIcon\n        aria-hidden=\"true\"\n        size=\"md\"\n        className={clsx(\n          disabled ? 'text-disabled' : 'text-muted',\n          isExpanded && 'rotate-180 transition-transform',\n        )}\n      />\n    </div>\n  );\n\n  return (\n    <div\n      className={clsx(\n        variant === 'default' && 'border-b',\n        variant === 'outline' && 'rounded-panel border',\n        disabled && 'text-disabled',\n      )}\n    >\n      <h3\n        className={clsx(\n          'flex w-full items-center justify-between text-sm',\n          disabled && 'pointer-events-none',\n          isFirst && variant === 'default' && 'border-t',\n          isExpanded && variant !== 'minimal'\n            ? 'border-b'\n            : 'border-b border-b-transparent',\n          variant === 'outline'\n            ? isExpanded\n              ? 'rounded-panel-t'\n              : 'rounded-panel'\n            : undefined,\n        )}\n      >\n        <button\n          disabled={disabled}\n          aria-expanded={isExpanded}\n          id={buttonId}\n          aria-controls={panelId}\n          type=\"button\"\n          ref={ref}\n          onKeyDown={onKeyDown}\n          onClick={() => {\n            if (!disabled) {\n              toggle();\n            }\n          }}\n          className={clsx(\n            'flex flex-auto items-center gap-10 text-left outline-none hover:bg-hover focus-visible:bg-primary/focus',\n            buttonPadding,\n          )}\n        >\n          {chevronPosition === 'left' && chevron}\n          {startIcon &&\n            cloneElement(startIcon, {\n              size: 'md',\n              className: clsx(\n                startIcon.props.className,\n                disabled ? 'text-disabled' : 'text-muted',\n              ),\n            })}\n          <div className=\"flex-auto overflow-hidden overflow-ellipsis\">\n            <div className={labelClassName} data-testid=\"accordion-label\">\n              {label}\n            </div>\n            {description && (\n              <div className=\"text-xs text-muted\">{description}</div>\n            )}\n          </div>\n          {chevronPosition === 'right' && chevron}\n        </button>\n        {endAppend && (\n          <div className=\"flex-shrink-0 px-4 text-sm text-muted\">\n            {endAppend}\n          </div>\n        )}\n      </h3>\n      <m.div\n        aria-labelledby={id}\n        role=\"region\"\n        variants={AccordionAnimation.variants}\n        transition={AccordionAnimation.transition}\n        initial={false}\n        animate={isExpanded ? 'open' : 'closed'}\n      >\n        <div className={clsx('p-16', bodyClassName)}>\n          {!isLazy || wasExpandedOnce ? children : null}\n        </div>\n      </m.div>\n    </div>\n  );\n}\n","import {FilterPanelProps} from './filter-panel-props';\nimport {FilterBooleanToggleControl} from '@common/datatable/filters/backend-filter';\n\nexport function BooleanFilterPanel({\n  filter,\n}: FilterPanelProps<FilterBooleanToggleControl>) {\n  // Toggling accordion in the dialog will already apply boolean filter, no need for any extra fields here\n  return null;\n}\n","import {Dialog} from '../../ui/overlays/dialog/dialog';\nimport {\n  BackendFilter,\n  CustomFilterControl,\n  DatePickerFilterControl,\n  FilterBooleanToggleControl,\n  FilterChipFieldControl,\n  FilterControlType,\n  FilterOperator,\n  FilterSelectControl,\n  FilterSelectModelControl,\n  FilterTextInputControl,\n} from './backend-filter';\nimport {Trans} from '../../i18n/trans';\nimport {Key, useState} from 'react';\nimport {DialogHeader} from '../../ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '../../ui/overlays/dialog/dialog-body';\nimport {useBackendFilterUrlParams} from './backend-filter-url-params';\nimport {useDialogContext} from '../../ui/overlays/dialog/dialog-context';\nimport {Accordion, AccordionItem} from '../../ui/accordion/accordion';\nimport {Button} from '../../ui/buttons/button';\nimport {useForm} from 'react-hook-form';\nimport {Form} from '../../ui/forms/form';\nimport {Checkbox} from '../../ui/forms/toggle/checkbox';\nimport {SelectFilterPanel} from './panels/select-filter-panel';\nimport {DateRangeFilterPanel} from './panels/date-range-filter-panel';\nimport {NormalizedModelFilterPanel} from './panels/normalized-model-filter-panel';\nimport {InputFilterPanel} from './panels/input-filter-panel';\nimport {BooleanFilterPanel} from './panels/boolean-filter-panel';\nimport clsx from 'clsx';\nimport {ChipFieldFilterPanel} from '@common/datatable/filters/panels/chip-field-filter-panel';\n\nexport interface FilterItemFormValue<T = any> {\n  value: T;\n  operator?: FilterOperator;\n}\n\ninterface AddFilterDialogProps {\n  filters: BackendFilter[];\n}\nexport function AddFilterDialog({filters}: AddFilterDialogProps) {\n  const {decodedFilters} = useBackendFilterUrlParams(filters);\n  const {formId} = useDialogContext();\n\n  // expand currently active filters\n  const [expandedFilters, setExpandedFilters] = useState<Key[]>(() => {\n    return decodedFilters.map(f => f.key);\n  });\n\n  const clearButton = (\n    <Button\n      size=\"xs\"\n      variant=\"outline\"\n      className=\"mr-auto\"\n      onClick={() => {\n        setExpandedFilters([]);\n      }}\n    >\n      <Trans message=\"Clear\" />\n    </Button>\n  );\n\n  const applyButton = (\n    <Button\n      size=\"xs\"\n      variant=\"flat\"\n      color=\"primary\"\n      className=\"ml-auto\"\n      type=\"submit\"\n      form={formId}\n    >\n      <Trans message=\"Apply\" />\n    </Button>\n  );\n\n  return (\n    <Dialog className=\"min-w-[300px]\" maxWidth=\"max-w-400\" size=\"auto\">\n      <DialogHeader\n        padding=\"px-14 py-10\"\n        leftAdornment={clearButton}\n        rightAdornment={applyButton}\n      >\n        <Trans message=\"Filter\" />\n      </DialogHeader>\n      <DialogBody padding=\"p-0\">\n        <FilterList\n          filters={filters}\n          expandedFilters={expandedFilters}\n          setExpandedFilters={setExpandedFilters}\n        />\n      </DialogBody>\n    </Dialog>\n  );\n}\n\ninterface FilterListProps {\n  filters: BackendFilter[];\n  expandedFilters: Key[];\n  setExpandedFilters: (value: Key[]) => void;\n}\nfunction FilterList({\n  filters,\n  expandedFilters,\n  setExpandedFilters,\n}: FilterListProps) {\n  const {decodedFilters, replaceAll} = useBackendFilterUrlParams(filters);\n\n  // either get value and operator from url params if filter is active, or get defaults from filter config\n  const defaultValues: Record<string, FilterItemFormValue> = {};\n  filters.forEach(filter => {\n    const appliedFilter = decodedFilters.find(f => f.key === filter.key);\n    defaultValues[filter.key] =\n      appliedFilter?.value !== undefined\n        ? // there might be some extra keys set on filter besides\n          // \"value\" and \"operator\", so add the whole object to form\n          appliedFilter\n        : {\n            value: filter.control.defaultValue,\n            operator: filter.defaultOperator,\n          };\n  });\n  const form = useForm<Record<string, FilterItemFormValue>>({defaultValues});\n  const {formId, close} = useDialogContext();\n\n  return (\n    <Form\n      form={form}\n      id={formId}\n      onSubmit={formValue => {\n        const filterValue = Object.entries(formValue)\n          // remove undefined and non-expanded filters, so \"clear\" button will correctly remove active filters\n          .filter(\n            ([key, fieldValue]) =>\n              expandedFilters.includes(key) && fieldValue !== undefined\n          )\n          .map(([key, fieldValue]) => ({\n            key,\n            ...fieldValue, // value and operator from form\n          }));\n\n        replaceAll(filterValue);\n        close();\n      }}\n    >\n      <Accordion\n        mode=\"multiple\"\n        expandedValues={expandedFilters}\n        onExpandedChange={setExpandedFilters}\n      >\n        {filters.map(filter => (\n          <AccordionItem\n            startIcon={\n              <Checkbox checked={expandedFilters.includes(filter.key)} />\n            }\n            key={filter.key}\n            value={filter.key}\n            label={<Trans {...filter.label} />}\n            bodyClassName=\"max-h-288 overflow-y-auto compact-scrollbar\"\n          >\n            {filter.description && (\n              <div\n                className={clsx(\n                  'text-xs text-muted',\n                  // boolean filter will have nothing in the panel, no need to add margin\n                  filter.control.type !== FilterControlType.BooleanToggle &&\n                    'mb-14'\n                )}\n              >\n                <Trans {...filter.description} />\n              </div>\n            )}\n            <AddFilterDialogPanel filter={filter} />\n          </AccordionItem>\n        ))}\n      </Accordion>\n    </Form>\n  );\n}\n\ninterface ActiveFilterPanelProps {\n  filter: BackendFilter;\n}\nexport function AddFilterDialogPanel({filter}: ActiveFilterPanelProps) {\n  switch (filter.control.type) {\n    case FilterControlType.Select:\n      return (\n        <SelectFilterPanel\n          filter={filter as BackendFilter<FilterSelectControl>}\n        />\n      );\n    case FilterControlType.ChipField:\n      return (\n        <ChipFieldFilterPanel\n          filter={filter as BackendFilter<FilterChipFieldControl>}\n        />\n      );\n    case FilterControlType.DateRangePicker:\n      return (\n        <DateRangeFilterPanel\n          filter={filter as BackendFilter<DatePickerFilterControl>}\n        />\n      );\n    case FilterControlType.SelectModel:\n      return (\n        <NormalizedModelFilterPanel\n          filter={filter as BackendFilter<FilterSelectModelControl>}\n        />\n      );\n    case FilterControlType.Input:\n      return (\n        <InputFilterPanel\n          filter={filter as BackendFilter<FilterTextInputControl>}\n        />\n      );\n    case FilterControlType.BooleanToggle:\n      return (\n        <BooleanFilterPanel\n          filter={filter as BackendFilter<FilterBooleanToggleControl>}\n        />\n      );\n    case 'custom':\n      const CustomComponent = filter.control.panel;\n      return (\n        <CustomComponent\n          filter={filter as BackendFilter<CustomFilterControl>}\n        />\n      );\n    default:\n      return null;\n  }\n}\n","import {Button, ButtonProps} from '../../ui/buttons/button';\nimport {BackendFilter} from './backend-filter';\nimport {FilterAltIcon} from '../../icons/material/FilterAlt';\nimport {Trans} from '../../i18n/trans';\nimport {useIsMobileMediaQuery} from '../../utils/hooks/is-mobile-media-query';\nimport {IconButton} from '../../ui/buttons/icon-button';\nimport {DialogTrigger} from '../../ui/overlays/dialog/dialog-trigger';\nimport {AddFilterDialog} from './add-filter-dialog';\nimport {ReactElement} from 'react';\n\ninterface AddFilterButtonProps {\n  filters: BackendFilter[];\n  icon?: ReactElement;\n  color?: ButtonProps['color'];\n  variant?: ButtonProps['variant'];\n  disabled?: boolean;\n  size?: ButtonProps['size'];\n  className?: string;\n}\nexport function AddFilterButton({\n  filters,\n  icon = <FilterAltIcon />,\n  color = 'primary',\n  variant = 'outline',\n  size = 'sm',\n  disabled,\n  className,\n}: AddFilterButtonProps) {\n  const isMobile = useIsMobileMediaQuery();\n\n  const desktopButton = (\n    <Button\n      variant={variant}\n      color={color}\n      startIcon={icon}\n      disabled={disabled}\n      size={size}\n      className={className}\n    >\n      <Trans message=\"Filter\" />\n    </Button>\n  );\n\n  const mobileButton = (\n    <IconButton\n      color={color}\n      size=\"sm\"\n      variant={variant}\n      disabled={disabled}\n      className={className}\n    >\n      {icon}\n    </IconButton>\n  );\n\n  return (\n    <DialogTrigger type=\"popover\">\n      {isMobile ? mobileButton : desktopButton}\n      <AddFilterDialog filters={filters} />\n    </DialogTrigger>\n  );\n}\n","import {\n  BackendFilter,\n  DatePickerFilterControl,\n  FilterControlType,\n  FilterOperator,\n} from './backend-filter';\nimport {\n  DateRangePreset,\n  DateRangePresets,\n} from '../../ui/forms/input-field/date/date-range-picker/dialog/date-range-presets';\nimport {message} from '../../i18n/message';\nimport {dateRangeToAbsoluteRange} from '../../ui/forms/input-field/date/date-range-picker/form-date-range-picker';\nimport {PartialWithRequired} from '@common/utils/ts/partial-with-required';\n\nexport function timestampFilter(\n  options: PartialWithRequired<\n    BackendFilter<DatePickerFilterControl>,\n    'key' | 'label'\n  >\n): BackendFilter<DatePickerFilterControl> {\n  return {\n    ...options,\n    defaultOperator: FilterOperator.between,\n    control: {\n      type: FilterControlType.DateRangePicker,\n      defaultValue:\n        options.control?.defaultValue ||\n        dateRangeToAbsoluteRange(\n          (DateRangePresets[3] as Required<DateRangePreset>).getRangeValue()\n        ),\n    },\n  };\n}\n\nexport function createdAtFilter(\n  options: Partial<BackendFilter<DatePickerFilterControl>>\n): BackendFilter<DatePickerFilterControl> {\n  return timestampFilter({\n    key: 'created_at',\n    label: message('Date created'),\n    ...options,\n  });\n}\n\nexport function updatedAtFilter(\n  options: Partial<BackendFilter<DatePickerFilterControl>>\n): BackendFilter<DatePickerFilterControl> {\n  return timestampFilter({\n    key: 'updated_at',\n    label: message('Last updated'),\n    ...options,\n  });\n}\n","import {Permission} from './permission';\nimport {Subscription} from '../billing/subscription';\nimport {Role} from './role';\nimport {SocialProfile} from './social-profile';\nimport {AccessToken} from './access-token';\nimport type {ActiveSession} from '@common/auth/ui/account-settings/sessions-panel/requests/use-user-sessions';\n\nexport const USER_MODEL = 'user';\n\nexport interface User {\n  id: number;\n  display_name: string;\n  username?: string;\n  first_name?: string;\n  last_name?: string;\n  avatar?: string;\n  email_verified_at: string;\n  permissions?: Permission[];\n  email: string;\n  password: string;\n  language: string;\n  timezone: string;\n  country: string;\n  created_at: string;\n  updated_at: string;\n  subscriptions?: Omit<Subscription, 'user'>[];\n  roles: Role[];\n  social_profiles: SocialProfile[];\n  tokens?: AccessToken[];\n  has_password: boolean;\n  available_space: number | null;\n  unread_notifications_count?: number;\n  card_last_four?: number;\n  card_brand?: string;\n  card_expires?: string;\n  model_type: typeof USER_MODEL;\n  banned_at?: string;\n  followed_users?: Omit<User, 'followed_users' | 'followers'>[];\n  followers_count?: number;\n  followed_users_count?: number;\n  followers?: Omit<User, 'followed_users' | 'followers'>[];\n  last_login?: ActiveSession;\n  bans?: {\n    id: number;\n    comment: string;\n    expired_at?: string;\n  }[];\n  two_factor_confirmed_at?: string;\n  two_factor_recovery_codes?: string[];\n}\n","import React, {ReactNode} from 'react';\nimport {Avatar, AvatarProps} from '../../ui/images/avatar';\nimport {Skeleton} from '@common/ui/skeleton/skeleton';\nimport clsx from 'clsx';\n\ninterface Props {\n  image?: string;\n  label: ReactNode;\n  description?: ReactNode;\n  labelClassName?: string;\n  avatarSize?: AvatarProps['size'];\n}\nexport function NameWithAvatar({\n  image,\n  label,\n  description,\n  labelClassName,\n  avatarSize = 'md',\n}: Props) {\n  return (\n    <div className=\"flex items-center gap-12\">\n      {image && (\n        <Avatar size={avatarSize} className=\"flex-shrink-0\" src={image} />\n      )}\n      <div className=\"min-w-0 overflow-hidden\">\n        <div\n          className={clsx(labelClassName, 'overflow-hidden overflow-ellipsis')}\n        >\n          {label}\n        </div>\n        {description && (\n          <div className=\"overflow-hidden overflow-ellipsis text-xs text-muted\">\n            {description}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport function NameWithAvatarPlaceholder({\n  labelClassName,\n  showDescription,\n}: Partial<Props> & {\n  showDescription?: boolean;\n}) {\n  return (\n    <div className=\"flex w-full max-w-4/5 items-center gap-12\">\n      <Skeleton size=\"w-40 h-40 md:w-32 md:h-32\" variant=\"rect\" />\n      <div className=\"flex-auto\">\n        <div className={clsx(labelClassName, 'leading-3')}>\n          <Skeleton />\n        </div>\n        {showDescription && (\n          <div className=\"mt-4 leading-3 text-muted\">{<Skeleton />}</div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const MoreVertIcon = createSvgIcon(\n  <path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\" />\n, 'MoreVertOutlined');\n","import React from 'react';\nimport clsx from 'clsx';\nimport {ButtonColor, ButtonVariant} from './get-shared-button-style';\nimport {ButtonProps} from './button';\nimport {ButtonSize} from './button-size';\n\nexport interface ButtonGroupProps {\n  children: React.ReactNode[];\n  color?: ButtonColor;\n  variant?: ButtonVariant;\n  size?: ButtonSize;\n  radius?: string;\n  className?: string;\n  value?: any;\n  onChange?: (newValue: any) => void;\n  multiple?: boolean;\n  disabled?: boolean;\n}\nexport function ButtonGroup({\n  children,\n  color,\n  variant,\n  radius = 'rounded-button',\n  size,\n  className,\n  value,\n  onChange,\n  multiple,\n  disabled,\n}: ButtonGroupProps) {\n  const isActive = (childValue: any): boolean => {\n    // assume that button group is not used as a toggle group, if there is no value given\n    if (value === undefined) return false;\n    if (multiple) {\n      return (value as any[]).includes(childValue);\n    }\n    return childValue === value;\n  };\n\n  const toggleMultipleValue = (childValue: any) => {\n    const newValue = [...value];\n    const childIndex = value.indexOf(childValue);\n    if (childIndex > -1) {\n      newValue.splice(childIndex, 1);\n    } else {\n      newValue.push(childValue);\n    }\n    return newValue;\n  };\n\n  const buttons = React.Children.map(children, (button, i) => {\n    if (React.isValidElement(button)) {\n      const active = isActive(button.props.value);\n      const adjustedColor = active ? 'primary' : color;\n      return React.cloneElement<ButtonProps>(button as any, {\n        color: active ? 'primary' : color,\n        variant,\n        size,\n        radius: null,\n        disabled: button.props.disabled || disabled,\n        ...button.props,\n        onClick: e => {\n          if (button.props.onClick) {\n            button.props.onClick(e);\n          }\n          if (!onChange) return;\n          if (multiple) {\n            onChange?.(toggleMultipleValue(button.props.value));\n          } else {\n            onChange?.(button.props.value);\n          }\n        },\n        className: clsx(\n          button.props.className,\n          // borders are hidden via negative margin, make sure both are visible for active item\n          active ? 'z-20' : 'z-10',\n          getStyle(i, children, radius, adjustedColor),\n        ),\n      });\n    }\n  });\n  return (\n    <div className={clsx(radius, 'isolate inline-flex', className)}>\n      {buttons}\n    </div>\n  );\n}\n\nfunction getStyle(\n  i: number,\n  children: ButtonGroupProps['children'],\n  radius: ButtonGroupProps['radius'],\n  color?: ButtonColor,\n): string {\n  // first\n  if (i === 0) {\n    return clsx(\n      radius,\n      'rounded-tr-none rounded-br-none',\n      !color && 'border-r-transparent disabled:border-r-transparent',\n    );\n  }\n  // last\n  if (i === children.length - 1) {\n    return clsx(radius, 'rounded-tl-none rounded-bl-none -ml-1');\n  }\n  return clsx(\n    'rounded-none -ml-1',\n    !color && 'border-r-transparent disabled:border-r-transparent',\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {Reply} from '@app/agent/reply';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {UseFormReturn} from 'react-hook-form';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\n\ninterface Response {\n  reply: Reply;\n}\n\nexport interface CreateCannedReplyPayload {\n  name: string;\n  body: string | null;\n  attachments?: number[];\n  shared?: boolean;\n}\n\nexport function useCreateCannedReply(\n  form: UseFormReturn<CreateCannedReplyPayload>,\n) {\n  return useMutation({\n    mutationFn: (payload: CreateCannedReplyPayload) =>\n      createCannedReply(payload),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({queryKey: ['canned-replies']});\n      toast(message('Saved reply created'));\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction createCannedReply(payload: CreateCannedReplyPayload) {\n  return apiClient.post<Response>(`canned-replies`, payload).then(r => r.data);\n}\n","import {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport React, {Fragment, useRef, useState} from 'react';\nimport {Editor} from '@tiptap/react';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport {getReplyBody} from '@app/reply-editor/get-reply-body';\nimport {Form} from '@common/ui/forms/form';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@common/i18n/trans';\nimport {FormSwitch} from '@common/ui/forms/toggle/switch';\nimport {ReplyEditor} from '@app/reply-editor/reply-editor';\nimport {CreateCannedReplyPayload} from '@app/agent/agent-ticket-page/canned-replies/requests/use-create-canned-reply';\nimport {UseFormReturn} from 'react-hook-form';\nimport {CannedReply} from '@app/agent/agent-ticket-page/canned-replies/canned-reply';\n\ninterface CannedReplyFormProps {\n  onSubmit: (value: CreateCannedReplyPayload) => void;\n  form: UseFormReturn<CreateCannedReplyPayload>;\n  reply?: CannedReply;\n}\n\nexport function CannedReplyForm({onSubmit, form, reply}: CannedReplyFormProps) {\n  const {formId} = useDialogContext();\n  const editorRef = useRef<Editor | null>(null);\n  const [attachments, setAttachments] = useState<FileEntry[]>(\n    reply?.attachments || []\n  );\n  const bodyError = form.formState.errors.body?.message;\n\n  const handleSubmit = () => {\n    onSubmit({\n      ...form.getValues(),\n      body: getReplyBody(editorRef),\n      attachments: attachments.map(a => a.id),\n    });\n  };\n\n  return (\n    <Form\n      id={formId}\n      form={form}\n      onSubmit={handleSubmit}\n      onBeforeSubmit={() => form.clearErrors()}\n    >\n      <Fragment>\n        <FileUploadProvider>\n          <FormTextField\n            autoFocus\n            className=\"mb-24\"\n            label={<Trans message=\"Name\" />}\n            name=\"name\"\n          />\n          <FormSwitch\n            className=\"mb-24\"\n            name=\"shared\"\n            description={\n              <Trans message=\"Shared replies will be visible to all agents, not just you.\" />\n            }\n          >\n            <Trans message=\"Shared\" />\n          </FormSwitch>\n          <ReplyEditor\n            initialContent={reply?.body || ''}\n            minHeight=\"min-h-[300px]\"\n            isLoading={false}\n            editorRef={editorRef}\n            attachments={attachments}\n            onAttachmentsChange={attachments => setAttachments(attachments)}\n            onSubmit={handleSubmit}\n          />\n          {bodyError && (\n            <div className=\"pt-10 text-xs text-danger\">{bodyError}</div>\n          )}\n        </FileUploadProvider>\n      </Fragment>\n    </Form>\n  );\n}\n","import {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {Trans} from '@common/i18n/trans';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {Button} from '@common/ui/buttons/button';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport React from 'react';\nimport {\n  CreateCannedReplyPayload,\n  useCreateCannedReply,\n} from '@app/agent/agent-ticket-page/canned-replies/requests/use-create-canned-reply';\nimport {useForm} from 'react-hook-form';\nimport {CannedReplyForm} from '@app/agent/agent-ticket-page/canned-replies/canned-reply-form';\n\nexport function CreateCannedReplyDialog() {\n  const {close, formId} = useDialogContext();\n  const form = useForm<CreateCannedReplyPayload>({\n    defaultValues: {\n      shared: false,\n    },\n  });\n  const createCannedReply = useCreateCannedReply(form);\n\n  const handleSubmit = (value: CreateCannedReplyPayload) => {\n    createCannedReply.mutate(value, {\n      onSuccess: () => close(),\n    });\n  };\n\n  return (\n    <Dialog size=\"lg\">\n      <DialogHeader>\n        <Trans message=\"New saved reply\" />\n      </DialogHeader>\n      <DialogBody>\n        <CannedReplyForm form={form} onSubmit={handleSubmit} />\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          type=\"submit\"\n          form={formId}\n          variant=\"flat\"\n          color=\"primary\"\n          disabled={createCannedReply.isPending}\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {\n  keepPreviousData,\n  useQuery,\n  UseQueryOptions,\n} from '@tanstack/react-query';\nimport {PaginatedBackendResponse} from '../../http/backend-response/pagination-response';\nimport {apiClient} from '../../http/query-client';\n\nexport interface GetDatatableDataParams {\n  orderBy?: string;\n  orderDir?: 'asc' | 'desc';\n  filters?: string | null;\n  query?: string;\n  with?: string;\n  perPage?: number | string | null;\n  page?: number | string;\n  [key: string]: string | number | boolean | undefined | null;\n}\n\nexport const DatatableDataQueryKey = (\n  endpoint: string,\n  params?: GetDatatableDataParams | Record<string, string | number | boolean>,\n) => {\n  // split endpoint by slash, so we can clear cache from the root later,\n  // for example, 'link-group' will clear 'link-group/1/links' endpoint\n  const key: (string | GetDatatableDataParams)[] = endpoint.split('/');\n  if (params) {\n    key.push(params);\n  }\n  return key;\n};\n\nexport function useDatatableData<T = object>(\n  endpoint: string,\n  params: GetDatatableDataParams,\n  options?: Omit<\n    UseQueryOptions<\n      PaginatedBackendResponse<T>,\n      unknown,\n      PaginatedBackendResponse<T>,\n      any[]\n    >,\n    'queryKey' | 'queryFn'\n  >,\n  onLoad?: (data: PaginatedBackendResponse<T>) => void,\n) {\n  return useQuery({\n    queryKey: DatatableDataQueryKey(endpoint, params),\n    queryFn: ({signal}) => paginate<T>(endpoint, params, onLoad, signal),\n    placeholderData: keepPreviousData,\n    ...options,\n  });\n}\n\nasync function paginate<T>(\n  endpoint: string,\n  params: GetDatatableDataParams,\n  onLoad?: (data: PaginatedBackendResponse<T>) => void,\n  signal?: AbortSignal,\n): Promise<PaginatedBackendResponse<T>> {\n  if (params.query) {\n    await new Promise(resolve => setTimeout(resolve, 300));\n  }\n  const response = await apiClient\n    .get(endpoint, {params, signal: params.query ? signal : undefined})\n    .then(response => response.data);\n  onLoad?.(response);\n  return response;\n}\n","import React, {useContext} from 'react';\nimport {GetDatatableDataParams} from '../requests/paginated-resources';\nimport {UseQueryResult} from '@tanstack/react-query';\nimport {PaginatedBackendResponse} from '../../http/backend-response/pagination-response';\n\nexport interface DataTableContextValue {\n  selectedRows: (string | number)[];\n  setSelectedRows: (keys: (string | number)[]) => void;\n  endpoint: string;\n  params: GetDatatableDataParams;\n  setParams: (value: GetDatatableDataParams) => void;\n  query: UseQueryResult<PaginatedBackendResponse<unknown>, unknown>;\n}\n\nexport const DataTableContext = React.createContext<DataTableContextValue>(\n  null!\n);\n\nexport function useDataTable() {\n  return useContext(DataTableContext);\n}\n","import React, {ComponentPropsWithoutRef, ReactNode} from 'react';\nimport {BackendFilter} from './filters/backend-filter';\nimport {useTrans} from '../i18n/use-trans';\nimport {TextField} from '../ui/forms/input-field/text-field/text-field';\nimport {SearchIcon} from '../icons/material/Search';\nimport {AddFilterButton} from './filters/add-filter-button';\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\nimport {message} from '@common/i18n/message';\n\ninterface Props {\n  actions?: ReactNode;\n  filters?: BackendFilter[];\n  filtersLoading?: boolean;\n  searchPlaceholder?: MessageDescriptor;\n  searchValue?: string;\n  onSearchChange: (value: string) => void;\n}\nexport function DataTableHeader({\n  actions,\n  filters,\n  filtersLoading,\n  searchPlaceholder = message('Type to search...'),\n  searchValue = '',\n  onSearchChange,\n}: Props) {\n  const {trans} = useTrans();\n  return (\n    <HeaderLayout>\n      <TextField\n        inputTestId=\"datatable-search\"\n        className=\"flex-auto max-w-440 mr-auto\"\n        inputWrapperClassName=\"mr-24 md:mr-0\"\n        placeholder={trans(searchPlaceholder)}\n        startAdornment={<SearchIcon />}\n        value={searchValue}\n        onChange={e => {\n          onSearchChange(e.target.value);\n        }}\n      />\n      {filters && (\n        <AddFilterButton filters={filters} disabled={filtersLoading} />\n      )}\n      {actions}\n    </HeaderLayout>\n  );\n}\n\ninterface AnimatedHeaderProps extends ComponentPropsWithoutRef<'div'> {\n  children: ReactNode;\n}\nexport function HeaderLayout({children, ...domProps}: AnimatedHeaderProps) {\n  return (\n    <div\n      className=\"mb-24 flex items-center gap-8 md:gap-12 text-muted relative h-42\"\n      {...domProps}\n    >\n      {children}\n    </div>\n  );\n}\n","import {Trans} from '@common/i18n/trans';\nimport React, {ReactNode} from 'react';\nimport {HeaderLayout} from '@common/datatable/data-table-header';\n\ninterface Props {\n  actions?: ReactNode;\n  selectedItemsCount: number;\n}\nexport function SelectedStateDatatableHeader({\n  actions,\n  selectedItemsCount,\n}: Props) {\n  return (\n    <HeaderLayout data-testid=\"datatable-selected-header\">\n      <div className=\"mr-auto\">\n        <Trans\n          message=\"[one 1 item|other :count items] selected\"\n          values={{count: selectedItemsCount}}\n        />\n      </div>\n      {actions}\n    </HeaderLayout>\n  );\n}\n","import {m} from 'framer-motion';\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\nimport {Skeleton} from '@common/ui/skeleton/skeleton';\nimport React from 'react';\n\nexport function FilterListSkeleton() {\n  return (\n    <m.div\n      className=\"flex items-center gap-6 h-30\"\n      key=\"filter-list-skeleton\"\n      {...opacityAnimation}\n    >\n      <Skeleton variant=\"rect\" size=\"h-full w-144\" radius=\"rounded-md\" />\n      <Skeleton variant=\"rect\" size=\"h-full w-112\" radius=\"rounded-md\" />\n      <Skeleton variant=\"rect\" size=\"h-full w-172\" radius=\"rounded-md\" />\n    </m.div>\n  );\n}\n","import React, {\n  cloneElement,\n  ComponentProps,\n  ReactElement,\n  ReactNode,\n  useState,\n} from 'react';\nimport {TableDataItem} from '../ui/tables/types/table-data-item';\nimport {BackendFilter} from './filters/backend-filter';\nimport {MessageDescriptor} from '../i18n/message-descriptor';\nimport {ColumnConfig} from './column-config';\nimport {useTrans} from '../i18n/use-trans';\nimport {useBackendFilterUrlParams} from './filters/backend-filter-url-params';\nimport {\n  GetDatatableDataParams,\n  useDatatableData,\n} from './requests/paginated-resources';\nimport {DataTableContext} from './page/data-table-context';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {ProgressBar} from '../ui/progress/progress-bar';\nimport {Table, TableProps} from '../ui/tables/table';\nimport {DataTablePaginationFooter} from './data-table-pagination-footer';\nimport {DataTableHeader} from './data-table-header';\nimport {FilterList} from './filters/filter-list/filter-list';\nimport {SelectedStateDatatableHeader} from '@common/datatable/selected-state-datatable-header';\nimport clsx from 'clsx';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\nimport {BackendFiltersUrlKey} from '@common/datatable/filters/backend-filters-url-key';\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\nimport {FilterListSkeleton} from '@common/datatable/filters/filter-list/filter-list-skeleton';\n\nexport interface DataTableProps<T extends TableDataItem> {\n  filters?: BackendFilter[];\n  filtersLoading?: boolean;\n  columns: ColumnConfig<T>[];\n  searchPlaceholder?: MessageDescriptor;\n  queryParams?: Record<string, string | number | undefined | null>;\n  endpoint: string;\n  resourceName?: ReactNode;\n  emptyStateMessage: ReactElement<{isFiltering: boolean}>;\n  actions?: ReactNode;\n  enableSelection?: boolean;\n  selectionStyle?: TableProps<T>['selectionStyle'];\n  selectedActions?: ReactNode;\n  onRowAction?: TableProps<T>['onAction'];\n  tableDomProps?: ComponentProps<'table'>;\n  children?: ReactNode;\n  collapseTableOnMobile?: boolean;\n  cellHeight?: string;\n}\nexport function DataTable<T extends TableDataItem>({\n  filters,\n  filtersLoading,\n  columns,\n  searchPlaceholder,\n  queryParams,\n  endpoint,\n  actions,\n  selectedActions,\n  emptyStateMessage,\n  tableDomProps,\n  onRowAction,\n  enableSelection = true,\n  selectionStyle = 'checkbox',\n  children,\n  cellHeight,\n  collapseTableOnMobile = true,\n}: DataTableProps<T>) {\n  const isMobile = useIsMobileMediaQuery();\n  const {trans} = useTrans();\n  const {encodedFilters} = useBackendFilterUrlParams(filters);\n  const [params, setParams] = useState<GetDatatableDataParams>({perPage: 15});\n  const [selectedRows, setSelectedRows] = useState<(string | number)[]>([]);\n  const query = useDatatableData<T>(\n    endpoint,\n    {\n      ...params,\n      ...queryParams,\n      [BackendFiltersUrlKey]: encodedFilters,\n    },\n    undefined,\n    () => setSelectedRows([]),\n  );\n\n  const isFiltering = !!(params.query || params.filters || encodedFilters);\n  const pagination = query.data?.pagination;\n\n  return (\n    <DataTableContext.Provider\n      value={{\n        selectedRows,\n        setSelectedRows,\n        endpoint,\n        params,\n        setParams,\n        query,\n      }}\n    >\n      {children}\n      <AnimatePresence initial={false} mode=\"wait\">\n        {selectedRows.length ? (\n          <SelectedStateDatatableHeader\n            selectedItemsCount={selectedRows.length}\n            actions={selectedActions}\n            key=\"selected\"\n          />\n        ) : (\n          <DataTableHeader\n            searchPlaceholder={searchPlaceholder}\n            searchValue={params.query}\n            onSearchChange={query => setParams({...params, query})}\n            actions={actions}\n            filters={filters}\n            filtersLoading={filtersLoading}\n            key=\"default\"\n          />\n        )}\n      </AnimatePresence>\n\n      {filters && (\n        <div className=\"mb-14\">\n          <AnimatePresence initial={false} mode=\"wait\">\n            {filtersLoading && encodedFilters ? (\n              <FilterListSkeleton />\n            ) : (\n              <m.div key=\"filter-list\" {...opacityAnimation}>\n                <FilterList filters={filters} />\n              </m.div>\n            )}\n          </AnimatePresence>\n        </div>\n      )}\n\n      <div\n        className={clsx(\n          'relative rounded-panel',\n          (!isMobile || !collapseTableOnMobile) && 'border',\n        )}\n      >\n        {query.isFetching && (\n          <ProgressBar\n            isIndeterminate\n            className=\"absolute left-0 top-0 z-10 w-full\"\n            aria-label={trans({message: 'Loading'})}\n            size=\"xs\"\n          />\n        )}\n\n        <div className=\"relative overflow-x-auto md:overflow-hidden\">\n          <Table\n            {...tableDomProps}\n            columns={columns}\n            data={pagination?.data || []}\n            sortDescriptor={params}\n            onSortChange={descriptor => {\n              setParams({...params, ...descriptor});\n            }}\n            selectedRows={selectedRows}\n            enableSelection={enableSelection}\n            selectionStyle={selectionStyle}\n            onSelectionChange={setSelectedRows}\n            onAction={onRowAction}\n            collapseOnMobile={collapseTableOnMobile}\n            cellHeight={cellHeight}\n          />\n        </div>\n\n        {(query.isFetched || query.isPlaceholderData) &&\n        !pagination?.data.length ? (\n          <div className=\"pt-50\">\n            {cloneElement(emptyStateMessage, {\n              isFiltering,\n            })}\n          </div>\n        ) : undefined}\n\n        <DataTablePaginationFooter\n          query={query}\n          onPageChange={page => setParams({...params, page})}\n          onPerPageChange={perPage => setParams({...params, perPage})}\n        />\n      </div>\n    </DataTableContext.Provider>\n  );\n}\n","import React, {ReactElement, ReactNode, useId} from 'react';\nimport {TableDataItem} from '../../ui/tables/types/table-data-item';\nimport {DataTable, DataTableProps} from '../data-table';\nimport {TableProps} from '../../ui/tables/table';\nimport {StaticPageTitle} from '../../seo/static-page-title';\nimport {MessageDescriptor} from '../../i18n/message-descriptor';\nimport clsx from 'clsx';\n\ninterface Props<T extends TableDataItem> extends DataTableProps<T> {\n  title?: ReactElement<MessageDescriptor>;\n  headerContent?: ReactNode;\n  headerItemsAlign?: string;\n  enableSelection?: boolean;\n  onRowAction?: TableProps<T>['onAction'];\n  className?: string;\n}\nexport function DataTablePage<T extends TableDataItem>({\n  title,\n  headerContent,\n  headerItemsAlign = 'items-end',\n  className,\n  ...dataTableProps\n}: Props<T>) {\n  const titleId = useId();\n\n  return (\n    <div className={clsx('p-12 md:p-24', className)}>\n      {title && (\n        <div\n          className={clsx(\n            'mb-16',\n            headerContent && `flex ${headerItemsAlign} gap-4`\n          )}\n        >\n          <StaticPageTitle>{title}</StaticPageTitle>\n          <h1 className=\"text-3xl font-light first:capitalize\" id={titleId}>\n            {title}\n          </h1>\n          {headerContent}\n        </div>\n      )}\n\n      <DataTable\n        {...dataTableProps}\n        tableDomProps={{\n          'aria-labelledby': title ? titleId : undefined,\n        }}\n      />\n    </div>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const AddIcon = createSvgIcon(\n  <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\" />\n, 'AddOutlined');\n","import {AddIcon} from '../icons/material/Add';\nimport {Button} from '../ui/buttons/button';\nimport React, {ReactNode} from 'react';\nimport {useIsMobileMediaQuery} from '../utils/hooks/is-mobile-media-query';\nimport {IconButton} from '../ui/buttons/icon-button';\nimport {To} from 'react-router-dom';\nimport {ButtonBaseProps} from '../ui/buttons/button-base';\n\nexport interface DataTableAddItemButtonProps {\n  children: ReactNode;\n  to?: To;\n  elementType?: ButtonBaseProps['elementType'];\n  onClick?: ButtonBaseProps['onClick'];\n}\nexport const DataTableAddItemButton = React.forwardRef<\n  HTMLButtonElement,\n  DataTableAddItemButtonProps\n>(({children, to, elementType, onClick}, ref) => {\n  const isMobile = useIsMobileMediaQuery();\n\n  if (isMobile) {\n    return (\n      <IconButton\n        ref={ref}\n        variant=\"flat\"\n        color=\"primary\"\n        className=\"flex-shrink-0\"\n        size=\"sm\"\n        to={to}\n        elementType={elementType}\n        onClick={onClick}\n      >\n        <AddIcon />\n      </IconButton>\n    );\n  }\n\n  return (\n    <Button\n      ref={ref}\n      startIcon={<AddIcon />}\n      variant=\"flat\"\n      color=\"primary\"\n      size=\"sm\"\n      to={to}\n      elementType={elementType}\n      onClick={onClick}\n    >\n      {children}\n    </Button>\n  );\n});\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {toast} from '../../ui/toast/toast';\nimport {DatatableDataQueryKey} from './paginated-resources';\nimport {useDataTable} from '../page/data-table-context';\nimport {message} from '../../i18n/message';\nimport {showHttpErrorToast} from '../../utils/http/show-http-error-toast';\nimport {Key} from 'react';\n\ninterface Response extends BackendResponse {\n  //\n}\n\nexport function useDeleteSelectedRows() {\n  const {endpoint, selectedRows, setSelectedRows} = useDataTable();\n  return useMutation({\n    mutationFn: () => deleteSelectedRows(endpoint, selectedRows),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey(endpoint),\n      });\n      toast(\n        message('Deleted [one 1 record|other :count records]', {\n          values: {count: selectedRows.length},\n        }),\n      );\n      setSelectedRows([]);\n    },\n    onError: err =>\n      showHttpErrorToast(err, message('Could not delete records')),\n  });\n}\n\nfunction deleteSelectedRows(endpoint: string, ids: Key[]): Promise<Response> {\n  return apiClient.delete(`${endpoint}/${ids.join(',')}`).then(r => r.data);\n}\n","import {Button} from '../../ui/buttons/button';\nimport {Trans} from '../../i18n/trans';\nimport {ConfirmationDialog} from '../../ui/overlays/dialog/confirmation-dialog';\nimport {DialogTrigger} from '../../ui/overlays/dialog/dialog-trigger';\nimport React from 'react';\nimport {useDeleteSelectedRows} from '../requests/delete-selected-rows';\nimport {useDataTable} from './data-table-context';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\n\nexport function DeleteSelectedItemsAction() {\n  return (\n    <DialogTrigger type=\"modal\">\n      <Button variant=\"flat\" color=\"danger\" className=\"ml-auto\">\n        <Trans message=\"Delete\" />\n      </Button>\n      <DeleteItemsDialog />\n    </DialogTrigger>\n  );\n}\n\nfunction DeleteItemsDialog() {\n  const deleteSelectedRows = useDeleteSelectedRows();\n  const {selectedRows} = useDataTable();\n  const {close} = useDialogContext();\n  return (\n    <ConfirmationDialog\n      isLoading={deleteSelectedRows.isPending}\n      title={\n        <Trans\n          message=\"Delete [one 1 item|other :count items]?\"\n          values={{count: selectedRows.length}}\n        />\n      }\n      body={\n        <Trans message=\"This will permanently remove the items and cannot be undone.\" />\n      }\n      confirm={<Trans message=\"Delete\" />}\n      isDanger\n      onConfirm={() => {\n        deleteSelectedRows.mutate(undefined, {onSuccess: () => close()});\n      }}\n    />\n  );\n}\n","export default \"__VITE_ASSET__421a551f__\"","import {\n  BackendFilter,\n  FilterControlType,\n  FilterOperator,\n} from '@common/datatable/filters/backend-filter';\nimport {message} from '@common/i18n/message';\nimport {\n  createdAtFilter,\n  updatedAtFilter,\n} from '@common/datatable/filters/timestamp-filters';\nimport {USER_MODEL} from '@common/auth/user';\n\nexport const CannedRepliesDatatableFilters: BackendFilter[] = [\n  {\n    key: 'shared',\n    label: message('Shared'),\n    description: message('Whether reply is marked as shared'),\n    defaultOperator: FilterOperator.eq,\n    control: {\n      type: FilterControlType.BooleanToggle,\n      defaultValue: true,\n    },\n  },\n  {\n    key: 'user_id',\n    label: message('Owner'),\n    description: message('User this reply was created by'),\n    defaultOperator: FilterOperator.eq,\n    control: {\n      type: FilterControlType.SelectModel,\n      model: USER_MODEL,\n    },\n  },\n  createdAtFilter({\n    description: message('Date reply was created'),\n  }),\n  updatedAtFilter({\n    description: message('Date reply was last updated'),\n  }),\n];\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\n\ninterface Payload {\n  ids: number[];\n}\n\nexport function useDeleteCannedReplies() {\n  return useMutation({\n    mutationFn: (payload: Payload) => deleteReplies(payload),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({queryKey: ['canned-replies']});\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction deleteReplies(payload: Payload) {\n  return apiClient\n    .delete(`canned-replies/${payload.ids.join(',')}`)\n    .then(r => r.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {Reply} from '@app/agent/reply';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {UseFormReturn} from 'react-hook-form';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {CreateCannedReplyPayload} from '@app/agent/agent-ticket-page/canned-replies/requests/use-create-canned-reply';\n\ninterface Response {\n  reply: Reply;\n}\n\nexport function useUpdateCannedReply(\n  form: UseFormReturn<CreateCannedReplyPayload>,\n  id: number,\n) {\n  return useMutation({\n    mutationFn: (payload: CreateCannedReplyPayload) =>\n      updateCannedReply(id, payload),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({queryKey: ['canned-replies']});\n      toast(message('Reply updated'));\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction updateCannedReply(id: number, payload: CreateCannedReplyPayload) {\n  return apiClient\n    .put<Response>(`canned-replies/${id}`, payload)\n    .then(r => r.data);\n}\n","import {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {Trans} from '@common/i18n/trans';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {Button} from '@common/ui/buttons/button';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport React from 'react';\nimport {CreateCannedReplyPayload} from '@app/agent/agent-ticket-page/canned-replies/requests/use-create-canned-reply';\nimport {useForm} from 'react-hook-form';\nimport {CannedReply} from '@app/agent/agent-ticket-page/canned-replies/canned-reply';\nimport {useUpdateCannedReply} from '@app/agent/agent-ticket-page/canned-replies/requests/use-update-canned-reply';\nimport {CannedReplyForm} from '@app/agent/agent-ticket-page/canned-replies/canned-reply-form';\n\ninterface Props {\n  reply: CannedReply;\n}\nexport function UpdateCannedReplyDialog({reply}: Props) {\n  const {close, formId} = useDialogContext();\n  const form = useForm<CreateCannedReplyPayload>({\n    defaultValues: {\n      name: reply.name,\n      body: reply.body,\n      shared: reply.shared,\n      attachments: reply.attachments?.map(a => a.id),\n    },\n  });\n  const updateCannedReply = useUpdateCannedReply(form, reply.id);\n\n  const handleSubmit = (value: CreateCannedReplyPayload) => {\n    updateCannedReply.mutate(value, {\n      onSuccess: () => close(),\n    });\n  };\n\n  return (\n    <Dialog size=\"lg\">\n      <DialogHeader>\n        <Trans message=\"Update saved reply\" />\n      </DialogHeader>\n      <DialogBody>\n        <CannedReplyForm form={form} onSubmit={handleSubmit} reply={reply} />\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          type=\"submit\"\n          form={formId}\n          variant=\"flat\"\n          color=\"primary\"\n          disabled={updateCannedReply.isPending}\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","export function truncateString(str: string, length: number, end = '...') {\n  if (length == null || length >= str.length) {\n    return str;\n  }\n  return str.slice(0, Math.max(0, length - end.length)) + end;\n}\n","export function stripTags(str: string) {\n  return str.replace(/<\\/?[^>]+(>|$)/g, '');\n}\n","import {ColumnConfig} from '@common/datatable/column-config';\nimport {Trans} from '@common/i18n/trans';\nimport {FormattedDate} from '@common/i18n/formatted-date';\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {EditIcon} from '@common/icons/material/Edit';\nimport React, {useContext} from 'react';\nimport {TableContext} from '@common/ui/tables/table-context';\nimport clsx from 'clsx';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {DeleteIcon} from '@common/icons/material/Delete';\nimport {ConfirmationDialog} from '@common/ui/overlays/dialog/confirmation-dialog';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {CannedReply} from '@app/agent/agent-ticket-page/canned-replies/canned-reply';\nimport {useDeleteCannedReplies} from '@app/agent/agent-ticket-page/canned-replies/requests/use-delete-canned-replies';\nimport {CheckIcon} from '@common/icons/material/Check';\nimport {CloseIcon} from '@common/icons/material/Close';\nimport {NameWithAvatar} from '@common/datatable/column-templates/name-with-avatar';\nimport {UpdateCannedReplyDialog} from '@app/agent/agent-ticket-page/canned-replies/update-canned-reply-dialog';\nimport {truncateString} from '@common/utils/string/truncate-string';\nimport {stripTags} from '@common/utils/string/strip-tags';\n\nexport const CannedRepliesDatatableColumns: ColumnConfig<CannedReply>[] = [\n  {\n    key: 'name',\n    width: 'flex-3 min-w-200',\n    visibleInMode: 'all',\n    header: () => <Trans message=\"Saved reply\" />,\n    body: reply => <CannedReplyColumn reply={reply} />,\n  },\n  {\n    key: 'user_id',\n    allowsSorting: true,\n    width: 'min-w-200',\n    visibleInMode: 'all',\n    header: () => <Trans message=\"Owner\" />,\n    body: reply =>\n      reply.user ? (\n        <NameWithAvatar\n          image={reply.user.avatar}\n          label={reply.user.display_name}\n          description={reply.user.email}\n        />\n      ) : null,\n  },\n  {\n    key: 'shared',\n    allowsSorting: true,\n    width: 'w-60 flex-shrink-0',\n    header: () => <Trans message=\"Shared\" />,\n    body: reply =>\n      reply.shared ? (\n        <CheckIcon size=\"md\" className=\"text-positive\" />\n      ) : (\n        <CloseIcon size=\"md\" className=\"text-danger\" />\n      ),\n  },\n  {\n    key: 'updatedAt',\n    allowsSorting: true,\n    width: 'w-96',\n    header: () => <Trans message=\"Last updated\" />,\n    body: reply => (\n      <time>\n        <FormattedDate date={reply.updated_at} />\n      </time>\n    ),\n  },\n  {\n    key: 'actions',\n    header: () => <Trans message=\"Actions\" />,\n    width: 'w-84 flex-shrink-0',\n    hideHeader: true,\n    align: 'end',\n    visibleInMode: 'all',\n    body: reply => (\n      <div className=\"text-muted\">\n        <DialogTrigger type=\"modal\">\n          <Tooltip label={<Trans message=\"Edit reply\" />}>\n            <IconButton size=\"md\">\n              <EditIcon />\n            </IconButton>\n          </Tooltip>\n          <UpdateCannedReplyDialog reply={reply} />\n        </DialogTrigger>\n        <DialogTrigger type=\"modal\">\n          <Tooltip label={<Trans message=\"Delete reply\" />}>\n            <IconButton>\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n          <DeleteCannedReplyDialog reply={reply} />\n        </DialogTrigger>\n      </div>\n    ),\n  },\n];\n\ninterface CannedReplyColumnProps {\n  reply: CannedReply;\n}\nfunction CannedReplyColumn({reply}: CannedReplyColumnProps) {\n  const {isCollapsedMode} = useContext(TableContext);\n  return (\n    <div className=\"min-w-0\">\n      <div\n        className={clsx(\n          isCollapsedMode\n            ? 'whitespace-normal'\n            : 'overflow-hidden overflow-ellipsis whitespace-nowrap font-medium',\n        )}\n      >\n        {reply.name}\n      </div>\n      {!isCollapsedMode && (\n        <p className=\"mt-4 max-w-680 whitespace-normal text-xs text-muted\">\n          {truncateString(stripTags(reply.body), 230)}\n        </p>\n      )}\n    </div>\n  );\n}\n\ninterface DeleteCannedReplyDialogProps {\n  reply: CannedReply;\n}\nexport function DeleteCannedReplyDialog({reply}: DeleteCannedReplyDialogProps) {\n  const deleteReplies = useDeleteCannedReplies();\n  const {close} = useDialogContext();\n  return (\n    <ConfirmationDialog\n      isDanger\n      isLoading={deleteReplies.isPending}\n      title={<Trans message=\"Delete saved reply\" />}\n      body={\n        <Trans message=\"Are you sure you want to delete this saved reply?\" />\n      }\n      confirm={<Trans message=\"Delete\" />}\n      onConfirm={() => {\n        deleteReplies.mutate({ids: [reply.id]}, {onSuccess: () => close()});\n      }}\n    />\n  );\n}\n","import {Trans} from '@common/i18n/trans';\nimport {DataTablePage} from '@common/datatable/page/data-table-page';\nimport {DataTableAddItemButton} from '@common/datatable/data-table-add-item-button';\nimport {DataTableEmptyStateMessage} from '@common/datatable/page/data-table-emty-state-message';\nimport {DeleteSelectedItemsAction} from '@common/datatable/page/delete-selected-items-action';\nimport onlineArticlesImg from '@app/admin/canned-replies/online-articles.svg';\nimport {CannedRepliesDatatableFilters} from '@app/admin/canned-replies/canned-replies-datatable-filters';\nimport {CannedRepliesDatatableColumns} from '@app/admin/canned-replies/canned-replies-datatable-columns';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {CreateCannedReplyDialog} from '@app/agent/agent-ticket-page/canned-replies/create-canned-reply-dialog';\nimport {useMemo} from 'react';\n\ninterface Props {\n  userId?: number;\n}\nexport function CannedRepliesDatatablePage({userId}: Props) {\n  const {columns, filters} = useMemo(() => {\n    return {\n      columns: CannedRepliesDatatableColumns.filter(\n        c => c.key !== 'user_id' || !userId\n      ),\n      filters: CannedRepliesDatatableFilters.filter(\n        f => f.key !== 'user_id' || !userId\n      ),\n    };\n  }, [userId]);\n\n  return (\n    <DataTablePage\n      endpoint=\"canned-replies\"\n      title={<Trans message=\"Saved replies\" />}\n      columns={columns}\n      filters={filters}\n      queryParams={{\n        shared: 'true',\n        with: !userId ? 'user' : undefined,\n        user_id: userId,\n      }}\n      actions={<Actions />}\n      selectedActions={<DeleteSelectedItemsAction />}\n      enableSelection={false}\n      cellHeight=\"h-76\"\n      emptyStateMessage={\n        <DataTableEmptyStateMessage\n          image={onlineArticlesImg}\n          title={<Trans message=\"No saved replies have been created yet\" />}\n          filteringTitle={<Trans message=\"No matching replies\" />}\n        />\n      }\n    />\n  );\n}\n\nfunction Actions() {\n  return (\n    <DialogTrigger type=\"modal\">\n      <DataTableAddItemButton>\n        <Trans message=\"Add reply\" />\n      </DataTableAddItemButton>\n      <CreateCannedReplyDialog />\n    </DialogTrigger>\n  );\n}\n","import {createSvgIcon} from '@common/icons/create-svg-icon';\n\nexport const InfoDialogTriggerIcon = createSvgIcon(\n  <path d=\"M9 8a1 1 0 0 0-1-1H5.5a1 1 0 1 0 0 2H7v4a1 1 0 0 0 2 0zM4 0h8a4 4 0 0 1 4 4v8a4 4 0 0 1-4 4H4a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4zm4 5.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3z\" />,\n  'InfoDialogTrigger'\n);\n","import {IconButton} from '@common/ui/buttons/icon-button';\nimport {InfoDialogTriggerIcon} from '@common/ui/overlays/dialog/info-dialog-trigger/info-dialog-trigger-icon';\nimport {Dialog, DialogSize} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport React, {ReactNode} from 'react';\nimport clsx from 'clsx';\n\ninterface InfoDialogTriggerProps {\n  title?: ReactNode;\n  body: ReactNode;\n  dialogSize?: DialogSize;\n  className?: string;\n}\nexport function InfoDialogTrigger({\n  title,\n  body,\n  dialogSize = 'sm',\n  className,\n}: InfoDialogTriggerProps) {\n  return (\n    <DialogTrigger type=\"popover\" triggerOnHover>\n      <IconButton\n        className={clsx('text-muted opacity-70', className)}\n        size=\"xs\"\n      >\n        <InfoDialogTriggerIcon viewBox=\"0 0 16 16\" />\n      </IconButton>\n      <Dialog size={dialogSize}>\n        {title && (\n          <DialogHeader padding=\"px-18 pt-12\" size=\"md\" hideDismissButton>\n            {title}\n          </DialogHeader>\n        )}\n        <DialogBody>{body}</DialogBody>\n      </Dialog>\n    </DialogTrigger>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {User} from '@common/auth/user';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@common/ui/toast/toast';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {message} from '@common/i18n/message';\n\ninterface Response extends BackendResponse {\n  user: User;\n}\n\nexport interface BanUserPayload {\n  ban_until?: string;\n  permanent?: boolean;\n  comment?: string;\n}\n\nexport function useBanUser(\n  form: UseFormReturn<BanUserPayload>,\n  userId: number,\n) {\n  return useMutation({\n    mutationFn: (payload: BanUserPayload) => banUser(userId, payload),\n    onSuccess: async () => {\n      toast(message('User suspended'));\n      await queryClient.invalidateQueries({queryKey: ['users']});\n    },\n    onError: r => onFormQueryError(r, form),\n  });\n}\n\nfunction banUser(userId: number, payload: BanUserPayload): Promise<Response> {\n  return apiClient.post(`users/${userId}/ban`, payload).then(r => r.data);\n}\n","import {useControlledState} from '@react-stately/utils';\nimport {HTMLAttributes, useCallback, useState} from 'react';\nimport {\n  CalendarDate,\n  DateValue,\n  isSameDay,\n  toCalendarDate,\n  toZoned,\n  ZonedDateTime,\n} from '@internationalized/date';\nimport {useBaseDatePickerState} from '../use-base-date-picker-state';\nimport {useCurrentDateTime} from '@common/i18n/use-current-date-time';\n\nexport type Granularity = 'day' | 'minute';\n\nexport type DatePickerState = BaseDatePickerState;\n\nexport interface BaseDatePickerState<T = ZonedDateTime, P = boolean> {\n  timezone: string;\n  granularity: Granularity;\n  selectedValue: T;\n  setSelectedValue: (value: T) => void;\n  calendarIsOpen: boolean;\n  setCalendarIsOpen: (isOpen: boolean) => void;\n  calendarDates: CalendarDate[];\n  setCalendarDates: (dates: CalendarDate[]) => void;\n  dayIsActive: (day: CalendarDate) => boolean;\n  dayIsHighlighted: (day: CalendarDate) => boolean;\n  dayIsRangeStart: (day: CalendarDate) => boolean;\n  dayIsRangeEnd: (day: CalendarDate) => boolean;\n  isPlaceholder: P;\n  setIsPlaceholder: (value: P) => void;\n  clear: () => void;\n  min?: ZonedDateTime;\n  max?: ZonedDateTime;\n  closeDialogOnSelection: boolean;\n  getCellProps: (\n    date: CalendarDate,\n    isSameMonth: boolean,\n  ) => HTMLAttributes<HTMLElement>;\n}\n\nexport interface DatePickerValueProps<V, CV = V> {\n  value?: V | null | '';\n  defaultValue?: V | null;\n  onChange?: (value: CV | null) => void;\n  min?: DateValue;\n  max?: DateValue;\n  granularity?: Granularity;\n  closeDialogOnSelection?: boolean;\n}\nexport function useDatePickerState(\n  props: DatePickerValueProps<ZonedDateTime>,\n): BaseDatePickerState {\n  const now = useCurrentDateTime();\n  const [isPlaceholder, setIsPlaceholder] = useState(\n    !props.value && !props.defaultValue,\n  );\n\n  // if user clears the date, we will want to still keep an\n  // instance internally, but return null via \"onChange\" callback\n  const setStateValue = props.onChange;\n  const [internalValue, setInternalValue] = useControlledState(\n    props.value || now,\n    props.defaultValue || now,\n    value => {\n      setIsPlaceholder(false);\n      setStateValue?.(value);\n    },\n  );\n\n  const {\n    min,\n    max,\n    granularity,\n    timezone,\n    calendarIsOpen,\n    setCalendarIsOpen,\n    closeDialogOnSelection,\n  } = useBaseDatePickerState(internalValue, props);\n\n  const clear = useCallback(() => {\n    setIsPlaceholder(true);\n    setInternalValue(now);\n    setStateValue?.(null);\n    setCalendarIsOpen(false);\n  }, [now, setInternalValue, setStateValue, setCalendarIsOpen]);\n\n  const [calendarDates, setCalendarDates] = useState<CalendarDate[]>(() => {\n    return [toCalendarDate(internalValue)];\n  });\n\n  const setSelectedValue = useCallback(\n    (newValue: DateValue) => {\n      if (min && newValue.compare(min) < 0) {\n        newValue = min;\n      } else if (max && newValue.compare(max) > 0) {\n        newValue = max;\n      }\n\n      // preserve time\n      const value = internalValue\n        ? internalValue.set(newValue)\n        : toZoned(newValue, timezone);\n      setInternalValue(value);\n      setCalendarDates([toCalendarDate(value)]);\n      setIsPlaceholder(false);\n    },\n    [setInternalValue, min, max, internalValue, timezone],\n  );\n\n  const dayIsActive = useCallback(\n    (day: DateValue) => !isPlaceholder && isSameDay(internalValue, day),\n    [internalValue, isPlaceholder],\n  );\n\n  const getCellProps = useCallback(\n    (date: DateValue): HTMLAttributes<HTMLElement> => {\n      return {\n        onClick: () => {\n          setSelectedValue?.(date);\n          if (closeDialogOnSelection) {\n            setCalendarIsOpen?.(false);\n          }\n        },\n      };\n    },\n    [setSelectedValue, setCalendarIsOpen, closeDialogOnSelection],\n  );\n\n  return {\n    selectedValue: internalValue,\n    setSelectedValue: setInternalValue,\n    calendarIsOpen,\n    setCalendarIsOpen,\n    dayIsActive,\n    dayIsHighlighted: () => false,\n    dayIsRangeStart: () => false,\n    dayIsRangeEnd: () => false,\n    getCellProps,\n    calendarDates,\n    setCalendarDates,\n    isPlaceholder,\n    clear,\n    setIsPlaceholder,\n    min,\n    max,\n    granularity,\n    timezone,\n    closeDialogOnSelection,\n  };\n}\n","import React, {\n  ComponentPropsWithoutRef,\n  Fragment,\n  MouseEvent,\n  useRef,\n} from 'react';\nimport {parseAbsoluteToLocal, ZonedDateTime} from '@internationalized/date';\nimport {useController} from 'react-hook-form';\nimport {mergeProps} from '@react-aria/utils';\nimport {\n  DatePickerValueProps,\n  useDatePickerState,\n} from './use-date-picker-state';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {DateRangeIcon} from '@common/icons/material/DateRange';\nimport {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {Calendar} from '../calendar/calendar';\nimport {\n  DatePickerField,\n  DatePickerFieldProps,\n} from '../date-range-picker/date-picker-field';\nimport {DateSegmentList} from '../segments/date-segment-list';\nimport {useDateFormatter} from '@common/i18n/use-date-formatter';\nimport {useTrans} from '@common/i18n/use-trans';\nimport clsx from 'clsx';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {Button} from '@common/ui/buttons/button';\nimport {Trans} from '@common/i18n/trans';\nimport {useCurrentDateTime} from '@common/i18n/use-current-date-time';\n\nexport interface DatePickerProps\n  extends Omit<DatePickerFieldProps, 'children'>,\n    DatePickerValueProps<ZonedDateTime> {}\nexport function DatePicker({showCalendarFooter, ...props}: DatePickerProps) {\n  const state = useDatePickerState(props);\n  const inputRef = useRef<HTMLDivElement>(null);\n  const now = useCurrentDateTime();\n\n  const footer = showCalendarFooter && (\n    <DialogFooter\n      padding=\"px-14 pb-14\"\n      startAction={\n        <Button\n          disabled={state.isPlaceholder}\n          variant=\"text\"\n          color=\"primary\"\n          onClick={() => {\n            state.clear();\n          }}\n        >\n          <Trans message=\"Clear\" />\n        </Button>\n      }\n    >\n      <Button\n        variant=\"text\"\n        color=\"primary\"\n        onClick={() => {\n          state.setSelectedValue(now);\n          state.setCalendarIsOpen(false);\n        }}\n      >\n        <Trans message=\"Today\" />\n      </Button>\n    </DialogFooter>\n  );\n\n  const dialog = (\n    <DialogTrigger\n      offset={8}\n      placement=\"bottom-start\"\n      isOpen={state.calendarIsOpen}\n      onOpenChange={state.setCalendarIsOpen}\n      type=\"popover\"\n      triggerRef={inputRef}\n      returnFocusToTrigger={false}\n      moveFocusToDialog={false}\n    >\n      <Dialog size=\"auto\">\n        <DialogBody\n          className=\"flex items-start gap-40\"\n          padding={showCalendarFooter ? 'px-24 pt-20 pb-10' : null}\n        >\n          <Calendar state={state} visibleMonths={1} />\n        </DialogBody>\n        {footer}\n      </Dialog>\n    </DialogTrigger>\n  );\n\n  const openOnClick: ComponentPropsWithoutRef<'div'> = {\n    onClick: e => {\n      e.stopPropagation();\n      e.preventDefault();\n      if (!isHourSegment(e)) {\n        state.setCalendarIsOpen(true);\n      } else {\n        state.setCalendarIsOpen(false);\n      }\n    },\n  };\n\n  return (\n    <Fragment>\n      <DatePickerField\n        ref={inputRef}\n        wrapperProps={openOnClick}\n        endAdornment={\n          <DateRangeIcon className={clsx(props.disabled && 'text-disabled')} />\n        }\n        {...props}\n      >\n        <DateSegmentList\n          segmentProps={openOnClick}\n          state={state}\n          value={state.selectedValue}\n          onChange={state.setSelectedValue}\n          isPlaceholder={state.isPlaceholder}\n        />\n      </DatePickerField>\n      {dialog}\n    </Fragment>\n  );\n}\n\ninterface FormDatePickerProps extends DatePickerProps {\n  name: string;\n}\nexport function FormDatePicker(props: FormDatePickerProps) {\n  const {min, max} = props;\n  const {trans} = useTrans();\n  const {format} = useDateFormatter();\n  const {\n    field: {onChange, onBlur, value = null, ref},\n    fieldState: {invalid, error},\n  } = useController({\n    name: props.name,\n    rules: {\n      validate: v => {\n        if (!v) return;\n        const date = parseAbsoluteToLocal(v);\n        if (min && date.compare(min) < 0) {\n          return trans({\n            message: 'Enter a date after :date',\n            values: {date: format(v)},\n          });\n        }\n        if (max && date.compare(max) > 0) {\n          return trans({\n            message: 'Enter a date before :date',\n            values: {date: format(v)},\n          });\n        }\n      },\n    },\n  });\n\n  const parsedValue: null | ZonedDateTime = value\n    ? parseAbsoluteToLocal(value)\n    : null;\n\n  const formProps: Partial<DatePickerProps> = {\n    onChange: e => {\n      onChange(e ? e.toAbsoluteString() : e);\n    },\n    onBlur,\n    value: parsedValue,\n    invalid,\n    errorMessage: error?.message,\n    inputRef: ref,\n  };\n\n  return <DatePicker {...mergeProps(formProps, props)} />;\n}\n\nfunction isHourSegment(e: MouseEvent<HTMLDivElement>): boolean {\n  return ['hour', 'minute', 'dayPeriod'].includes(\n    (e.currentTarget as HTMLElement).ariaLabel || ''\n  );\n}\n","import {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {Trans} from '@common/i18n/trans';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {Button} from '@common/ui/buttons/button';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {Form} from '@common/ui/forms/form';\nimport {useForm} from 'react-hook-form';\nimport {\n  BanUserPayload,\n  useBanUser,\n} from '@common/admin/users/requests/use-ban-user';\nimport {FormDatePicker} from '@common/ui/forms/input-field/date/date-picker/date-picker';\nimport {User} from '@common/auth/user';\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {message} from '@common/i18n/message';\nimport {FormSwitch} from '@common/ui/forms/toggle/switch';\n\ninterface Props {\n  user: User;\n}\nexport function BanUserDialog({user}: Props) {\n  const {trans} = useTrans();\n  const {close, formId} = useDialogContext();\n  const form = useForm<BanUserPayload>({\n    defaultValues: {\n      permanent: true,\n    },\n  });\n  const isPermanent = form.watch('permanent');\n  const banUser = useBanUser(form, user.id);\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Suspend “:name“\" values={{name: user.display_name}} />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          id={formId}\n          form={form}\n          onSubmit={values =>\n            banUser.mutate(values, {onSuccess: () => close()})\n          }\n        >\n          <FormDatePicker\n            name=\"ban_until\"\n            label={<Trans message=\"Suspend until\" />}\n            disabled={isPermanent}\n          />\n          <FormSwitch name=\"permanent\" className=\"mt-12\">\n            <Trans message=\"Permanent\" />\n          </FormSwitch>\n          <FormTextField\n            className=\"mt-24\"\n            name=\"comment\"\n            inputElementType=\"textarea\"\n            maxLength={250}\n            label={<Trans message=\"Reason\" />}\n            placeholder={trans(message('Optional'))}\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          form={formId}\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n          disabled={banUser.isPending}\n        >\n          <Trans message=\"Suspend\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {ColumnConfig} from '@common/datatable/column-config';\nimport {Trans} from '@common/i18n/trans';\nimport {FormattedRelativeTime} from '@common/i18n/formatted-relative-time';\nimport React, {ReactNode} from 'react';\nimport {CheckIcon} from '@common/icons/material/Check';\nimport {NameWithAvatar} from '@common/datatable/column-templates/name-with-avatar';\nimport {CloseIcon} from '@common/icons/material/Close';\nimport {CategoryLink} from '@app/help-center/categories/category-link';\nimport {Link} from 'react-router-dom';\nimport {LinkStyle} from '@common/ui/buttons/external-link';\nimport {InfoDialogTrigger} from '@common/ui/overlays/dialog/info-dialog-trigger/info-dialog-trigger';\nimport {SearchTermReport} from '@app/admin/reports/search-report/use-search-report';\n\ninterface Options {\n  skipCtr?: boolean;\n  description?: ReactNode;\n}\n\nexport function getSearchReportTableColumns({\n  skipCtr,\n  description,\n}: Options): ColumnConfig<SearchTermReport>[] {\n  const cols: (ColumnConfig<SearchTermReport> | null)[] = [\n    {\n      key: 'normalized_term',\n      header: () => (\n        <div className=\"flex items-center gap-4\">\n          <div>\n            <Trans message=\"Term\" />\n          </div>\n          {!!description && <InfoDialogTrigger body={description} />}\n        </div>\n      ),\n      visibleInMode: 'all',\n      body: item => (\n        <Link\n          to={`/hc/search/${item.term}`}\n          className={LinkStyle}\n          target=\"_blank\"\n        >\n          {item.term}\n        </Link>\n      ),\n    },\n    {\n      key: 'count',\n      header: () => <Trans message=\"Count\" />,\n      width: 'w-144',\n      body: item => <span>{item.count || 1}</span>,\n    },\n    skipCtr\n      ? null\n      : {\n          key: 'ctr',\n          header: () => <Trans message=\"CTR\" />,\n          width: 'w-144',\n          body: item => <span>{item.ctr}%</span>,\n        },\n    {\n      key: 'resulted_in_ticket',\n      header: () => <Trans message=\"Resulted in ticket\" />,\n      width: 'w-144',\n      body: item => (\n        <span className=\"text-muted\">\n          {item.resulted_in_ticket ? <CheckIcon /> : <CloseIcon />}\n        </span>\n      ),\n    },\n    {\n      key: 'last_seen',\n      header: () => <Trans message=\"Last seen\" />,\n      visibleInMode: 'all',\n      width: 'w-144',\n      body: item => <FormattedRelativeTime date={item.last_seen} />,\n    },\n    {\n      key: 'category',\n      header: () => <Trans message=\"Category\" />,\n      visibleInMode: 'all',\n      body: item =>\n        item.category ? (\n          <NameWithAvatar\n            image={item.category.image}\n            label={<CategoryLink category={item.category} target=\"_blank\" />}\n            description={item.category.description}\n          />\n        ) : null,\n    },\n  ];\n  return cols.filter(Boolean) as ColumnConfig<SearchTermReport>[];\n}\n","import {ZonedDateTime} from '@internationalized/date';\n\nexport type DateRangeValue = {\n  start: ZonedDateTime;\n  end: ZonedDateTime;\n  preset?: number;\n  compareStart?: ZonedDateTime;\n  compareEnd?: ZonedDateTime;\n  comparePreset?: number;\n};\n\nexport function dateRangeValueToPayload(value: {\n  dateRange?: DateRangeValue;\n  [key: string]: any;\n}) {\n  const payload = {\n    ...value,\n  };\n  if (payload.dateRange) {\n    payload.startDate = payload.dateRange.start.toAbsoluteString();\n    payload.endDate = payload.dateRange.end.toAbsoluteString();\n    payload.compareStartDate =\n      payload.dateRange.compareStart?.toAbsoluteString();\n    payload.compareEndDate = payload.dateRange.compareEnd?.toAbsoluteString();\n    payload.timezone = payload.dateRange.start.timeZone;\n    delete payload.dateRange;\n  }\n  return payload;\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {Category} from '@app/help-center/categories/category';\nimport {PaginatedBackendResponse} from '@common/http/backend-response/pagination-response';\nimport {\n  DateRangeValue,\n  dateRangeValueToPayload,\n} from '@common/ui/forms/input-field/date/date-range-picker/date-range-value';\n\nexport interface UseSearchReportResponse\n  extends PaginatedBackendResponse<SearchTermReport> {}\n\nexport interface SearchTermReport {\n  id: number;\n  term: string;\n  last_seen: string;\n  resulted_in_ticket: number;\n  count: string;\n  ctr: number;\n  category?: Category;\n}\n\nexport interface UseSearchReportParams {\n  page?: string | number;\n  perPage?: string | number;\n  userId?: string | number;\n  dateRange?: DateRangeValue;\n  failedSearches?: boolean;\n  orderBy?: 'last_seen' | 'count';\n}\n\nexport function useSearchReport(params: UseSearchReportParams) {\n  return useQuery({\n    queryKey: ['reports', 'search', params],\n    queryFn: () => fetchSearches(params),\n  });\n}\n\nfunction fetchSearches(params: UseSearchReportParams) {\n  return apiClient\n    .get<UseSearchReportResponse>(`reports/search`, {\n      params: dateRangeValueToPayload(params),\n    })\n    .then(response => response.data);\n}\n","import {useSearchParams} from 'react-router-dom';\nimport {GlobalLoadingProgress} from '@app/agent/global-loading-progress';\nimport React, {ReactNode, useMemo} from 'react';\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {SvgImage} from '@common/ui/images/svg-image/svg-image';\nimport searchImage from '@app/agent/agent-search-page/search.svg';\nimport {Trans} from '@common/i18n/trans';\nimport {DataTablePaginationFooter} from '@common/datatable/data-table-pagination-footer';\nimport {Table} from '@common/ui/tables/table';\nimport {getSearchReportTableColumns} from '@app/admin/reports/search-report/search-report-table-columns';\nimport {\n  useSearchReport,\n  UseSearchReportParams,\n} from '@app/admin/reports/search-report/use-search-report';\nimport {DateRangeValue} from '@common/ui/forms/input-field/date/date-range-picker/date-range-value';\n\ninterface Props {\n  userId?: number | string;\n  dateRange?: DateRangeValue;\n  failedSearches?: boolean;\n  description?: ReactNode;\n  orderBy?: UseSearchReportParams['orderBy'];\n}\nexport function SearchReportTable({\n  userId,\n  dateRange,\n  failedSearches,\n  description,\n}: Props) {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = useSearchReport({\n    dateRange,\n    userId,\n    failedSearches,\n    page: searchParams.get('page') || 1,\n    perPage: searchParams.get('perPage') || 15,\n  });\n  const {data, fetchStatus, isLoading, isPlaceholderData} = query;\n  const items = data?.pagination.data || [];\n  const isEmpty =\n    (fetchStatus === 'idle' && items.length === 0) ||\n    (!isLoading && !isPlaceholderData && items.length === 0);\n\n  const columns = useMemo(() => {\n    return getSearchReportTableColumns({\n      skipCtr: failedSearches,\n      description,\n    });\n  }, [description, failedSearches]);\n\n  return (\n    <div className=\"relative max-md:overflow-x-auto\">\n      <GlobalLoadingProgress query={query} />\n      <Table\n        columns={columns}\n        data={items}\n        enableSelection={false}\n        collapseOnMobile={false}\n        className=\"max-md:w-min\"\n      />\n      {isEmpty && (\n        <IllustratedMessage\n          className=\"mt-48\"\n          image={<SvgImage src={searchImage} />}\n          title={<Trans message=\"There are no searches to display\" />}\n        />\n      )}\n      <DataTablePaginationFooter\n        query={query}\n        onPageChange={page =>\n          setSearchParams(prev => {\n            prev.set('page', page.toString());\n            return prev;\n          })\n        }\n        onPerPageChange={perPage =>\n          setSearchParams(prev => {\n            prev.set('perPage', perPage.toString());\n            return prev;\n          })\n        }\n      />\n    </div>\n  );\n}\n"],"names":["GlobalLoadingProgress","query","jsx","ProgressBar","useTags","params","useQuery","fetchTags","apiClient","response","DeleteIcon","createSvgIcon","TabContext","React","Tabs","props","size","children","className","isLazy","overflow","tabsRef","useRef","id","useId","selectedTab","setSelectedTab","useControlledState","ContextValue","useMemo","clsx","Tab","index","isDisabled","paddingProp","elementType","to","relative","width","useContext","isSelected","focusManager","useFocusManager","padding","mergedClassname","textColor","onKeyDown","e","tabIndex","Element","el","TabLine","style","setStyle","useState","useLayoutEffect","prevState","TabList","center","expand","childrenArray","Children","FocusScope","jsxs","child","isValidElement","cloneElement","BackendFiltersUrlKey","decodeBackendFilters","encodedFilters","filtersFromQuery","filterValue","encodeBackendFilters","filterValues","filters","item","transformValue","fm","filterConfig","f","option","_a","useBackendFilterUrlParams","pinnedFilters","searchParams","useSearchParams","navigate","useNavigate","decodedFilters","decoded","key","config","a","b","getDecodedWithoutKeys","useCallback","values","newFilters","value","replaceAll","add","remove","FilterControlType","FilterOperator","FilterListTriggerButton","forwardRef","ref","isInactive","filter","domProps","InactiveFilterButton","ActiveFilterButton","Button","KeyboardArrowDownIcon","Trans","isBoolean","SelectFilterPanel","trans","useTrans","FormSelect","Item","FilterListItemDialogTrigger","onValueChange","label","DialogTrigger","FilterListControlDialog","panel","operator","form","useForm","close","formId","useDialogContext","Dialog","DialogHeader","DialogBody","Form","formValue","DialogFooter","useNormalizedModels","endpoint","queryParams","queryOptions","fetchModels","keepPreviousData","r","useNormalizedModel","fetchModel","NormalizedModelField","background","defaultValue","placeholder","message","searchPlaceholder","onChange","description","errorMessage","invalid","autoFocus","disabled","required","inputRef","inputValue","setInputValue","selectedValue","setSelectedValue","fieldClassNames","getInputFieldClassNames","AnimatePresence","SelectedModelPreview","_b","Select","model","Avatar","modelId","onEditClick","data","isLoading","LoadingSkeleton","m","opacityAnimation","Tooltip","IconButton","EditIcon","Skeleton","FormNormalizedModelField","name","fieldProps","clearErrors","useFormContext","error","useController","NormalizedModelFilterPanel","DateRangeIcon","Input","inputProps","wrapperProps","onClick","DatePickerField","onBlur","other","objRef","useObjectRef","useField","Field","mergeProps","createFocusManager","getDefaultGranularity","date","CalendarDate","dateIsInvalid","min","max","useBaseDatePickerState","selectedDate","timezone","useUserTimezone","calendarIsOpen","setCalendarIsOpen","closeDialogOnSelection","granularity","toZoned","startOfDay","endOfDay","useDateRangePickerState","now","useCurrentDateTime","isPlaceholder","setIsPlaceholder","setStateValue","internalValue","setInternalValue","completeRange","clear","anchorDate","setAnchorDate","isHighlighting","setIsHighlighting","highlightedRange","setHighlightedRange","calendarDates","setCalendarDates","rangeToCalendarDates","constrainRange","range","start","end","maxDate","startMax","minDate","endMin","newRange","dayIsActive","day","isSameDay","dayIsHighlighted","dayIsRangeStart","dayIsRangeEnd","getCellProps","isSameMonth","makeRange","finalRange","toCalendarDate","startOfMonth","endOfMonth","ArrowRightAltIcon","adjustSegment","part","amount","options","hours","isPM","setSegment","segmentValue","wasPM","PAGE_STEP","EditableDateSegment","segment","isMobile","useIsMobileMediaQuery","enteredKeys","localeCode","useSelectedLocale","formatter","useDateFormatter","parser","NumberParser","setSegmentValue","newValue","adjustSegmentValue","backspace","parsed","today","onInput","amPmFormatter","am","amDate","pm","pmDate","numberValue","allowsZero","shouldSetValue","spinButtonProps","LiteralDateSegment","getSegmentLimits","type","getMinimumMonthInYear","getMinimumDayInMonth","DateSegmentList","segmentProps","state","memoOptions","dateValue","segments","limits","textValue","CalendarCell","currentMonth","dayOfWeek","getDayOfWeek","isActive","isHighlighted","isRangeStart","isRangeEnd","dayIsToday","isToday","sameMonth","CalendarMonth","startDate","isFirst","isLast","weeksInMonth","getWeeksInMonth","monthStart","startOfWeek","CalendarMonthHeader","WeekdayHeader","weekIndex","dayIndex","shiftCalendars","direction","count","newDates","monthFormatter","isBackwardDisabled","isForwardDisabled","KeyboardArrowLeftIcon","KeyboardArrowRightIcon","dayFormatter","dateDay","weekday","Calendar","visibleMonths","Fragment","FormattedDateTimeRange","memo","preset","dates","useSettings","DateFormatPresets","castToDate","shallowEqual","parseAbsolute","getUserTimezone","defaultTimezone","getBootstrapData","preferredTimezone","_c","getLocalTimeZone","Now","locale","DateRangePresets","endOfWeek","startOfYear","endOfYear","DatePresetList","onPresetSelected","List","ListItem","useIsTabletMediaQuery","useMediaQuery","Switch","useAutoFocus","getSizeClassName","descriptionId","FormSwitch","formProps","DateRangeComparePresets","diffInMinutes","DateRangeComparePresetList","originalRangeValue","DateRangeDialog","compareState","showInlineDatePickerField","compareVisibleDefault","isTablet","initialStateRef","hasPlaceholder","compareVisible","setCompareVisible","footer","Calendars","InlineDatePickerField","DateRangePicker","hideCalendarIcon","dialog","openOnClick","isHourSegment","FormDateRangePicker","dateRangeToAbsoluteRange","absoluteRangeToDateRange","dateRange","parseAbsoluteToLocal","absoluteRange","DateRangeFilterPanel","FilterOperatorNames","InputFilterPanel","control","FormTextField","stringToChipValue","ChipFieldInner","fieldRef","displayWith","v","validateWith","suggestions","onInputValueChange","onItemSelected","onOpenChange","chipSize","openMenuOnFocus","showEmptyMessage","propsValue","propsOnChange","valueKey","isAsync","allowCustomValue","showDropdownArrow","onChipClick","inputFieldProps","useChipFieldValueState","listboxIsOpen","setListboxIsOpen","loadingIndicator","ProgressCircle","dropdownArrow","ListWrapper","ChipInput","items","setItems","displayChipUsing","manager","removeItem","i","cr","newItems","ChipList","Chip","setChips","chips","inputClassName","addItems","listbox","useListbox","handleItemSelection","activeIndex","setActiveIndex","isOpen","setIsOpen","refs","listboxId","collection","onInputChange","handleTriggerKeyDown","handleListboxKeyboardNavigation","useListboxKeyboardNavigation","handleFocusAndClick","createEventHandler","Listbox","Popover","emails","selection","email","input","mixedValueToChipValue","propsDefaultValue","handleChange","ChipField","FormChipField","ChipFieldFilterPanel","chip","o","FormattedNumber","useNumberFormatter","FilterListControl","DatePickerControl","BooleanToggleControl","SelectControl","ChipFieldControl","InputControl","SelectModelControl","Control","valueLabel","MultipleValues","maxShownCount","notShownCount","names","operatorLabel","formattedValue","skeleton","modelPreview","FilterList","field","handleValueChange","payload","CloseIcon","FilterAltIcon","Accordion","variant","mode","expandedValues","setExpandedValues","itemsCount","AccordionItem","bodyClassName","labelClassName","buttonPadding","startIcon","endAppend","chevronPosition","isExpanded","wasExpandedOnce","buttonId","panelId","toggle","newKeys","chevron","ArrowDropDownIcon","AccordionAnimation","BooleanFilterPanel","AddFilterDialog","expandedFilters","setExpandedFilters","clearButton","applyButton","defaultValues","appliedFilter","fieldValue","Checkbox","AddFilterDialogPanel","CustomComponent","AddFilterButton","icon","color","desktopButton","mobileButton","timestampFilter","createdAtFilter","updatedAtFilter","USER_MODEL","NameWithAvatar","image","avatarSize","MoreVertIcon","ButtonGroup","radius","multiple","childValue","toggleMultipleValue","childIndex","buttons","button","active","adjustedColor","getStyle","useCreateCannedReply","useMutation","createCannedReply","queryClient","toast","err","onFormQueryError","CannedReplyForm","onSubmit","reply","editorRef","attachments","setAttachments","bodyError","handleSubmit","getReplyBody","FileUploadProvider","ReplyEditor","CreateCannedReplyDialog","DatatableDataQueryKey","useDatatableData","onLoad","signal","paginate","resolve","DataTableContext","useDataTable","DataTableHeader","actions","filtersLoading","searchValue","onSearchChange","HeaderLayout","TextField","SearchIcon","SelectedStateDatatableHeader","selectedItemsCount","FilterListSkeleton","DataTable","columns","selectedActions","emptyStateMessage","tableDomProps","onRowAction","enableSelection","selectionStyle","cellHeight","collapseTableOnMobile","setParams","selectedRows","setSelectedRows","isFiltering","pagination","Table","descriptor","DataTablePaginationFooter","page","perPage","DataTablePage","title","headerContent","headerItemsAlign","dataTableProps","titleId","StaticPageTitle","AddIcon","DataTableAddItemButton","useDeleteSelectedRows","deleteSelectedRows","showHttpErrorToast","ids","DeleteSelectedItemsAction","DeleteItemsDialog","ConfirmationDialog","onlineArticlesImg","CannedRepliesDatatableFilters","useDeleteCannedReplies","deleteReplies","useUpdateCannedReply","updateCannedReply","UpdateCannedReplyDialog","truncateString","str","length","stripTags","CannedRepliesDatatableColumns","CannedReplyColumn","CheckIcon","FormattedDate","DeleteCannedReplyDialog","isCollapsedMode","TableContext","CannedRepliesDatatablePage","userId","c","Actions","DataTableEmptyStateMessage","InfoDialogTriggerIcon","InfoDialogTrigger","body","dialogSize","useBanUser","banUser","useDatePickerState","DatePicker","showCalendarFooter","FormDatePicker","format","parsedValue","BanUserDialog","user","isPermanent","getSearchReportTableColumns","skipCtr","Link","LinkStyle","FormattedRelativeTime","CategoryLink","dateRangeValueToPayload","useSearchReport","fetchSearches","SearchReportTable","failedSearches","setSearchParams","fetchStatus","isPlaceholderData","isEmpty","IllustratedMessage","SvgImage","searchImage","prev"],"mappings":"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"}