{"version":3,"file":"hc-ticket-routes-4be75b46.js","sources":["../../../resources/client/help-center/tickets/customer-ticket-list-page/customer-ticket-table-columns.tsx","../../../resources/client/help-center/tickets/customer-ticket-list-page/customer-ticket-list-page.tsx","../../../resources/client/help-center/tickets/use-submit-customer-reply.ts","../../../resources/client/help-center/tickets/customer-ticket-page.tsx","../../../resources/client/help-center/tickets/customer-new-ticket-page/use-customer-ticket-categories.ts","../../../resources/client/help-center/tickets/customer-new-ticket-page/use-customer-ticket-request-types.ts","../../../resources/client/help-center/tickets/customer-new-ticket-page/use-customer-new-ticket-config.ts","../../../resources/client/help-center/tickets/customer-new-ticket-page/suggested-articles-drawer.tsx","../../../resources/client/help-center/tickets/customer-new-ticket-page/customer-new-ticket-page.tsx","../../../resources/client/help-center/tickets/hc-ticket-routes.tsx"],"sourcesContent":["import {ColumnConfig} from '@common/datatable/column-config';\nimport {Ticket} from '@app/agent/ticket';\nimport {Trans} from '@common/i18n/trans';\nimport {FormattedRelativeTime} from '@common/i18n/formatted-relative-time';\nimport {Chip} from '@common/ui/forms/input-field/chip-field/chip';\nimport React from 'react';\n\nexport const CustomerTicketTableColumns: ColumnConfig<Ticket>[] = [\n  {\n    key: 'subject',\n    visibleInMode: 'all',\n    header: () => <Trans message=\"Subject\" />,\n    body: ticket => ticket.subject,\n    width: 'flex-3 min-w-200',\n  },\n  {\n    key: 'id',\n    allowsSorting: true,\n    header: () => <Trans message=\"Id\" />,\n    width: 'w-90',\n    body: ticket => `#${ticket.id}`,\n  },\n  {\n    key: 'Created',\n    allowsSorting: true,\n    header: () => <Trans message=\"Created\" />,\n    width: 'w-144',\n    body: ticket => <FormattedRelativeTime date={ticket.created_at} />,\n  },\n  {\n    key: 'updated_at',\n    allowsSorting: true,\n    header: () => <Trans message=\"Last updated\" />,\n    width: 'w-144',\n    body: ticket => <FormattedRelativeTime date={ticket.updated_at} />,\n  },\n  {\n    key: 'status',\n    header: () => <Trans message=\"Status\" />,\n    visibleInMode: 'all',\n    width: 'w-80',\n    body: ticket => (\n      <div className=\"w-max\">\n        <Chip\n          size=\"sm\"\n          color={!ticket.closed_at ? 'primary' : undefined}\n          radius=\"rounded-md\"\n          className=\"font-medium capitalize\"\n        >\n          <Trans message={ticket.status} />\n        </Chip>\n      </div>\n    ),\n  },\n];\n","import {HcSearchBar} from '@app/help-center/search/hc-search-bar';\nimport React, {Fragment, useRef} from 'react';\nimport {Navbar} from '@common/ui/navigation/navbar/navbar';\nimport {Trans} from '@common/i18n/trans';\nimport {useTickets} from '@app/agent/agent-ticket-page/user-details-sidebar/requests/use-tickets';\nimport {useAuth} from '@common/auth/use-auth';\nimport {Table} from '@common/ui/tables/table';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {TextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {message} from '@common/i18n/message';\nimport {SearchIcon} from '@common/icons/material/Search';\nimport {Link, useSearchParams} from 'react-router-dom';\nimport {Select} from '@common/ui/forms/select/select';\nimport {Item} from '@common/ui/forms/listbox/item';\nimport {DataTableEmptyStateMessage} from '@common/datatable/page/data-table-emty-state-message';\nimport searchImage from '@app/agent/agent-search-page/search.svg';\nimport {Skeleton} from '@common/ui/skeleton/skeleton';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\nimport {DataTablePaginationFooter} from '@common/datatable/data-table-pagination-footer';\nimport {Button} from '@common/ui/buttons/button';\nimport {CustomerTicketTableColumns} from '@app/help-center/tickets/customer-ticket-list-page/customer-ticket-table-columns';\nimport {BreadcrumbItem} from '@common/ui/breadcrumbs/breadcrumb-item';\nimport {Breadcrumb} from '@common/ui/breadcrumbs/breadcrumb';\n\nconst defaultPage = '1';\nconst defaultPerPage = '20';\n\nexport function CustomerTicketListPage() {\n  const navigate = useNavigate();\n  return (\n    <div>\n      <Navbar menuPosition=\"header\">\n        <HcSearchBar />\n      </Navbar>\n      <main className=\"container mx-auto px-24 pb-48\">\n        <Breadcrumb size=\"sm\" className=\"mb-48 mt-34\">\n          <BreadcrumbItem onSelected={() => navigate(`/hc`)}>\n            <Trans message=\"Help center\" />\n          </BreadcrumbItem>\n          <BreadcrumbItem onSelected={() => navigate(`/hc/tickets`)}>\n            <Trans message=\"Requests\" />\n          </BreadcrumbItem>\n        </Breadcrumb>\n        <div className=\"mb-34 flex items-start justify-between gap-12\">\n          <h1 className=\"text-3xl font-semibold\">\n            <Trans message=\"My requests\" />\n          </h1>\n          <Button\n            elementType={Link}\n            to=\"/hc/tickets/new\"\n            size=\"sm\"\n            variant=\"outline\"\n          >\n            <Trans message=\"New request\" />\n          </Button>\n        </div>\n        <TicketTable />\n      </main>\n    </div>\n  );\n}\n\nfunction TicketTable() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const {trans} = useTrans();\n  const inputRef = useRef<HTMLInputElement>(null);\n  const navigate = useNavigate();\n  const {user} = useAuth();\n  const query = useTickets({\n    userId: user!.id,\n    query: searchParams.get('query'),\n    tagId: searchParams.get('tagId'),\n    page: searchParams.get('page') || defaultPage,\n    perPage: searchParams.get('perPage') || defaultPerPage,\n  });\n  const data = query.data?.pagination?.data || [];\n  const isFiltering =\n    !!searchParams.get('query') || !!searchParams.get('tagId');\n\n  const setSearchQuery = () => {\n    setSearchParams(prev => {\n      if (inputRef.current?.value) {\n        prev.set('query', inputRef.current.value);\n      } else {\n        prev.delete('query');\n      }\n      return prev;\n    });\n  };\n\n  const content = !data.length ? (\n    <StateMessage isFiltering={isFiltering} />\n  ) : (\n    <Fragment>\n      <Table\n        columns={CustomerTicketTableColumns}\n        data={data}\n        enableSelection={false}\n        onAction={item => navigate(`/hc/tickets/${item.id}`)}\n        cellHeight=\"h-60\"\n      />\n      <DataTablePaginationFooter\n        className=\"mt-12\"\n        query={query}\n        onPageChange={page =>\n          setSearchParams(prev => {\n            prev.set('page', page.toString());\n            return prev;\n          })\n        }\n      />\n    </Fragment>\n  );\n\n  return (\n    <Fragment>\n      <form\n        className=\"mb-34 items-end justify-between gap-24 md:flex\"\n        onSubmit={e => {\n          e.preventDefault();\n          setSearchQuery();\n        }}\n      >\n        <TextField\n          className=\"flex-auto max-md:mb-24\"\n          inputRef={inputRef}\n          defaultValue={searchParams.get('query') || ''}\n          onBlur={() => setSearchQuery()}\n          placeholder={trans(message('Search requests'))}\n          startAdornment={<SearchIcon />}\n        />\n        <StatusSelect />\n      </form>\n      <AnimatePresence initial={false} mode=\"wait\">\n        {query.isLoading ? <Skeletons /> : content}\n      </AnimatePresence>\n    </Fragment>\n  );\n}\n\ninterface StateMessageProps {\n  isFiltering: boolean;\n}\nfunction StateMessage({isFiltering}: StateMessageProps) {\n  return (\n    <DataTableEmptyStateMessage\n      isFiltering={isFiltering}\n      size=\"sm\"\n      className=\"mt-48\"\n      image={searchImage}\n      title={<Trans message=\"You have not created any requests yet\" />}\n      filteringTitle={\n        <Trans message=\"No requests match your search query or filters\" />\n      }\n    />\n  );\n}\n\nfunction StatusSelect() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  return (\n    <Select\n      className=\"flex-shrink-0 md:min-w-172\"\n      selectionMode=\"single\"\n      selectedValue={searchParams.get('tagId') || ''}\n      onSelectionChange={newValue => {\n        setSearchParams(prev => {\n          if (newValue) {\n            prev.set('tagId', `${newValue}`);\n          } else {\n            prev.delete('tagId');\n          }\n          return prev;\n        });\n      }}\n    >\n      <Item value=\"\">\n        <Trans message=\"All requests\" />\n      </Item>\n      <Item value=\"open\">\n        <Trans message=\"Open requests\" />\n      </Item>\n      <Item value=\"closed\">\n        <Trans message=\"Closed requests\" />\n      </Item>\n      <Item value=\"pending\">\n        <Trans message=\"Awaiting your reply\" />\n      </Item>\n    </Select>\n  );\n}\n\nfunction Skeletons() {\n  return (\n    <m.div key=\"skeletons\" {...opacityAnimation}>\n      <Skeleton size=\"h-36\" variant=\"rect\" className=\"mb-12\" />\n      <Skeleton size=\"h-54\" variant=\"rect\" className=\"mb-12\" />\n      <Skeleton size=\"h-54\" variant=\"rect\" />\n    </m.div>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {Reply} from '@app/agent/reply';\nimport {useParams} from 'react-router-dom';\nimport {FileEntry} from '@common/uploads/file-entry';\n\ninterface SubmitReplyResponse {\n  reply: Reply;\n}\n\ninterface Payload {\n  body: string | null;\n  attachments?: FileEntry[];\n}\n\nexport function useSubmitCustomerReply() {\n  const {ticketId} = useParams();\n  return useMutation({\n    mutationFn: (payload: Payload) =>\n      submitReply({\n        ticketId: ticketId!,\n        ...payload,\n      }),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({queryKey: ['tickets']});\n      toast(message('Reply submitted'));\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction submitReply(data: Payload & {ticketId: number | string}) {\n  const payload = {\n    body: data.body,\n    attachments: data.attachments?.map(a => a.id),\n  };\n  return apiClient\n    .post<SubmitReplyResponse>(`tickets/${data.ticketId}/replies`, payload)\n    .then(r => r.data);\n}\n","import {Navbar} from '@common/ui/navigation/navbar/navbar';\nimport {HcSearchBar} from '@app/help-center/search/hc-search-bar';\nimport React, {Fragment, useRef, useState} from 'react';\nimport {PageStatus} from '@common/http/page-status';\nimport {\n  GetTicketResponse,\n  useTicket,\n} from '@app/agent/agent-ticket-page/requests/use-ticket';\nimport {TicketHeaderDateFormat} from '@app/agent/ticket-layout/ticket-header-layout';\nimport {useTicketReplies} from '@app/agent/agent-ticket-page/reply-list/requests/use-ticket-replies';\nimport {TicketReplyLayout} from '@app/agent/ticket-layout/ticket-reply-layout';\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport {\n  AttachmentListLayout,\n  FileEntryAttachmentLayout,\n} from '@app/agent/ticket-layout/attachment-list-layout';\nimport {BreadcrumbItem} from '@common/ui/breadcrumbs/breadcrumb-item';\nimport {Trans} from '@common/i18n/trans';\nimport {Breadcrumb} from '@common/ui/breadcrumbs/breadcrumb';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {ReplyEditor} from '@app/reply-editor/reply-editor';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {useSubmitCustomerReply} from '@app/help-center/tickets/use-submit-customer-reply';\nimport {FormattedRelativeTime} from '@common/i18n/formatted-relative-time';\nimport {FormattedDate} from '@common/i18n/formatted-date';\nimport {Chip} from '@common/ui/forms/input-field/chip-field/chip';\nimport {Button} from '@common/ui/buttons/button';\nimport {ReplyIcon} from '@common/icons/material/Reply';\nimport {TicketTagList} from '@app/agent/ticket-layout/ticket-tag-list';\nimport {Ticket} from '@app/agent/ticket';\nimport {Editor} from '@tiptap/react';\nimport {SendReplyButton} from '@app/reply-editor/send-reply-button';\nimport {useKeybind} from '@common/utils/keybinds/use-keybind';\nimport {SectionHelper} from '@common/ui/section-helper';\nimport {CheckIcon} from '@common/icons/material/Check';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {ConfirmationDialog} from '@common/ui/overlays/dialog/confirmation-dialog';\nimport {useChangeTicketStatus} from '@app/agent/ticket-actions/requests/use-change-ticket-status';\nimport {useParams} from 'react-router-dom';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport TicketTypeRequest from '@app/agent/ticket-layout/ticket-type-request-tag';\n\nexport function CustomerTicketPage() {\n  const navigate = useNavigate();\n  return (\n    <div>\n      <Navbar menuPosition=\"header\">\n        <HcSearchBar />\n      </Navbar>\n      <div className=\"container mx-auto px-12 pb-48 md:px-24\">\n        <Breadcrumb size=\"sm\" className=\"mb-34 mt-34 md:mb-48\">\n          <BreadcrumbItem onSelected={() => navigate(`/hc`)}>\n            <Trans message=\"Help center\" />\n          </BreadcrumbItem>\n          <BreadcrumbItem onSelected={() => navigate(`/hc/tickets`)}>\n            <Trans message=\"Requests\" />\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Trans message=\"Current ticket\" />\n          </BreadcrumbItem>\n        </Breadcrumb>\n        <main>\n          <Content />\n        </main>\n      </div>\n    </div>\n  );\n}\n\nfunction Content() {\n  const query = useTicket();\n  const [editorIsOpen, setEditorIsOpen] = useState(false);\n  useKeybind('window', 'r', () => setEditorIsOpen(true));\n\n  return (\n    <Fragment>\n      {query.data ? (\n        <Fragment>\n          {query.data.ticket.status === 'locked' && (\n            <SectionHelper\n              className=\"mb-44 text-center\"\n              color=\"danger\"\n              title={\n                <Trans message=\"This ticket was locked due to inactivity. To reply, create a new ticket.\" />\n              }\n            />\n          )}\n          <Header\n            ticket={query.data.ticket}\n            editorIsOpen={editorIsOpen}\n            onOpenEditor={() => setEditorIsOpen(true)}\n          />\n          <FileUploadProvider>\n            {editorIsOpen && (\n              <CustomerReplyEditor onClose={() => setEditorIsOpen(false)} />\n            )}\n          </FileUploadProvider>\n          <ReplyList data={query.data} />\n        </Fragment>\n      ) : (\n        <PageStatus query={query} loaderClassName=\"absolute inset-0 m-auto\" />\n      )}\n    </Fragment>\n  );\n}\n\ninterface CustomerReplyEditorProps {\n  onClose: () => void;\n}\nfunction CustomerReplyEditor({onClose}: CustomerReplyEditorProps) {\n  const editorRef = useRef<Editor | null>(null);\n  const submitReply = useSubmitCustomerReply();\n  const [attachments, setAttachments] = useState<FileEntry[]>([]);\n\n  return (\n    <ReplyEditor\n      isLoading={submitReply.isPending}\n      footerButtons={<SendReplyButton />}\n      editorRef={editorRef}\n      className=\"mb-24\"\n      attachments={attachments}\n      onAttachmentsChange={attachments => setAttachments(attachments)}\n      onSubmit={reply =>\n        submitReply.mutate(reply, {\n          onSuccess: () => onClose(),\n        })\n      }\n    />\n  );\n}\n\ninterface HeaderProps {\n  ticket: Ticket;\n  editorIsOpen: boolean;\n  onOpenEditor: () => void;\n}\nfunction Header({ticket, onOpenEditor, editorIsOpen}: HeaderProps) {\n  return (\n    <div className=\"mb-44\">\n      <div className=\"flex items-center gap-24\">\n        <div className=\"whitespace-nowrap text-muted max-md:hidden\">\n          <FormattedRelativeTime date={ticket.created_at} /> (\n          <FormattedDate\n            date={ticket.created_at}\n            options={TicketHeaderDateFormat}\n          />\n          )\n        </div>\n        <div className=\"text-2xl md:ml-auto\">#{ticket.id}</div>\n        <Chip\n          size=\"sm\"\n          color={!ticket.closed_at ? 'primary' : undefined}\n          radius=\"rounded\"\n          className=\"min-w-60 font-bold capitalize\"\n        >\n          {ticket.status}\n        </Chip>\n      </div>\n      <div className=\"flex items-center gap-8\">\n        <h1 className=\"my-12 text-2xl\">{ticket.subject}</h1>\n        <TicketTypeRequest ticketRequestType={ticket.ticket_request_type} />\n      </div>\n      <div className=\"flex items-center gap-12\">\n        <div className=\"mr-auto font-semibold max-md:hidden flex gap-4 items-center\">\n          <TicketTagList\n            ticket={ticket}\n            tagType=\"category\"\n            size=\"sm\"\n            radius=\"rounded\"\n            className=\"\"\n          />\n        </div>\n        {!ticket.closed_at && <MarkAsSolvedButton />}\n        <Button\n          size=\"sm\"\n          variant=\"outline\"\n          startIcon={<ReplyIcon />}\n          disabled={editorIsOpen}\n          onClick={() => onOpenEditor()}\n        >\n          <Trans message=\"Add a reply\" />\n        </Button>\n      </div>\n    </div>\n  );\n}\n\ninterface ReplyListProps {\n  data: GetTicketResponse;\n}\nfunction ReplyList({data: {ticket, replies}}: ReplyListProps) {\n  const query = useTicketReplies(ticket.id, replies);\n  return (\n    <Fragment>\n      {query.items.map(reply => {\n        const isInitial =\n          !query.hasNextPage && reply.id === query.items.at(-1)?.id;\n        return (\n          <TicketReplyLayout\n            className=\"px-12\"\n            key={reply.id}\n            reply={reply}\n            isInitial={isInitial}\n            ticketRequestType={ticket.ticket_request_type}\n            attachments={\n              reply.attachments?.length ? (\n                <AttachmentList attachments={reply.attachments} />\n              ) : null\n            }\n          />\n        );\n      })}\n      <InfiniteScrollSentinel query={query} />\n    </Fragment>\n  );\n}\n\ninterface AttachmentListProps {\n  attachments: FileEntry[];\n}\nfunction AttachmentList({attachments}: AttachmentListProps) {\n  return (\n    <AttachmentListLayout className=\"mt-30 w-max\">\n      {attachments.map((attachment, index) => (\n        <FileEntryAttachmentLayout\n          key={attachment.id}\n          attachments={attachments}\n          index={index}\n        />\n      ))}\n    </AttachmentListLayout>\n  );\n}\n\nfunction MarkAsSolvedButton() {\n  const changeStatus = useChangeTicketStatus();\n  const {ticketId} = useParams();\n  const navigate = useNavigate();\n  return (\n    <DialogTrigger type=\"modal\">\n      <Button size=\"sm\" variant=\"outline\" startIcon={<CheckIcon />}>\n        <Trans message=\"Mark as solved\" />\n      </Button>\n      {({close}) => (\n        <ConfirmationDialog\n          onConfirm={() => {\n            changeStatus.mutate(\n              {\n                ids: [ticketId!],\n                status: 'closed',\n              },\n              {\n                onSuccess: () => {\n                  close();\n                  toast(message('Ticked marked as solved'));\n                  navigate(`/hc/tickets`);\n                },\n              },\n            );\n          }}\n          isLoading={changeStatus.isPending}\n          title={<Trans message=\"Mark as solved\" />}\n          body={\n            <Trans message=\"Are you sure you want to mark this ticket as solved?\" />\n          }\n          confirm={<Trans message=\"Confirm\" />}\n        />\n      )}\n    </DialogTrigger>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {TicketTag} from '@app/agent/ticket';\nimport {PaginatedBackendResponse} from '@common/http/backend-response/pagination-response';\n\ninterface Response extends PaginatedBackendResponse<TicketTag> {}\n\nexport function useCustomerTicketCategories() {\n  return useQuery({\n    queryKey: ['new-ticket-categories'],\n    queryFn: () => fetchCategories(),\n  });\n}\n\nfunction fetchCategories() {\n  return apiClient\n    .get<Response>(`ticket-categories`, {\n      params: {\n        perPage: 25,\n        with: 'categories',\n        orderBy: 'name',\n        orderDir: 'asc',\n        filterByPurchases: true,\n        paginate: 'simple',\n      },\n    })\n    .then(response => response.data);\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {PaginatedBackendResponse} from '@common/http/backend-response/pagination-response';\n\nimport { TicketRequestType } from '@app/agent/ticket-request-type';\n\ninterface Response extends PaginatedBackendResponse<TicketRequestType> {}\n\nexport function useCustomerTicketRequestTypes() {\n  return useQuery({\n    queryKey: ['new-ticket-request-type'],\n    queryFn: () => fetchRequestTypes(),\n  });\n}\n\nfunction fetchRequestTypes() {\n  return apiClient\n    .get<Response>(`ticket-request-type`, {\n      params: {\n        perPage: 25,\n        with: '',\n        orderBy: 'name',\n        orderDir: 'asc',\n        filterByPurchases: false,\n        paginate: 'simple',\n      },\n    })\n    .then(response => response.data);\n}\n","import {useSettings} from '@common/core/settings/use-settings';\nimport {CustomerNewTicketPageConfig} from '@app/help-center/tickets/customer-new-ticket-page/customer-new-ticket-page-config';\n\nexport function useCustomerNewTicketConfig() {\n  const settings = useSettings();\n  return (settings.hc?.newTicket?.appearance ||\n    {}) as CustomerNewTicketPageConfig;\n}\n","import {\n  SearchArticlesResponse,\n  useSearchArticles,\n} from '@app/help-center/search/use-search-articles';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {Trans} from '@common/i18n/trans';\nimport {ArticleLink} from '@app/help-center/articles/article-link';\nimport {AccordionAnimation} from '@common/ui/accordion/accordtion-animation';\nimport {MutableRefObject} from 'react';\nimport {SearchSessionItem} from '@app/help-center/search/use-search-term-logger';\nimport {useCurrentDateTime} from '@common/i18n/use-current-date-time';\n\ninterface Props {\n  query: string;\n  suggestionLog: MutableRefObject<SearchSessionItem[]>;\n  hcCategoryIds?: number[];\n}\nexport function SuggestedArticlesDrawer({\n  query,\n  suggestionLog,\n  hcCategoryIds,\n}: Props) {\n  const now = useCurrentDateTime();\n  const handleSearch = (r: SearchArticlesResponse) => {\n    if (r.pagination.data.length) {\n      suggestionLog.current.push({\n        term: r.query,\n        results: r.pagination.data.map(a => a.id),\n        date: now.toAbsoluteString(),\n      });\n    }\n  };\n\n  const {data} = useSearchArticles(\n    query,\n    {perPage: 5, categoryIds: hcCategoryIds},\n    {onSearch: handleSearch},\n  );\n  const results = data?.pagination.data;\n  const isVisible = !!results?.length;\n\n  return (\n    <AnimatePresence>\n      <m.div\n        key=\"drawer\"\n        variants={AccordionAnimation.variants}\n        transition={AccordionAnimation.transition}\n        initial={false}\n        animate={isVisible ? 'open' : 'closed'}\n      >\n        <div className=\"mb-10 mt-24 text-xl font-semibold\">\n          <Trans message=\"Were you looking for\" />:\n        </div>\n        {results?.map(article => (\n          <ArticleLink\n            key={article.id}\n            article={article}\n            className=\"block py-10 text-sm text-primary\"\n            target=\"_blank\"\n          />\n        ))}\n      </m.div>\n    </AnimatePresence>\n  );\n}\n","import {Navbar} from '@common/ui/navigation/navbar/navbar';\r\nimport {HcSearchBar} from '@app/help-center/search/hc-search-bar';\r\nimport React, {ReactNode, useRef, useState} from 'react';\r\nimport {BreadcrumbItem} from '@common/ui/breadcrumbs/breadcrumb-item';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {Breadcrumb} from '@common/ui/breadcrumbs/breadcrumb';\r\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\r\nimport {useCustomerTicketCategories} from '@app/help-center/tickets/customer-new-ticket-page/use-customer-ticket-categories';\r\nimport {useCustomerTicketRequestTypes} from '@app/help-center/tickets/customer-new-ticket-page/use-customer-ticket-request-types';\r\nimport {useForm} from 'react-hook-form';\r\nimport {\r\n  CreateTicketPayload,\r\n  useCreateTicket,\r\n} from '@app/agent/agent-new-ticket-page/use-create-ticket';\r\nimport {Editor} from '@tiptap/react';\r\nimport {FileEntry} from '@common/uploads/file-entry';\r\nimport {getReplyBody} from '@app/reply-editor/get-reply-body';\r\nimport {getInputFieldClassNames} from '@common/ui/forms/input-field/get-input-field-class-names';\r\nimport {Form} from '@common/ui/forms/form';\r\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\r\nimport {FormSelect} from '@common/ui/forms/select/select';\r\nimport {Item} from '@common/ui/forms/listbox/item';\r\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\r\nimport {ReplyEditor} from '@app/reply-editor/reply-editor';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {TicketTag} from '@app/agent/ticket';\r\nimport {TicketRequestType} from '@app/agent/ticket-request-type';\r\nimport {useCustomerNewTicketConfig} from '@app/help-center/tickets/customer-new-ticket-page/use-customer-new-ticket-config';\r\nimport {SuggestedArticlesDrawer} from '@app/help-center/tickets/customer-new-ticket-page/suggested-articles-drawer';\r\nimport {\r\n  SearchSessionItem,\r\n  useSearchTermLogger,\r\n} from '@app/help-center/search/use-search-term-logger';\r\nimport {useSettings} from '@common/core/settings/use-settings';\r\n\r\nexport function CustomerNewTicketPage() {\r\n  const navigate = useNavigate();\r\n  const config = useCustomerNewTicketConfig();\r\n  const query = useCustomerTicketCategories();\r\n  const queryRequestType = useCustomerTicketRequestTypes();\r\n  const {envato} = useSettings();\r\n  return (\r\n    <div>\r\n      <Navbar menuPosition=\"header\">\r\n        <HcSearchBar />\r\n      </Navbar>\r\n      <div className=\"container mx-auto px-12 pb-48 md:px-24\">\r\n        <Breadcrumb size=\"sm\" className=\"mb-34 mt-34 md:mb-48\">\r\n          <BreadcrumbItem onSelected={() => navigate(`/hc`)}>\r\n            <Trans message=\"Help center\" />\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem onSelected={() => navigate(`/hc/tickets`)}>\r\n            <Trans message=\"Requests\" />\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem>\r\n            <Trans message=\"New request\" />\r\n          </BreadcrumbItem>\r\n        </Breadcrumb>\r\n        <div className=\"flex items-stretch gap-44\">\r\n          <main className=\"flex-auto\">\r\n            <h1 className=\"mb-34 mt-14 text-3xl font-light\">\r\n              <Trans message={config!.title} />\r\n            </h1>\r\n            {query.error && envato.enable && envato.require_purchase_code && (\r\n              <EnvatoError />\r\n            )}\r\n            {query.data && queryRequestType.data ? (\r\n              <TicketForm\r\n                ticketCategories={query.data.pagination.data}\r\n                ticketRequestTypes={queryRequestType.data.pagination.data} \r\n              />\r\n            ) : null}\r\n          </main>\r\n          <Sidebar />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface TicketFormProps {\r\n  ticketCategories: TicketTag[];\r\n  ticketRequestTypes: TicketRequestType[];\r\n}\r\nfunction TicketForm({ticketCategories, ticketRequestTypes}: TicketFormProps) {\r\n  const config = useCustomerNewTicketConfig();\r\n  const navigate = useNavigate();\r\n  const form = useForm<CreateTicketPayload>({\r\n    defaultValues: {\r\n      category_id: ticketCategories[0]?.id,\r\n      ticket_request_type: ticketRequestTypes[0]?.id,\r\n    },\r\n  });\r\n  const bodyError = form.formState.errors.body?.message;\r\n  const createTicket = useCreateTicket(form);\r\n  const editorRef = useRef<Editor | null>(null);\r\n  const [attachments, setAttachments] = useState<FileEntry[]>([]);\r\n  const searchQuery = form.watch('subject');\r\n  const hcCategoryIds = ticketCategories\r\n    .find(tc => form.watch('category_id') == tc.id)\r\n    ?.categories.map(hc => hc.id);\r\n  const searchTermLogger = useSearchTermLogger();\r\n  const suggestionLog = useRef<SearchSessionItem[]>([]);\r\n\r\n  const selectedCategoryId = form.watch('category_id');\r\n  const selectedCategory = ticketCategories.find(\r\n    c => c.id == selectedCategoryId,\r\n  );\r\n\r\n  const handleSubmit = () => {\r\n    createTicket.mutate(\r\n      {\r\n        ...form.getValues(),\r\n        body: getReplyBody(editorRef) || '',\r\n        attachments: attachments.map(a => a.id),\r\n        suggestionLog: suggestionLog.current,\r\n      },\r\n      {\r\n        onSuccess: () => {\r\n          searchTermLogger.updateLastSearch({createdTicket: true});\r\n          navigate('/hc/tickets');\r\n        },\r\n      },\r\n    );\r\n  };\r\n\r\n  const inputFieldClassNames = getInputFieldClassNames();\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      onSubmit={() => handleSubmit()}\r\n      onBeforeSubmit={() => form.clearErrors()}\r\n    >\r\n      <FormSelect\r\n        name=\"category_id\"\r\n        label={<Trans message={config!.categoryLabel} />}\r\n        selectionMode=\"single\"\r\n        className=\"mb-24\"\r\n        errorMessage={\r\n          selectedCategory &&\r\n          selectedCategory.support_expired && (\r\n            <Trans\r\n              message=\"Your support for this item has expired. <a>Click here to renew</a>\"\r\n              values={{\r\n                a: content => (\r\n                  <a\r\n                    href=\"https://codecanyon.net/downloads\"\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                    className=\"font-bold underline\"\r\n                  >\r\n                    {content}\r\n                  </a>\r\n                ),\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      >\r\n        {ticketCategories.map(category => (\r\n          <Item key={category.id} value={category.id}>\r\n            {category.display_name || category.name}\r\n          </Item>\r\n        ))}\r\n      </FormSelect>\r\n      <FormSelect\r\n        name=\"ticket_request_type\"\r\n        label={<Trans message=\"Request Type\" />}\r\n        selectionMode=\"single\"\r\n        className=\"mb-24\"\r\n      >\r\n        {ticketRequestTypes.map(request_type => (\r\n          <Item key={request_type.id} value={request_type.id}>\r\n            {request_type.display_name || request_type.name}\r\n          </Item>\r\n        ))}\r\n      </FormSelect>\r\n      <FormTextField\r\n        name=\"subject\"\r\n        label={<Trans message={config!.subjectLabel} />}\r\n      />\r\n      <SuggestedArticlesDrawer\r\n        query={searchQuery}\r\n        suggestionLog={suggestionLog}\r\n        hcCategoryIds={hcCategoryIds}\r\n      />\r\n      <div className=\"my-24\">\r\n        <div className={inputFieldClassNames.label}>\r\n          <Trans message={config!.descriptionLabel} />\r\n        </div>\r\n          \r\n        {selectedCategory?.description_ticket_page && (\r\n          <div className={`[&_a]:underline ${inputFieldClassNames.label}`}>\r\n            <div dangerouslySetInnerHTML={{ __html: selectedCategory.description_ticket_page }} />\r\n          </div>\r\n        )}\r\n        <FileUploadProvider>\r\n          <ReplyEditor\r\n            autoFocus={false}\r\n            minHeight=\"min-h-[300px]\"\r\n            isLoading={createTicket.isPending}\r\n            editorRef={editorRef}\r\n            attachments={attachments}\r\n            onAttachmentsChange={attachments => setAttachments(attachments)}\r\n            onSubmit={() => handleSubmit()}\r\n          />\r\n        </FileUploadProvider>\r\n        {bodyError && (\r\n          <div className={inputFieldClassNames.error}>{bodyError}</div>\r\n        )}\r\n      </div>\r\n      <Button\r\n        variant=\"flat\"\r\n        color=\"primary\"\r\n        type=\"submit\"\r\n        disabled={createTicket.isPending}\r\n      >\r\n        <Trans message={config!.submitButtonText} />\r\n      </Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nfunction Sidebar() {\r\n  const config = useCustomerNewTicketConfig();\r\n  return (\r\n    <aside className=\"w-500 border-l px-40 max-md:hidden\">\r\n      <h2 className=\"mb-34 text-xl font-medium\">\r\n        <Trans message={config.sidebarTitle} />\r\n      </h2>\r\n      {config.sidebarTips?.map((tip, index) => (\r\n        <SidebarTip key={index} title={<Trans message={tip.title} />}>\r\n          <Trans message={tip.content} />\r\n        </SidebarTip>\r\n      ))}\r\n    </aside>\r\n  );\r\n}\r\n\r\ninterface SidebarTipProps {\r\n  title: ReactNode;\r\n  children: ReactNode;\r\n}\r\nfunction SidebarTip({title, children}: SidebarTipProps) {\r\n  return (\r\n    <div className=\"mb-30\">\r\n      <h3 className=\"text-lg font-medium\">{title}</h3>\r\n      <p>{children}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction EnvatoError() {\r\n  return (\r\n    <div className=\"text-sm text-danger\">\r\n      <Trans message=\"There was an issue fetching your purchase codes from envato. Try to logout and use 'login with envato' button.\" />\r\n    </div>\r\n  );\r\n}\r\n","import {RouteObject, useRoutes} from 'react-router-dom';\nimport {NotFoundPage} from '@common/ui/not-found-page/not-found-page';\nimport React from 'react';\nimport {CustomerTicketListPage} from '@app/help-center/tickets/customer-ticket-list-page/customer-ticket-list-page';\nimport {CustomerTicketPage} from '@app/help-center/tickets/customer-ticket-page';\nimport {CustomerNewTicketPage} from '@app/help-center/tickets/customer-new-ticket-page/customer-new-ticket-page';\n\nconst RouteConfig: RouteObject[] = [\n  {\n    path: '/',\n    element: <CustomerTicketListPage />,\n  },\n  {\n    path: '/new',\n    element: <CustomerNewTicketPage />,\n  },\n  {\n    path: ':ticketId',\n    element: <CustomerTicketPage />,\n  },\n  {\n    path: '*',\n    element: <NotFoundPage />,\n  },\n];\n\nexport default function HcTicketRoutes() {\n  return useRoutes(RouteConfig);\n}\n"],"names":["CustomerTicketTableColumns","jsx","Trans","ticket","FormattedRelativeTime","Chip","defaultPage","defaultPerPage","CustomerTicketListPage","navigate","useNavigate","Navbar","HcSearchBar","jsxs","Breadcrumb","BreadcrumbItem","Button","Link","TicketTable","searchParams","setSearchParams","useSearchParams","trans","useTrans","inputRef","useRef","user","useAuth","query","useTickets","data","_b","_a","isFiltering","setSearchQuery","prev","content","Fragment","Table","item","DataTablePaginationFooter","page","StateMessage","e","TextField","message","SearchIcon","StatusSelect","AnimatePresence","Skeletons","DataTableEmptyStateMessage","searchImage","Select","newValue","Item","m","opacityAnimation","Skeleton","useSubmitCustomerReply","ticketId","useParams","useMutation","payload","submitReply","queryClient","toast","err","showHttpErrorToast","a","apiClient","r","CustomerTicketPage","Content","useTicket","editorIsOpen","setEditorIsOpen","useState","useKeybind","SectionHelper","Header","FileUploadProvider","CustomerReplyEditor","ReplyList","PageStatus","onClose","editorRef","attachments","setAttachments","ReplyEditor","SendReplyButton","reply","onOpenEditor","FormattedDate","TicketHeaderDateFormat","TicketTypeRequest","TicketTagList","MarkAsSolvedButton","ReplyIcon","replies","useTicketReplies","isInitial","TicketReplyLayout","AttachmentList","InfiniteScrollSentinel","AttachmentListLayout","attachment","index","FileEntryAttachmentLayout","changeStatus","useChangeTicketStatus","DialogTrigger","CheckIcon","close","ConfirmationDialog","useCustomerTicketCategories","useQuery","fetchCategories","response","useCustomerTicketRequestTypes","fetchRequestTypes","useCustomerNewTicketConfig","useSettings","SuggestedArticlesDrawer","suggestionLog","hcCategoryIds","now","useCurrentDateTime","handleSearch","useSearchArticles","results","isVisible","AccordionAnimation","article","ArticleLink","CustomerNewTicketPage","config","queryRequestType","envato","EnvatoError","TicketForm","Sidebar","ticketCategories","ticketRequestTypes","form","useForm","bodyError","_c","createTicket","useCreateTicket","searchQuery","_d","tc","hc","searchTermLogger","useSearchTermLogger","selectedCategoryId","selectedCategory","c","handleSubmit","getReplyBody","inputFieldClassNames","getInputFieldClassNames","Form","FormSelect","category","request_type","FormTextField","tip","SidebarTip","title","children","RouteConfig","NotFoundPage","HcTicketRoutes","useRoutes"],"mappings":"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"}