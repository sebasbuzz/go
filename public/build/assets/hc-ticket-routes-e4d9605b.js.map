{"version":3,"file":"hc-ticket-routes-e4d9605b.js","sources":["../../../resources/client/help-center/tickets/use-submit-customer-reply.ts","../../../resources/client/help-center/tickets/use-team.ts","../../../resources/client/help-center/tickets/customer-ticket-page.tsx","../../../resources/client/help-center/tickets/customer-new-ticket-page/use-customer-ticket-categories.ts","../../../resources/client/help-center/tickets/customer-new-ticket-page/use-customer-new-ticket-config.ts","../../../resources/client/help-center/tickets/customer-new-ticket-page/suggested-articles-drawer.tsx","../../../resources/client/help-center/tickets/customer-new-ticket-page/customer-new-ticket-page.tsx","../../../resources/client/help-center/tickets/hc-ticket-routes.tsx"],"sourcesContent":["import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {Reply} from '@app/agent/reply';\nimport {useParams} from 'react-router-dom';\nimport {FileEntry} from '@common/uploads/file-entry';\n\ninterface SubmitReplyResponse {\n  reply: Reply;\n}\n\ninterface Payload {\n  body: string | null;\n  attachments?: FileEntry[];\n}\n\nexport function useSubmitCustomerReply() {\n  const {ticketId} = useParams();\n  return useMutation({\n    mutationFn: (payload: Payload) =>\n      submitReply({\n        ticketId: ticketId!,\n        ...payload,\n      }),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({queryKey: ['tickets']});\n      toast(message('Reply submitted'));\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction submitReply(data: Payload & {ticketId: number | string}) {\n  const payload = {\n    body: data.body,\n    attachments: data.attachments?.map(a => a.id),\n  };\n  return apiClient\n    .post<SubmitReplyResponse>(`tickets/${data.ticketId}/replies`, payload)\n    .then(r => r.data);\n}\n","import {useQuery} from '@tanstack/react-query';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {PaginatedBackendResponse} from '@common/http/backend-response/pagination-response';\r\nimport { BackendResponse } from '@common/http/backend-response/backend-response';\r\n\r\nimport { TeamTypes } from '@common/admin/teams/teams-index-page';\r\n\r\ninterface Response extends BackendResponse {\r\n  team: TeamTypes\r\n}\r\n\r\nexport function useTeam(id:number | undefined) {\r\n  return useQuery({\r\n    queryKey: ['new-team', id],\r\n    queryFn: () => fetchTeam(id),\r\n  });\r\n}\r\n\r\nfunction fetchTeam(id:number | undefined) {\r\n  return apiClient\r\n    .get<Response>(`teams/${id}`)\r\n    .then(response => response.data)\r\n}\r\n","import {Navbar} from '@common/ui/navigation/navbar/navbar';\r\nimport {HcSearchBar} from '@app/help-center/search/hc-search-bar';\r\nimport React, {Fragment, useRef, useState} from 'react';\r\nimport {PageStatus} from '@common/http/page-status';\r\nimport {\r\n  GetTicketResponse,\r\n  useTicket,\r\n} from '@app/agent/agent-ticket-page/requests/use-ticket';\r\n/* import {TicketHeaderDateFormat} from '@app/agent/ticket-layout/ticket-header-layout'; */\r\nimport {useTicketReplies} from '@app/agent/agent-ticket-page/reply-list/requests/use-ticket-replies';\r\nimport {TicketReplyLayout} from '@app/agent/ticket-layout/ticket-reply-layout';\r\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\r\nimport {FileEntry} from '@common/uploads/file-entry';\r\nimport {\r\n  AttachmentListLayout,\r\n  FileEntryAttachmentLayout,\r\n} from '@app/agent/ticket-layout/attachment-list-layout';\r\nimport {BreadcrumbItem} from '@common/ui/breadcrumbs/breadcrumb-item';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {Breadcrumb} from '@common/ui/breadcrumbs/breadcrumb';\r\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\r\nimport {ReplyEditor} from '@app/reply-editor/reply-editor';\r\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\r\nimport {useSubmitCustomerReply} from '@app/help-center/tickets/use-submit-customer-reply';\r\nimport {FormattedRelativeTime} from '@common/i18n/formatted-relative-time';\r\nimport {FormattedDate} from '@common/i18n/formatted-date';\r\nimport {Chip} from '@common/ui/forms/input-field/chip-field/chip';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {ReplyIcon} from '@common/icons/material/Reply';\r\nimport {TicketTagList} from '@app/agent/ticket-layout/ticket-tag-list';\r\nimport {Ticket} from '@app/agent/ticket';\r\nimport {Editor} from '@tiptap/react';\r\nimport {SendReplyButton} from '@app/reply-editor/send-reply-button';\r\nimport {useKeybind} from '@common/utils/keybinds/use-keybind';\r\nimport {SectionHelper} from '@common/ui/section-helper';\r\nimport {CheckIcon} from '@common/icons/material/Check';\r\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\r\nimport {ConfirmationDialog} from '@common/ui/overlays/dialog/confirmation-dialog';\r\nimport {useChangeTicketStatus} from '@app/agent/ticket-actions/requests/use-change-ticket-status';\r\nimport {useParams} from 'react-router-dom';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {message} from '@common/i18n/message';\r\nimport TicketTypeRequest from '@app/agent/ticket-layout/ticket-type-request-tag';\r\nimport { useTeam } from './use-team';\r\n\r\nconst TicketHeaderDateFormat: Intl.DateTimeFormatOptions = {\r\n  month: 'short',\r\n  day: 'numeric',\r\n};\r\n\r\nexport function CustomerTicketPage() {\r\n  const navigate = useNavigate();\r\n  return (\r\n    <div>\r\n      <Navbar menuPosition=\"header\">\r\n        <HcSearchBar />\r\n      </Navbar>\r\n      <div className=\"container mx-auto px-12 pb-48 md:px-24\">\r\n        <Breadcrumb size=\"sm\" className=\"mb-34 mt-34 md:mb-48\">\r\n          <BreadcrumbItem onSelected={() => navigate(`/hc`)}>\r\n            <Trans message=\"Help center\" />\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem onSelected={() => navigate(`/hc/tickets`)}>\r\n            <Trans message=\"Requests\" />\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem>\r\n            <Trans message=\"Current ticket\" />\r\n          </BreadcrumbItem>\r\n        </Breadcrumb>\r\n        <main>\r\n          <Content />\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Content() {\r\n  const query = useTicket();\r\n  const [editorIsOpen, setEditorIsOpen] = useState(false);\r\n  useKeybind('window', 'r', () => setEditorIsOpen(true));\r\n\r\n  return (\r\n    <Fragment>\r\n      {query.data ? (\r\n        <Fragment>\r\n          {query.data.ticket.status === 'locked' && (\r\n            <SectionHelper\r\n              className=\"mb-44 text-center\"\r\n              color=\"danger\"\r\n              title={\r\n                <Trans message=\"This ticket was locked due to inactivity. To reply, create a new ticket.\" />\r\n              }\r\n            />\r\n          )}\r\n          <Header\r\n            ticket={query.data.ticket}\r\n            editorIsOpen={editorIsOpen}\r\n            onOpenEditor={() => setEditorIsOpen(true)}\r\n          />\r\n          <FileUploadProvider>\r\n            {editorIsOpen && (\r\n              <CustomerReplyEditor onClose={() => setEditorIsOpen(false)} />\r\n            )}\r\n          </FileUploadProvider>\r\n          <ReplyList data={query.data} />\r\n        </Fragment>\r\n      ) : (\r\n        <PageStatus query={query} loaderClassName=\"absolute inset-0 m-auto\" />\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface CustomerReplyEditorProps {\r\n  onClose: () => void;\r\n}\r\nfunction CustomerReplyEditor({onClose}: CustomerReplyEditorProps) {\r\n  const editorRef = useRef<Editor | null>(null);\r\n  const submitReply = useSubmitCustomerReply();\r\n  const [attachments, setAttachments] = useState<FileEntry[]>([]);\r\n\r\n  return (\r\n    <ReplyEditor\r\n      isLoading={submitReply.isPending}\r\n      footerButtons={<SendReplyButton />}\r\n      editorRef={editorRef}\r\n      className=\"mb-24\"\r\n      attachments={attachments}\r\n      onAttachmentsChange={attachments => setAttachments(attachments)}\r\n      onSubmit={reply =>\r\n        submitReply.mutate(reply, {\r\n          onSuccess: () => onClose(),\r\n        })\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\ninterface HeaderProps {\r\n  ticket: Ticket;\r\n  editorIsOpen: boolean;\r\n  onOpenEditor: () => void;\r\n}\r\nfunction Header({ticket, onOpenEditor, editorIsOpen}: HeaderProps) {\r\n  const {assignee} = ticket;\r\n  const teamId = assignee?.team_id;\r\n  const assignedTeam = useTeam(teamId)\r\n  return (\r\n    <div className=\"mb-44\">\r\n      <div className=\"flex items-center gap-24\">\r\n        <div className=\"whitespace-nowrap text-muted max-md:hidden\">\r\n          <FormattedRelativeTime date={ticket.created_at} /> (\r\n          <FormattedDate\r\n            date={ticket.created_at}\r\n            options={TicketHeaderDateFormat}\r\n          />\r\n          )\r\n        </div>\r\n        <div className=\"text-2xl md:ml-auto\">#{ticket.id}</div>\r\n        <Chip\r\n          size=\"sm\"\r\n          color={!ticket.closed_at ? 'primary' : undefined}\r\n          radius=\"rounded\"\r\n          className=\"min-w-60 font-bold capitalize\"\r\n        >\r\n          {ticket.status}\r\n        </Chip>\r\n      </div>\r\n      <div className=\"flex items-center gap-8\">\r\n        <h1 className=\"my-12 text-2xl\">{ticket.subject}</h1>\r\n        <TicketTypeRequest ticketRequestType={ticket.ticket_request_type} />\r\n      </div>\r\n      <div className=\"flex items-center gap-12\">\r\n        <div className=\"mr-auto font-semibold max-md:hidden flex gap-4 items-center\">\r\n          {/* <TicketTagList\r\n            ticket={ticket}\r\n            tagType=\"category\"\r\n            size=\"sm\"\r\n            radius=\"rounded\"\r\n            className=\"\"\r\n          /> */}\r\n          {teamId && assignedTeam && (\r\n            <div>\r\n              <span className=\"text-muted\">Assigned to:</span> <span className=\"font-medium\">{assignedTeam?.data?.team?.display_name}</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n        {!ticket.closed_at && <MarkAsSolvedButton />}\r\n        <Button\r\n          size=\"sm\"\r\n          variant=\"outline\"\r\n          startIcon={<ReplyIcon />}\r\n          disabled={editorIsOpen}\r\n          onClick={() => onOpenEditor()}\r\n        >\r\n          <Trans message=\"Add a reply\" />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface ReplyListProps {\r\n  data: GetTicketResponse;\r\n}\r\nfunction ReplyList({data: {ticket, replies}}: ReplyListProps) {\r\n  const query = useTicketReplies(ticket.id, replies);\r\n  return (\r\n    <Fragment>\r\n      {query.items.map(reply => {\r\n        const isInitial =\r\n          !query.hasNextPage && reply.id === query.items.at(-1)?.id;\r\n        return (\r\n          <TicketReplyLayout\r\n            className=\"px-12\"\r\n            key={reply.id}\r\n            reply={reply}\r\n            isInitial={isInitial}\r\n            ticketRequestType={ticket.ticket_request_type}\r\n            attachments={\r\n              reply.attachments?.length ? (\r\n                <AttachmentList attachments={reply.attachments} />\r\n              ) : null\r\n            }\r\n          />\r\n        );\r\n      })}\r\n      <InfiniteScrollSentinel query={query} />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface AttachmentListProps {\r\n  attachments: FileEntry[];\r\n}\r\nfunction AttachmentList({attachments}: AttachmentListProps) {\r\n  return (\r\n    <AttachmentListLayout className=\"mt-30 w-max\">\r\n      {attachments.map((attachment, index) => (\r\n        <FileEntryAttachmentLayout\r\n          key={attachment.id}\r\n          attachments={attachments}\r\n          index={index}\r\n        />\r\n      ))}\r\n    </AttachmentListLayout>\r\n  );\r\n}\r\n\r\nfunction MarkAsSolvedButton() {\r\n  const changeStatus = useChangeTicketStatus();\r\n  const {ticketId} = useParams();\r\n  const navigate = useNavigate();\r\n  return (\r\n    <DialogTrigger type=\"modal\">\r\n      <Button size=\"sm\" variant=\"outline\" startIcon={<CheckIcon />}>\r\n        <Trans message=\"Mark as solved\" />\r\n      </Button>\r\n      {({close}) => (\r\n        <ConfirmationDialog\r\n          onConfirm={() => {\r\n            changeStatus.mutate(\r\n              {\r\n                ids: [ticketId!],\r\n                status: 'closed',\r\n              },\r\n              {\r\n                onSuccess: () => {\r\n                  close();\r\n                  toast(message('Ticked marked as solved'));\r\n                  navigate(`/hc/tickets`);\r\n                },\r\n              },\r\n            );\r\n          }}\r\n          isLoading={changeStatus.isPending}\r\n          title={<Trans message=\"Mark as solved\" />}\r\n          body={\r\n            <Trans message=\"Are you sure you want to mark this ticket as solved?\" />\r\n          }\r\n          confirm={<Trans message=\"Confirm\" />}\r\n        />\r\n      )}\r\n    </DialogTrigger>\r\n  );\r\n}\r\n","import {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {TicketTag} from '@app/agent/ticket';\nimport {PaginatedBackendResponse} from '@common/http/backend-response/pagination-response';\n\ninterface Response extends PaginatedBackendResponse<TicketTag> {}\n\nexport function useCustomerTicketCategories() {\n  return useQuery({\n    queryKey: ['new-ticket-categories'],\n    queryFn: () => fetchCategories(),\n  });\n}\n\nfunction fetchCategories() {\n  return apiClient\n    .get<Response>(`ticket-categories`, {\n      params: {\n        perPage: 25,\n        with: 'categories',\n        orderBy: 'name',\n        orderDir: 'asc',\n        filterByPurchases: true,\n        paginate: 'simple',\n      },\n    })\n    .then(response => response.data);\n}\n","import {useSettings} from '@common/core/settings/use-settings';\nimport {CustomerNewTicketPageConfig} from '@app/help-center/tickets/customer-new-ticket-page/customer-new-ticket-page-config';\n\nexport function useCustomerNewTicketConfig() {\n  const settings = useSettings();\n  return (settings.hc?.newTicket?.appearance ||\n    {}) as CustomerNewTicketPageConfig;\n}\n","import {\n  SearchArticlesResponse,\n  useSearchArticles,\n} from '@app/help-center/search/use-search-articles';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {Trans} from '@common/i18n/trans';\nimport {ArticleLink} from '@app/help-center/articles/article-link';\nimport {AccordionAnimation} from '@common/ui/accordion/accordtion-animation';\nimport {MutableRefObject} from 'react';\nimport {SearchSessionItem} from '@app/help-center/search/use-search-term-logger';\nimport {useCurrentDateTime} from '@common/i18n/use-current-date-time';\n\ninterface Props {\n  query: string;\n  suggestionLog: MutableRefObject<SearchSessionItem[]>;\n  hcCategoryIds?: number[];\n}\nexport function SuggestedArticlesDrawer({\n  query,\n  suggestionLog,\n  hcCategoryIds,\n}: Props) {\n  const now = useCurrentDateTime();\n  const handleSearch = (r: SearchArticlesResponse) => {\n    if (r.pagination.data.length) {\n      suggestionLog.current.push({\n        term: r.query,\n        results: r.pagination.data.map(a => a.id),\n        date: now.toAbsoluteString(),\n      });\n    }\n  };\n\n  const {data} = useSearchArticles(\n    query,\n    {perPage: 5, categoryIds: hcCategoryIds},\n    {onSearch: handleSearch},\n  );\n  const results = data?.pagination.data;\n  const isVisible = !!results?.length;\n\n  return (\n    <AnimatePresence>\n      <m.div\n        key=\"drawer\"\n        variants={AccordionAnimation.variants}\n        transition={AccordionAnimation.transition}\n        initial={false}\n        animate={isVisible ? 'open' : 'closed'}\n      >\n        <div className=\"mb-10 mt-24 text-xl font-semibold\">\n          <Trans message=\"Were you looking for\" />:\n        </div>\n        {results?.map(article => (\n          <ArticleLink\n            key={article.id}\n            article={article}\n            className=\"block py-10 text-sm text-primary\"\n            target=\"_blank\"\n          />\n        ))}\n      </m.div>\n    </AnimatePresence>\n  );\n}\n","import {Navbar} from '@common/ui/navigation/navbar/navbar';\r\nimport {HcSearchBar} from '@app/help-center/search/hc-search-bar';\r\nimport React, {ReactNode, useRef, useState} from 'react';\r\nimport {BreadcrumbItem} from '@common/ui/breadcrumbs/breadcrumb-item';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {Breadcrumb} from '@common/ui/breadcrumbs/breadcrumb';\r\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\r\nimport {useCustomerTicketCategories} from '@app/help-center/tickets/customer-new-ticket-page/use-customer-ticket-categories';\r\nimport {useCustomerTicketRequestTypes} from '@app/help-center/tickets/customer-new-ticket-page/use-customer-ticket-request-types';\r\nimport {useForm} from 'react-hook-form';\r\nimport {\r\n  CreateTicketPayload,\r\n  useCreateTicket,\r\n} from '@app/agent/agent-new-ticket-page/use-create-ticket';\r\nimport {Editor} from '@tiptap/react';\r\nimport {FileEntry} from '@common/uploads/file-entry';\r\nimport {getReplyBody} from '@app/reply-editor/get-reply-body';\r\nimport {getInputFieldClassNames} from '@common/ui/forms/input-field/get-input-field-class-names';\r\nimport {Form} from '@common/ui/forms/form';\r\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\r\nimport {FormSelect} from '@common/ui/forms/select/select';\r\nimport {Item} from '@common/ui/forms/listbox/item';\r\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\r\nimport {ReplyEditor} from '@app/reply-editor/reply-editor';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {TicketTag} from '@app/agent/ticket';\r\nimport {TicketRequestType, TicketRequestTypeTag} from '@app/agent/ticket-request-type';\r\nimport {useCustomerNewTicketConfig} from '@app/help-center/tickets/customer-new-ticket-page/use-customer-new-ticket-config';\r\nimport {SuggestedArticlesDrawer} from '@app/help-center/tickets/customer-new-ticket-page/suggested-articles-drawer';\r\nimport {\r\n  SearchSessionItem,\r\n  useSearchTermLogger,\r\n} from '@app/help-center/search/use-search-term-logger';\r\nimport {useSettings} from '@common/core/settings/use-settings';\r\n\r\nexport function CustomerNewTicketPage() {\r\n  const navigate = useNavigate();\r\n  const config = useCustomerNewTicketConfig();\r\n  const query = useCustomerTicketCategories();\r\n  /* console.log('query', query); */\r\n  const queryRequestType = useCustomerTicketRequestTypes();\r\n  const {envato} = useSettings();\r\n  return (\r\n    <div>\r\n      <Navbar menuPosition=\"header\">\r\n        <HcSearchBar />\r\n      </Navbar>\r\n      <div className=\"container mx-auto px-12 pb-48 md:px-24\">\r\n        <Breadcrumb size=\"sm\" className=\"mb-34 mt-34 md:mb-48\">\r\n          <BreadcrumbItem onSelected={() => navigate(`/hc`)}>\r\n            <Trans message=\"Help center\" />\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem onSelected={() => navigate(`/hc/tickets`)}>\r\n            <Trans message=\"Requests\" />\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem>\r\n            <Trans message=\"New request\" />\r\n          </BreadcrumbItem>\r\n        </Breadcrumb>\r\n        <div className=\"flex items-stretch gap-44\">\r\n          <main className=\"flex-auto\">\r\n            <h1 className=\"mb-34 mt-14 text-3xl font-light\">\r\n              <Trans message={config!.title} />\r\n            </h1>\r\n            {query.error && envato.enable && envato.require_purchase_code && (\r\n              <EnvatoError />\r\n            )}\r\n            {query.data && queryRequestType.data ? (\r\n              <TicketForm\r\n                ticketCategories={query.data.pagination.data}\r\n                ticketRequestTypes={queryRequestType.data.pagination.data}\r\n              />\r\n            ) : null}\r\n          </main>\r\n          <Sidebar />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface TicketFormProps {\r\n  ticketCategories: TicketTag[];\r\n  ticketRequestTypes: TicketRequestType[];\r\n}\r\nfunction TicketForm({ticketCategories, ticketRequestTypes}: TicketFormProps) {\r\n  console.log('ticketCategories', ticketCategories);\r\n  const config = useCustomerNewTicketConfig();\r\n  const navigate = useNavigate();\r\n  const form = useForm<CreateTicketPayload>({\r\n    defaultValues: {\r\n      category_id: ticketCategories[0]?.id,\r\n      ticket_request_type: ticketRequestTypes[0]?.id,\r\n    },\r\n  });\r\n  const bodyError = form.formState.errors.body?.message;\r\n  const createTicket = useCreateTicket(form);\r\n  const editorRef = useRef<Editor | null>(null);\r\n  const [attachments, setAttachments] = useState<FileEntry[]>([]);\r\n  const searchQuery = form.watch('subject');\r\n  const hcCategoryIds = ticketCategories\r\n    .find(tc => form.watch('category_id') == tc.id)\r\n    ?.categories.map(hc => hc.id);\r\n  const searchTermLogger = useSearchTermLogger();\r\n  const suggestionLog = useRef<SearchSessionItem[]>([]);\r\n\r\n  const selectedCategoryId = form.watch('category_id');\r\n  const selectedCategory = ticketCategories.find(\r\n    c => c.id == selectedCategoryId,\r\n  );\r\n  const types : TicketRequestTypeTag[] = selectedCategory?.ticket_request_type;\r\n  \r\n\r\n  const handleSubmit = () => {\r\n    console.log('form.getValues()', form.getValues());\r\n    createTicket.mutate(\r\n      {\r\n        ...form.getValues(),\r\n        body: getReplyBody(editorRef) || '',\r\n        attachments: attachments.map(a => a.id),\r\n        suggestionLog: suggestionLog.current,\r\n      },\r\n      {\r\n        onSuccess: () => {\r\n          searchTermLogger.updateLastSearch({createdTicket: true});\r\n          navigate('/hc/tickets');\r\n        },\r\n      },\r\n    );\r\n  };\r\n\r\n  const inputFieldClassNames = getInputFieldClassNames();\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      onSubmit={() => handleSubmit()}\r\n      onBeforeSubmit={() => form.clearErrors()}\r\n    >\r\n      <FormSelect\r\n        name=\"category_id\"\r\n        label={<Trans message={config!.categoryLabel} />}\r\n        selectionMode=\"single\"\r\n        className=\"mb-24\"\r\n        errorMessage={\r\n          selectedCategory &&\r\n          selectedCategory.support_expired && (\r\n            <Trans\r\n              message=\"Your support for this item has expired. <a>Click here to renew</a>\"\r\n              values={{\r\n                a: content => (\r\n                  <a\r\n                    href=\"https://codecanyon.net/downloads\"\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                    className=\"font-bold underline\"\r\n                  >\r\n                    {content}\r\n                  </a>\r\n                ),\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      >\r\n        {ticketCategories.map(category => (\r\n          <Item key={category.id} value={category.id}>\r\n            {category.display_name || category.name}\r\n          </Item>\r\n        ))}\r\n      </FormSelect>\r\n      {\r\n        types?.length > 0 && \r\n        <FormSelect\r\n          name=\"ticket_request_type\"\r\n          label={<Trans message=\"Request Type\" />}\r\n          selectionMode=\"single\"\r\n          className=\"mb-24\"\r\n        >\r\n          {types.map((request_type) => (\r\n            <Item key={request_type.id} value={request_type.id}>\r\n              {request_type.display_name || request_type.name}\r\n            </Item>\r\n          ))}\r\n        </FormSelect>\r\n      }\r\n      <FormTextField\r\n        name=\"subject\"\r\n        label={<Trans message={config!.subjectLabel} />}\r\n      />\r\n      <SuggestedArticlesDrawer\r\n        query={searchQuery}\r\n        suggestionLog={suggestionLog}\r\n        hcCategoryIds={hcCategoryIds}\r\n      />\r\n      <div className=\"my-24\">\r\n        <div className={inputFieldClassNames.label}>\r\n          <Trans message={config!.descriptionLabel} />\r\n        </div>\r\n          \r\n        {selectedCategory?.description_ticket_page && (\r\n          <div className={`[&_a]:underline ${inputFieldClassNames.label}`}>\r\n            <div dangerouslySetInnerHTML={{ __html: selectedCategory.description_ticket_page }} />\r\n          </div>\r\n        )}\r\n        <FileUploadProvider>\r\n          <ReplyEditor\r\n            autoFocus={false}\r\n            minHeight=\"min-h-[300px]\"\r\n            isLoading={createTicket.isPending}\r\n            editorRef={editorRef}\r\n            attachments={attachments}\r\n            onAttachmentsChange={attachments => setAttachments(attachments)}\r\n            onSubmit={() => handleSubmit()}\r\n          />\r\n        </FileUploadProvider>\r\n        {bodyError && (\r\n          <div className={inputFieldClassNames.error}>{bodyError}</div>\r\n        )}\r\n      </div>\r\n      <Button\r\n        variant=\"flat\"\r\n        color=\"primary\"\r\n        type=\"submit\"\r\n        disabled={createTicket.isPending}\r\n      >\r\n        <Trans message={config!.submitButtonText} />\r\n      </Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nfunction Sidebar() {\r\n  const config = useCustomerNewTicketConfig();\r\n  return (\r\n    <aside className=\"w-500 border-l px-40 max-md:hidden\">\r\n      <h2 className=\"mb-34 text-xl font-medium\">\r\n        <Trans message={config.sidebarTitle} />\r\n      </h2>\r\n      {config.sidebarTips?.map((tip, index) => (\r\n        <SidebarTip key={index} title={<Trans message={tip.title} />}>\r\n          <Trans message={tip.content} />\r\n        </SidebarTip>\r\n      ))}\r\n    </aside>\r\n  );\r\n}\r\n\r\ninterface SidebarTipProps {\r\n  title: ReactNode;\r\n  children: ReactNode;\r\n}\r\nfunction SidebarTip({title, children}: SidebarTipProps) {\r\n  return (\r\n    <div className=\"mb-30\">\r\n      <h3 className=\"text-lg font-medium\">{title}</h3>\r\n      <p>{children}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction EnvatoError() {\r\n  return (\r\n    <div className=\"text-sm text-danger\">\r\n      <Trans message=\"There was an issue fetching your purchase codes from envato. Try to logout and use 'login with envato' button.\" />\r\n    </div>\r\n  );\r\n}\r\n","import {RouteObject, useRoutes} from 'react-router-dom';\nimport {NotFoundPage} from '@common/ui/not-found-page/not-found-page';\nimport React from 'react';\nimport {CustomerTicketListPage} from '@app/help-center/tickets/customer-ticket-list-page/customer-ticket-list-page';\nimport {CustomerTicketPage} from '@app/help-center/tickets/customer-ticket-page';\nimport {CustomerNewTicketPage} from '@app/help-center/tickets/customer-new-ticket-page/customer-new-ticket-page';\n\nconst RouteConfig: RouteObject[] = [\n  {\n    path: '/',\n    element: <CustomerTicketListPage />,\n  },\n  {\n    path: '/new',\n    element: <CustomerNewTicketPage />,\n  },\n  {\n    path: ':ticketId',\n    element: <CustomerTicketPage />,\n  },\n  {\n    path: '*',\n    element: <NotFoundPage />,\n  },\n];\n\nexport default function HcTicketRoutes() {\n  return useRoutes(RouteConfig);\n}\n"],"names":["useSubmitCustomerReply","ticketId","useParams","useMutation","payload","submitReply","queryClient","toast","message","err","showHttpErrorToast","data","_a","a","apiClient","r","useTeam","id","useQuery","fetchTeam","response","TicketHeaderDateFormat","CustomerTicketPage","navigate","useNavigate","jsx","Navbar","HcSearchBar","jsxs","Breadcrumb","BreadcrumbItem","Trans","Content","query","useTicket","editorIsOpen","setEditorIsOpen","useState","useKeybind","Fragment","SectionHelper","Header","FileUploadProvider","CustomerReplyEditor","ReplyList","PageStatus","onClose","editorRef","useRef","attachments","setAttachments","ReplyEditor","SendReplyButton","reply","ticket","onOpenEditor","assignee","teamId","assignedTeam","FormattedRelativeTime","FormattedDate","Chip","TicketTypeRequest","_b","MarkAsSolvedButton","Button","ReplyIcon","replies","useTicketReplies","isInitial","TicketReplyLayout","AttachmentList","InfiniteScrollSentinel","AttachmentListLayout","attachment","index","FileEntryAttachmentLayout","changeStatus","useChangeTicketStatus","DialogTrigger","CheckIcon","close","ConfirmationDialog","useCustomerTicketCategories","fetchCategories","useCustomerNewTicketConfig","useSettings","SuggestedArticlesDrawer","suggestionLog","hcCategoryIds","now","useCurrentDateTime","handleSearch","useSearchArticles","results","isVisible","AnimatePresence","m","AccordionAnimation","article","ArticleLink","CustomerNewTicketPage","config","queryRequestType","useCustomerTicketRequestTypes","envato","EnvatoError","TicketForm","Sidebar","ticketCategories","ticketRequestTypes","form","useForm","bodyError","_c","createTicket","useCreateTicket","searchQuery","_d","tc","hc","searchTermLogger","useSearchTermLogger","selectedCategoryId","selectedCategory","types","handleSubmit","getReplyBody","inputFieldClassNames","getInputFieldClassNames","Form","FormSelect","content","category","Item","request_type","FormTextField","tip","SidebarTip","title","children","RouteConfig","CustomerTicketListPage","NotFoundPage","HcTicketRoutes","useRoutes"],"mappings":"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"}