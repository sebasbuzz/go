{"version":3,"file":"agent-routes-906b967f.js","sources":["../../../resources/client/agent/agent-ticket-list-page/ticket-table/opened.svg","../../../resources/client/agent/use-mailbox-params.ts","../../../resources/client/agent/agent-ticket-list-page/ticket-table/ticket-table-footer.tsx","../../../resources/client/agent/agent-ticket-list-page/ticket-table/ticket-table-columns.tsx","../../../resources/client/agent/agent-ticket-page/ticket-page-link.tsx","../../../resources/client/agent/agent-ticket-list-page/ticket-table/ticket-table.tsx","../../../resources/client/agent/ticket.ts","../../../resources/client/agent/ticket-actions/requests/use-agents.ts","../../../resources/client/agent/ticket-actions/requests/use-assign-tickets-to-aggent.tsx","../../../resources/client/agent/ticket-actions/ticket-action-button.tsx","../../../resources/client/agent/ticket-actions/icons/assign-ticket-icon.tsx","../../../resources/client/agent/ticket-actions/assign-tickets-button.tsx","../../../resources/client/agent/use-mailbox-sidenav-tags.ts","../../../resources/client/agent/ticket-actions/icons/change-status-icon.tsx","../../../resources/client/agent/ticket-actions/change-ticket-status-button.tsx","../../../resources/client/agent/ticket-actions/requests/use-add-tag-to-tickets.ts","../../../resources/client/agent/ticket-actions/icons/add-tag-icon.tsx","../../../resources/client/agent/ticket-actions/add-tag-to-tickets-button.tsx","../../../resources/client/agent/ticket-actions/requests/use-delete-tickets.tsx","../../../resources/client/agent/ticket-actions/delete-tickets-button.tsx","../../../resources/client/agent/agent-ticket-list-page/ticket-table/ticket-table-actions.tsx","../../../resources/client/agent/agent-ticket-list-page/ticket-table/ticket-table-page.tsx","../../../resources/client/agent/agent-navbar.tsx","../../../resources/client/agent/agent-ticket-list-page/agent-ticket-list-sidenav.tsx","../../../resources/client/agent/agent-page-layout.tsx","../../../resources/client/agent/agent-ticket-list-page/agent-ticket-list-page.tsx","../../../node_modules/use-debounce/dist/index.module.js","../../../resources/client/agent/agent-search-page/search-tickets/use-search-tickets-filters.tsx","../../../common/resources/client/utils/hooks/use-stable-scrollbar.ts","../../../resources/client/agent/agent-search-page/agent-search-page.tsx","../../../resources/client/agent/agent-search-page/requests/use-search-tickets.ts","../../../resources/client/agent/agent-search-page/search-table-layout.tsx","../../../resources/client/agent/agent-search-page/search-tickets/search-tickets-table.tsx","../../../resources/client/agent/agent-search-page/requests/use-search-users.ts","../../../resources/client/agent/agent-search-page/search-users-table.tsx","../../../resources/client/agent/agent-search-page/search-articles-table.tsx","../../../resources/client/agent/ticket-actions/icons/add-note-icon.tsx","../../../resources/client/agent/ticket-actions/icons/back-to-tickets-icon.tsx","../../../resources/client/agent/agent-ticket-page/use-after-reply-action.ts","../../../resources/client/agent/agent-ticket-page/notes/use-create-note.ts","../../../resources/client/agent/agent-ticket-page/notes/create-note-dialog.tsx","../../../resources/client/agent/agent-ticket-page/ticket-page-toolbar.tsx","../../../resources/client/agent/agent-ticket-page/reply-list/requests/use-delete-reply.ts","../../../resources/client/agent/agent-ticket-page/reply-list/requests/use-update-reply.ts","../../../resources/client/agent/agent-ticket-page/reply-list/reply-attachment-list.tsx","../../../resources/client/agent/agent-ticket-page/reply-list/update-reply-dialog.tsx","../../../resources/client/agent/agent-ticket-page/reply-list/requests/use-original-reply-email.ts","../../../resources/client/agent/agent-ticket-page/reply-list/original-email-preview-dialog.tsx","../../../resources/client/agent/agent-ticket-page/reply-list/agent-ticket-page-reply-list.tsx","../../../resources/client/agent/ticket-actions/requests/use-remove-tag-from-tickets.ts","../../../resources/client/agent/ticket-layout/ticket-header-layout.tsx","../../../resources/client/agent/ticket-layout/ticket-tag-list.tsx","../../../resources/client/agent/agent-ticket-page/ticket-page-header.tsx","../../../resources/client/agent/agent-ticket-page/user-details-sidebar/user-details-section.tsx","../../../resources/client/agent/agent-ticket-page/envato-purchase-list/purchase-code-details-dialog.tsx","../../../resources/client/agent/agent-ticket-page/envato-purchase-list/envato-purchase-list.tsx","../../../resources/client/agent/agent-ticket-page/user-details-sidebar/ticket-page-purchase-list.tsx","../../../resources/client/agent/agent-ticket-page/user-details-sidebar/activity-log/use-activity-log.ts","../../../resources/client/help-center/articles/article.ts","../../../resources/client/agent/agent-search-page/search-term.ts","../../../common/resources/client/ui/timeline.tsx","../../../resources/client/agent/agent-ticket-page/user-details-sidebar/activity-list.tsx","../../../resources/client/agent/agent-ticket-page/user-details-sidebar/requests/use-merge-tickets.ts","../../../resources/client/agent/agent-ticket-page/ticket-preview-dialog.tsx","../../../resources/client/agent/agent-ticket-page/user-details-sidebar/requests/use-update-ticket.ts","../../../resources/client/agent/agent-ticket-page/user-details-sidebar/change-customer-dialog.tsx","../../../resources/client/agent/agent-ticket-page/user-details-sidebar/user-details-sidebar.tsx","../../../resources/client/agent/agent-ticket-page/requests/use-save-draft.ts","../../../resources/client/agent/agent-ticket-page/agent-reply-editor/use-background-draft-save.ts","../../../resources/client/agent/agent-ticket-page/agent-reply-editor/use-submit-agent-reply.ts","../../../resources/client/agent/agent-ticket-page/agent-reply-editor/agent-reply-editor-draft-buttons.tsx","../../../resources/client/agent/agent-ticket-page/canned-replies/requests/use-canned-replies.ts","../../../resources/client/agent/agent-ticket-page/canned-replies/canned-reply-selector.tsx","../../../resources/client/agent/agent-ticket-page/ticket-page-docs-search-input.tsx","../../../resources/client/agent/agent-ticket-page/agent-reply-editor/agent-reply-editor.tsx","../../../resources/client/agent/agent-ticket-page/agent-ticket-page.tsx","../../../resources/client/agent/agent-canned-replies-page.tsx","../../../resources/client/agent/agent-new-ticket-page/agent-new-ticket-page.tsx","../../../resources/client/agent/customer-page/requests/use-update-user-details.ts","../../../resources/client/agent/customer-page/agent-customer-page-sidebar.tsx","../../../resources/client/agent/customer-page/requests/use-delete-user.ts","../../../resources/client/agent/customer-page/requests/use-merge-users.ts","../../../resources/client/agent/customer-page/merge-users-dialog.tsx","../../../resources/client/agent/customer-page/agent-customer-page.tsx","../../../resources/client/agent/customer-page/agent-customer-page-ticket-table.tsx","../../../resources/client/agent/customer-page/customer-searches-table.tsx","../../../resources/client/agent/agent-routes.tsx"],"sourcesContent":["export default \"__VITE_ASSET__a71f56b4__\"","import {useSearchParams} from 'react-router-dom';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {PaginateTicketsParams} from '@app/agent/agent-ticket-page/user-details-sidebar/requests/use-tickets';\nimport {useCallback} from 'react';\n\nconst defaultPage = '1';\nconst defaultPerPage = '20';\n\nexport function useMailboxParams() {\n  const [searchParams] = useSearchParams();\n  const tagId = searchParams.get('tagId') || 'unassigned';\n  return {\n    tagId,\n    page: searchParams.get('page') || defaultPage,\n    perPage: searchParams.get('perPage') || defaultPerPage,\n    orderBy: searchParams.get('orderBy') || '',\n    orderDir: searchParams.get('orderDir') || '',\n  };\n}\n\nexport function useNavigateToMailboxTicketTable() {\n  const navigate = useNavigate();\n  const urlParams = useMailboxParams();\n  return useCallback(\n    (userParams: PaginateTicketsParams = {}) => {\n      const link = getMailboxTicketTableLink(urlParams, userParams);\n      navigate(link);\n    },\n    [urlParams, navigate],\n  );\n}\n\nexport function useMailboxTicketTableLink(\n  userParams: PaginateTicketsParams = {},\n) {\n  const urlParams = useMailboxParams();\n  return getMailboxTicketTableLink(urlParams, userParams);\n}\n\nfunction getMailboxTicketTableLink(\n  urlParams: Record<string, string>,\n  userParams: PaginateTicketsParams = {},\n) {\n  const tagId = userParams.tagId || urlParams.tagId;\n  const page = `${userParams.page || urlParams.page}`;\n  const perPage = `${userParams.perPage || urlParams.perPage}`;\n\n  // if orderBy/orderDir is set as undefined in user params, it means sorting\n  // was reset on the table, and we should clear all sorting params from url\n  const orderBy =\n    'orderBy' in userParams ? userParams.orderBy : urlParams.orderBy;\n  const orderDir =\n    'orderDir' in userParams ? userParams.orderDir : urlParams.orderDir;\n  let link = `/agent/tickets?tagId=${tagId}`;\n  if (page !== defaultPage) {\n    link += `&page=${page}`;\n  }\n  if (perPage !== defaultPerPage) {\n    link += `&perPage=${perPage}`;\n  }\n  if (orderBy) {\n    link += `&orderBy=${orderBy}`;\n  }\n  if (orderDir) {\n    link += `&orderDir=${orderDir}`;\n  }\n  return link;\n}\n","import {DataTablePaginationFooter} from '@common/datatable/data-table-pagination-footer';\nimport React from 'react';\nimport {UseQueryResult} from '@tanstack/react-query';\nimport {PaginatedBackendResponse} from '@common/http/backend-response/pagination-response';\nimport {Ticket} from '@app/agent/ticket';\n\ninterface Props {\n  onPerPageChange: (perPage: number) => void;\n  onPageChange: (page: number) => void;\n  query: UseQueryResult<PaginatedBackendResponse<Ticket>>;\n}\nexport function TicketTableFooter({\n  onPageChange,\n  onPerPageChange,\n  query,\n}: Props) {\n  return (\n    <DataTablePaginationFooter\n      className=\"flex-shrink-0\"\n      onPerPageChange={onPerPageChange}\n      onPageChange={onPageChange}\n      query={query}\n    />\n  );\n}\n","import {ColumnConfig} from '@common/datatable/column-config';\r\nimport {Ticket} from '@app/agent/ticket';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {FormattedRelativeTime} from '@common/i18n/formatted-relative-time';\r\nimport React from 'react';\r\nimport {ChipList} from '@common/ui/forms/input-field/chip-field/chip-list';\r\nimport {Chip} from '@common/ui/forms/input-field/chip-field/chip';\r\nimport TicketTypeRequestTag from '@app/agent/ticket-layout/ticket-type-request-tag';\r\n\r\nexport const TicketTableColumns: ColumnConfig<Ticket>[] = [\r\n  {\r\n    key: 'user_id',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Customer\" />,\r\n    visibleInMode: 'all',\r\n    width: 'w-132',\r\n    body: ticket => (ticket.user ? ticket.user.display_name : '-'),\r\n  },\r\n  {\r\n    key: 'avatar',\r\n    header: () => <Trans message=\"Avatar\" />,\r\n    hideHeader: true,\r\n    width: 'w-100 flex-shrink-0',\r\n    body: ticket =>\r\n      ticket.user ? (\r\n        <img\r\n          className=\"m-auto h-38 w-38 rounded-full\"\r\n          src={ticket.user.avatar}\r\n          alt=\"\"\r\n        />\r\n      ) : (\r\n        '-'\r\n      ),\r\n  },\r\n  {\r\n    key: 'summary',\r\n    header: () => <Trans message=\"Ticket summary\" />,\r\n    body: ticket => <TicketSummary ticket={ticket} />,\r\n    width: 'flex-3 min-w-200',\r\n  },\r\n  {\r\n    key: 'replies_count',\r\n    header: () => <Trans message=\"Replies count\" />,\r\n    hideHeader: true,\r\n    width: 'w-50',\r\n    body: ticket => (\r\n      <div className=\"w-max rounded border bg-alt px-6 text-xs font-normal text-muted\">\r\n        {ticket.replies_count || 1}\r\n      </div>\r\n    ),\r\n  },\r\n  {\r\n    key: 'assigned_to',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Assigned to\" />,\r\n    width: 'w-124',\r\n    body: ticket => (ticket.assignee ? ticket.assignee.display_name : ''),\r\n  },\r\n  {\r\n    key: 'id',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Number\" />,\r\n    width: 'w-90',\r\n    body: ticket => ticket.id,\r\n  },\r\n  {\r\n    key: 'updated_at',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Last updated\" />,\r\n    visibleInMode: 'all',\r\n    width: 'w-144',\r\n    body: ticket => <FormattedRelativeTime date={ticket.updated_at} />,\r\n  },\r\n];\r\n\r\ninterface TicketSummaryProps {\r\n  ticket: Ticket;\r\n}\r\nfunction TicketSummary({ticket}: TicketSummaryProps) {\r\n  const body = ticket.latest_reply?.body\r\n    ? ticket.latest_reply.body\r\n    : ticket.replies?.[0]?.body;\r\n  const tags = ticket.tags?.filter(t => t.type !== 'status');\r\n\r\n  return (\r\n    <div className=\"overflow-hidden overflow-ellipsis whitespace-nowrap pr-12\">\r\n      <div className=\"flex items-center gap-10\">\r\n        <ChipList size=\"xs\" wrap={false}>\r\n          {tags?.map(tag => (\r\n            <Chip key={tag.id}>{tag.display_name || tag.name}</Chip>\r\n          ))}\r\n        </ChipList>\r\n        <TicketTypeRequestTag ticketRequestType={ticket.ticket_request_type}/>\r\n        <div>{ticket.subject}</div>\r\n      </div>\r\n      {body && (\r\n        <div className=\"overflow-hidden overflow-ellipsis whitespace-nowrap pt-4 font-normal text-muted\">\r\n          {body}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import {Link, LinkProps} from 'react-router-dom';\nimport clsx from 'clsx';\nimport React, {ReactNode, useMemo} from 'react';\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\nimport {Ticket} from '@app/agent/ticket';\n\ninterface Props extends Omit<LinkProps, 'to'> {\n  ticket: Ticket;\n  className?: string;\n  children?: ReactNode;\n  color?: 'primary' | 'inherit';\n}\nexport function TicketPageLink({\n  ticket,\n  className,\n  children,\n  color = 'inherit',\n  ...linkProps\n}: Props) {\n  const finalUri = useMemo(() => {\n    return getTicketPageLink(ticket);\n  }, [ticket]);\n\n  return (\n    <Link\n      {...linkProps}\n      className={clsx(\n        color === 'primary'\n          ? 'text-primary hover:text-primary-dark'\n          : 'text-inherit',\n        'overflow-x-hidden overflow-ellipsis outline-none transition-colors hover:underline focus-visible:underline',\n        className\n      )}\n      to={finalUri}\n    >\n      {children ?? ticket.subject}\n    </Link>\n  );\n}\n\nexport function getTicketPageLink(\n  ticket: Ticket,\n  {absolute, tagId}: {absolute?: boolean; tagId?: string | number} = {}\n): string {\n  let link = `/agent/tickets/${ticket.id}`;\n  if (absolute) {\n    link = `${getBootstrapData().settings.base_url}${link}`;\n  }\n  if (tagId) {\n    link = `${link}?tagId=${tagId}`;\n  }\n  return link;\n}\n","import {Table} from '@common/ui/tables/table';\nimport {TicketTableColumns} from '@app/agent/agent-ticket-list-page/ticket-table/ticket-table-columns';\nimport React from 'react';\nimport {RowElementProps} from '@common/ui/tables/table-row';\nimport {Ticket} from '@app/agent/ticket';\nimport clsx from 'clsx';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {useMailboxParams} from '@app/agent/use-mailbox-params';\nimport {UseQueryResult} from '@tanstack/react-query';\nimport {PaginatedBackendResponse} from '@common/http/backend-response/pagination-response';\nimport {getTicketPageLink} from '@app/agent/agent-ticket-page/ticket-page-link';\nimport {SortDescriptor} from '@common/ui/tables/types/sort-descriptor';\n\ninterface Props {\n  query: UseQueryResult<PaginatedBackendResponse<Ticket>>;\n  selectedTickets?: number[];\n  onSelectionChange?: (ticketIds: number[]) => void;\n  sortDescriptor?: SortDescriptor;\n  onSortChange?: (sortDescriptor: SortDescriptor) => void;\n}\nexport function TicketTable({\n  query,\n  selectedTickets,\n  onSelectionChange,\n  sortDescriptor,\n  onSortChange,\n}: Props) {\n  const navigate = useNavigate();\n  const {tagId} = useMailboxParams();\n  return (\n    <Table\n      headerCellHeight=\"h-36\"\n      cellHeight=\"h-64\"\n      selectedRows={selectedTickets}\n      onSelectionChange={values => onSelectionChange?.(values as number[])}\n      columns={TicketTableColumns}\n      data={query.data?.pagination.data || []}\n      renderRowAs={TicketTableRow}\n      onAction={ticket => navigate(getTicketPageLink(ticket, {tagId}))}\n      sortDescriptor={sortDescriptor}\n      onSortChange={onSortChange}\n    />\n  );\n}\n\nfunction TicketTableRow({\n  children,\n  item,\n  className,\n  ...domProps\n}: RowElementProps<Ticket>) {\n  return (\n    <div\n      className={clsx(\n        className,\n        item.status === 'open' && 'font-semibold',\n        item.closed_at && 'bg-alt',\n      )}\n      {...domProps}\n    >\n      {children}\n    </div>\n  );\n}\n","import {User} from '@common/auth/user';\r\nimport {Tag} from '@common/tags/tag';\r\nimport {Reply} from '@app/agent/reply';\r\nimport {Category} from '@app/help-center/categories/category';\r\n\r\nexport const AGENT_PERMISSION = 'tickets.update';\r\nexport const TICKET_MODEL_TYPE = 'ticket';\r\n\r\nexport interface TicketTag extends Tag {\r\n  categories: Category[];\r\n  ticket_request_type?: any;\r\n  support_expired?: boolean;\r\n}\r\n\r\nexport interface Ticket {\r\n  id: number;\r\n  subject: string;\r\n  user_id: number;\r\n  closed_at?: string;\r\n  closed_by?: number;\r\n  status: string;\r\n  assigned_to?: number;\r\n  created_at?: string;\r\n  updated_at?: string;\r\n  ticket_request_type: number;\r\n  updated_at_formatted: string;\r\n  user?: User;\r\n  assignee?: User;\r\n  tags?: TicketTag[];\r\n  categories?: Tag[];\r\n  replies?: Reply[];\r\n  replies_count?: number;\r\n  latest_replies?: Reply[];\r\n  latest_reply?: Reply;\r\n  notes?: Reply[];\r\n  animated?: boolean;\r\n  model_type: typeof TICKET_MODEL_TYPE;\r\n}\r\n","import {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {PaginatedBackendResponse} from '@common/http/backend-response/pagination-response';\nimport {User} from '@common/auth/user';\nimport {AGENT_PERMISSION} from '@app/agent/ticket';\n\nexport function useAgents() {\n  return useQuery({\n    queryKey: ['users', 'agents'],\n    queryFn: () => fetchAgents(),\n  });\n}\n\nfunction fetchAgents() {\n  return apiClient\n    .get<PaginatedBackendResponse<User>>('users', {\n      params: {\n        permission: AGENT_PERMISSION,\n        perPage: 20,\n      },\n    })\n    .then(response => response.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\n\ninterface Payload {\n  ticketIds: (number | string)[];\n  userId: number | string;\n}\n\nexport function useAssignTicketsToAgent() {\n  return useMutation({\n    mutationFn: (payload: Payload) => assignTickets(payload),\n    onSuccess: async () => {\n      await Promise.allSettled([\n        queryClient.invalidateQueries({queryKey: ['mailbox', 'sidenav-tags']}),\n        queryClient.invalidateQueries({queryKey: ['tickets']}),\n      ]);\n      toast(message('Tickets reassigned'));\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction assignTickets(payload: Payload) {\n  return apiClient\n    .post<BackendResponse>(`tickets/assign`, payload)\n    .then(r => r.data);\n}\n","import React, {forwardRef, ReactElement} from 'react';\nimport {ButtonColor} from '@common/ui/buttons/get-shared-button-style';\nimport {Button, ButtonProps} from '@common/ui/buttons/button';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\n\ninterface Props {\n  startIcon: ReactElement;\n  endIcon?: ReactElement;\n  children: ReactElement<MessageDescriptor>;\n  color?: ButtonColor;\n  isCompact?: boolean;\n  disabled?: boolean;\n  elementType?: ButtonProps['elementType'];\n  to?: ButtonProps['to'];\n}\nexport const TicketActionButton = forwardRef<HTMLButtonElement, Props>(\n  (\n    {startIcon, endIcon, children, color, isCompact = false, ...buttonProps},\n    ref\n  ) => {\n    if (isCompact) {\n      return (\n        <Tooltip label={children} ref={ref}>\n          <IconButton color={color} iconSize=\"md\" size=\"sm\" {...buttonProps}>\n            {startIcon}\n          </IconButton>\n        </Tooltip>\n      );\n    }\n    return (\n      <Button\n        startIcon={startIcon}\n        endIcon={endIcon}\n        variant=\"outline\"\n        color={color}\n        size=\"xs\"\n        ref={ref}\n        {...buttonProps}\n      >\n        {children}\n      </Button>\n    );\n  }\n);\n","import {createSvgIcon} from '@common/icons/create-svg-icon';\nimport React from 'react';\n\nexport const AssignTicketIcon = createSvgIcon(\n  <path d=\"M 16 5 C 12.145852 5 9 8.1458513 9 12 C 9 14.408843 10.23116 16.55212 12.09375 17.8125 C 8.5266131 19.342333 6 22.881262 6 27 L 8 27 C 8 24.109626 9.5263067 21.592958 11.8125 20.1875 C 12.483006 21.834363 14.120749 23 16 23 C 17.879251 23 19.516994 21.834363 20.1875 20.1875 C 22.473693 21.592958 24 24.109626 24 27 L 26 27 C 26 22.881262 23.473387 19.342333 19.90625 17.8125 C 21.76884 16.55212 23 14.408843 23 12 C 23 8.1458513 19.854148 5 16 5 z M 16 7 C 18.773268 7 21 9.2267317 21 12 C 21 14.773268 18.773268 17 16 17 C 13.226732 17 11 14.773268 11 12 C 11 9.2267317 13.226732 7 16 7 z M 16 19 C 16.81989 19 17.600009 19.116459 18.34375 19.34375 C 17.997935 20.307297 17.090648 21 16 21 C 14.909352 21 14.002065 20.307297 13.65625 19.34375 C 14.399991 19.116459 15.18011 19 16 19 z\" />,\n  '',\n  '0 0 32 32'\n);\n","import {useAgents} from '@app/agent/ticket-actions/requests/use-agents';\nimport {useAssignTicketsToAgent} from '@app/agent/ticket-actions/requests/use-assign-tickets-to-aggent';\nimport {Menu, MenuTrigger} from '@common/ui/navigation/menu/menu-trigger';\nimport {KeyboardArrowDownIcon} from '@common/icons/material/KeyboardArrowDown';\nimport {Trans} from '@common/i18n/trans';\nimport {Item} from '@common/ui/forms/listbox/item';\nimport {UserAvatar} from '@common/ui/images/user-avatar';\nimport React, {useState} from 'react';\nimport {TicketActionButton} from '@app/agent/ticket-actions/ticket-action-button';\nimport {AssignTicketIcon} from '@app/agent/ticket-actions/icons/assign-ticket-icon';\nimport {useKeybind} from '@common/utils/keybinds/use-keybind';\n\ninterface Props {\n  ticketIds: number[];\n  onSuccess?: () => void;\n  isCompact?: boolean;\n}\nexport function AssignTicketsButton({ticketIds, onSuccess, isCompact}: Props) {\n  const {data} = useAgents();\n  const assignTickets = useAssignTicketsToAgent();\n  const [isOpen, setIsOpen] = useState(false);\n  useKeybind('window', 'a', () => setIsOpen(true));\n\n  return (\n    <MenuTrigger\n      isOpen={isOpen}\n      onOpenChange={setIsOpen}\n      onItemSelected={userId =>\n        assignTickets.mutate({ticketIds, userId}, {onSuccess})\n      }\n    >\n      <TicketActionButton\n        isCompact={isCompact}\n        startIcon={<AssignTicketIcon />}\n        endIcon={<KeyboardArrowDownIcon />}\n        disabled={assignTickets.isPending}\n      >\n        <Trans message=\"Assign (a)\" />\n      </TicketActionButton>\n      <Menu>\n        {data?.pagination.data.map(user => (\n          <Item\n            key={user.id}\n            value={user.id}\n            startIcon={<UserAvatar user={user} size=\"sm\" />}\n          >\n            {user.display_name}\n          </Item>\n        ))}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {Tag} from '@common/tags/tag';\n\nexport interface MailboxTag extends Tag {\n  tickets_count: number;\n}\n\nexport interface GetMailboxSidenavTags extends BackendResponse {\n  viewTags: MailboxTag[];\n  categoryTags: MailboxTag[];\n  statusTags: MailboxTag[];\n}\n\nexport function useMailboxSidenavTags() {\n  return useQuery({\n    queryKey: ['mailbox', 'sidenav-tags'],\n    queryFn: () => fetchTags(),\n  });\n}\n\nfunction fetchTags() {\n  return apiClient\n    .get<GetMailboxSidenavTags>('tags/agent-mailbox')\n    .then(response => response.data);\n}\n","import {createSvgIcon} from '@common/icons/create-svg-icon';\n\nexport const ChangeStatusIcon = createSvgIcon(\n  <path d=\"M 5 5 L 5 6 L 5 29 L 7 29 L 7 19 L 15 19 L 15 21 L 15 22 L 16 22 L 26 22 L 27 22 L 27 21 L 27 9 L 27 8 L 26 8 L 17 8 L 17 6 L 17 5 L 16 5 L 6 5 L 5 5 z M 7 7 L 15 7 L 15 8 L 15 9 L 15 17 L 7 17 L 7 7 z M 17 10 L 25 10 L 25 20 L 17 20 L 17 19 L 17 18 L 17 10 z\" />,\n  '',\n  '0 0 32 32'\n);\n","import {useMailboxSidenavTags} from '@app/agent/use-mailbox-sidenav-tags';\nimport {useChangeTicketStatus} from '@app/agent/ticket-actions/requests/use-change-ticket-status';\nimport {Menu, MenuTrigger} from '@common/ui/navigation/menu/menu-trigger';\nimport {TicketActionButton} from '@app/agent/ticket-actions/ticket-action-button';\nimport {KeyboardArrowDownIcon} from '@common/icons/material/KeyboardArrowDown';\nimport {Trans} from '@common/i18n/trans';\nimport {Item} from '@common/ui/forms/listbox/item';\nimport React, {useState} from 'react';\nimport {ChangeStatusIcon} from '@app/agent/ticket-actions/icons/change-status-icon';\nimport {useKeybind} from '@common/utils/keybinds/use-keybind';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\n\ninterface Props {\n  ticketIds: number[];\n  onSuccess?: () => void;\n  isCompact?: boolean;\n}\nexport function ChangeTicketStatusButton({\n  ticketIds,\n  onSuccess,\n  isCompact,\n}: Props) {\n  const {data} = useMailboxSidenavTags();\n  const changeStatus = useChangeTicketStatus();\n  const [isOpen, setIsOpen] = useState(false);\n  useKeybind('window', 's', () => setIsOpen(true));\n\n  return (\n    <MenuTrigger\n      isOpen={isOpen}\n      onOpenChange={setIsOpen}\n      onItemSelected={newStatus =>\n        changeStatus.mutate(\n          {ids: ticketIds, status: newStatus as string},\n          {\n            onSuccess: () => {\n              onSuccess?.();\n              toast(message('Status changed'));\n            },\n          },\n        )\n      }\n    >\n      <TicketActionButton\n        isCompact={isCompact}\n        startIcon={<ChangeStatusIcon />}\n        endIcon={<KeyboardArrowDownIcon />}\n        disabled={changeStatus.isPending}\n      >\n        <Trans message=\"Change status (s)\" />\n      </TicketActionButton>\n      <Menu>\n        {data?.statusTags.map(tag => (\n          <Item key={tag.id} value={tag.name} capitalizeFirst>\n            {tag.display_name || tag.name}\n          </Item>\n        ))}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {TicketTag} from '@app/agent/ticket';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\n\ninterface Response extends BackendResponse {\n  tag: TicketTag;\n}\n\ninterface Payload {\n  tagName: string;\n  ticketIds: number[];\n}\n\nexport function useAddTagToTickets() {\n  return useMutation({\n    mutationFn: (payload: Payload) => addTag(payload),\n    onSuccess: async () => {\n      queryClient.invalidateQueries({queryKey: ['mailbox', 'sidenav-tags']});\n      await queryClient.invalidateQueries({queryKey: ['tickets']});\n      toast(message('Tag added'));\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction addTag(payload: Payload): Promise<Response> {\n  return apiClient.post(`tickets/tags/add`, payload).then(r => r.data);\n}\n","import {createSvgIcon} from '@common/icons/create-svg-icon';\n\nexport const AddTagIcon = createSvgIcon(\n  <path d=\"M 16 5 L 15.6875 5.28125 L 4.28125 16.8125 L 3.59375 17.5 L 4.28125 18.21875 L 13.78125 27.71875 L 14.5 28.40625 L 15.1875 27.71875 L 16.40625 26.5 C 17.46025 29.688126 20.466215 32 24 32 C 28.406433 32 32 28.406433 32 24 C 32 20.501976 29.731898 17.519896 26.59375 16.4375 L 26.71875 16.3125 L 27 16 L 27 15.59375 L 27 6 L 27 5 L 26 5 L 16.40625 5 L 16 5 z M 16.84375 7 L 25 7 L 25 15.15625 L 24.15625 16 C 24.103605 15.99897 24.052884 16 24 16 C 19.593567 16 16 19.593567 16 24 C 16 24.03173 15.999628 24.062105 16 24.09375 L 14.5 25.59375 L 6.40625 17.5 L 16.84375 7 z M 22 9 C 21.447715 9 21 9.4477153 21 10 C 21 10.552285 21.447715 11 22 11 C 22.552285 11 23 10.552285 23 10 C 23 9.4477153 22.552285 9 22 9 z M 24 18 C 27.325553 18 30 20.674447 30 24 C 30 27.325553 27.325553 30 24 30 C 20.674447 30 18 27.325553 18 24 C 18 20.674447 20.674447 18 24 18 z M 23 20 L 23 23 L 20 23 L 20 25 L 23 25 L 23 28 L 25 28 L 25 25 L 28 25 L 28 23 L 25 23 L 25 20 L 23 20 z\" />,\n  '',\n  '0 0 32 32'\n);\n","import {Button} from '@common/ui/buttons/button';\nimport {Trans} from '@common/i18n/trans';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport React, {useState} from 'react';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {useTags} from '@common/tags/use-tags';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {ComboBox} from '@common/ui/forms/combobox/combobox';\nimport {message} from '@common/i18n/message';\nimport {Item} from '@common/ui/forms/listbox/item';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {useAddTagToTickets} from '@app/agent/ticket-actions/requests/use-add-tag-to-tickets';\nimport {TicketActionButton} from '@app/agent/ticket-actions/ticket-action-button';\nimport {AddTagIcon} from '@app/agent/ticket-actions/icons/add-tag-icon';\nimport {useKeybind} from '@common/utils/keybinds/use-keybind';\n\ninterface Props {\n  ticketIds: number[];\n  onSuccess?: () => void;\n  isCompact?: boolean;\n}\nexport function AddTagToTicketsButton({\n  ticketIds,\n  onSuccess,\n  isCompact,\n}: Props) {\n  const addTag = useAddTagToTickets();\n  const [isOpen, setIsOpen] = useState(false);\n  useKeybind('window', 't', () => setIsOpen(true));\n\n  return (\n    <DialogTrigger\n      isOpen={isOpen}\n      onOpenChange={setIsOpen}\n      type=\"popover\"\n      onClose={tagName => {\n        if (tagName) {\n          addTag.mutate({tagName, ticketIds}, {onSuccess});\n        }\n      }}\n    >\n      <TicketActionButton\n        startIcon={<AddTagIcon />}\n        isCompact={isCompact}\n        disabled={addTag.isPending}\n      >\n        <Trans message=\"Add tag (t)\" />\n      </TicketActionButton>\n      <AddTagDialog />\n    </DialogTrigger>\n  );\n}\n\nfunction AddTagDialog() {\n  const {trans} = useTrans();\n  const [query, setQuery] = useState('');\n  const [selectedTag, setSelectedTag] = useState<string>('');\n  const {data, isFetching} = useTags({query, perPage: 8, notType: 'status'});\n  const {close, formId} = useDialogContext();\n\n  return (\n    <Dialog size=\"sm\">\n      <DialogHeader>\n        <Trans message=\"Add tag\" />\n      </DialogHeader>\n      <DialogBody>\n        <form\n          id={formId}\n          onSubmit={e => {\n            e.preventDefault();\n            close(selectedTag);\n          }}\n        >\n          <ComboBox\n            isAsync\n            isLoading={isFetching}\n            inputValue={query}\n            onInputValueChange={setQuery}\n            selectedValue={selectedTag}\n            onSelectionChange={value => setSelectedTag(value as string)}\n            selectionMode=\"single\"\n            placeholder={trans(message('Enter tag name...'))}\n            allowCustomValue\n            autoFocus\n          >\n            {data?.pagination.data.map(result => (\n              <Item\n                key={result.id}\n                value={result.name}\n                textLabel={result.name}\n                capitalizeFirst\n                className=\"rounded\"\n              >\n                {result.display_name || result.name}\n              </Item>\n            ))}\n          </ComboBox>\n        </form>\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button variant=\"flat\" color=\"primary\" type=\"submit\" form={formId}>\n          <Trans message=\"Add\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\n\ninterface Payload {\n  ids: (number | string)[];\n}\n\nexport function useDeleteTickets() {\n  return useMutation({\n    mutationFn: (payload: Payload) => deleteTickets(payload),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({queryKey: ['tickets']});\n      toast(message('Tickets deleted'));\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction deleteTickets({ids}: Payload) {\n  return apiClient\n    .delete<BackendResponse>(`tickets/${ids.join(',')}`)\n    .then(r => r.data);\n}\n","import {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {TicketActionButton} from '@app/agent/ticket-actions/ticket-action-button';\nimport {DeleteIcon} from '@common/icons/material/Delete';\nimport {Trans} from '@common/i18n/trans';\nimport React, {useState} from 'react';\nimport {useDeleteTickets} from '@app/agent/ticket-actions/requests/use-delete-tickets';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {ConfirmationDialog} from '@common/ui/overlays/dialog/confirmation-dialog';\nimport {useKeybind} from '@common/utils/keybinds/use-keybind';\n\ninterface Props {\n  ticketIds: number[];\n  onSuccess?: () => void;\n  isCompact?: boolean;\n}\nexport function DeleteTicketsButton({ticketIds, onSuccess, isCompact}: Props) {\n  const [isOpen, setIsOpen] = useState(false);\n  useKeybind('window', 'd', () => setIsOpen(true));\n\n  return (\n    <DialogTrigger type=\"modal\" isOpen={isOpen} onOpenChange={setIsOpen}>\n      <TicketActionButton\n        startIcon={<DeleteIcon />}\n        color=\"danger\"\n        isCompact={isCompact}\n      >\n        <Trans message=\"Delete (d)\" />\n      </TicketActionButton>\n      <DeleteTicketsDialog ticketIds={ticketIds} onDeleted={onSuccess} />\n    </DialogTrigger>\n  );\n}\n\ninterface DeleteTicketsButtonProps {\n  ticketIds: number[];\n  onDeleted?: () => void;\n}\nfunction DeleteTicketsDialog({ticketIds, onDeleted}: DeleteTicketsButtonProps) {\n  const deleteTickets = useDeleteTickets();\n  const {close} = useDialogContext();\n  return (\n    <ConfirmationDialog\n      isDanger\n      isLoading={deleteTickets.isPending}\n      onConfirm={() => {\n        deleteTickets.mutate(\n          {ids: ticketIds},\n          {\n            onSuccess: () => {\n              close();\n              onDeleted?.();\n            },\n          },\n        );\n      }}\n      title={<Trans message=\"Delete tickets\" />}\n      body={\n        <Trans message=\"Are you sure you want to delete selected tickets?\" />\n      }\n      confirm={<Trans message=\"delete\" />}\n    />\n  );\n}\n","import React, {useRef} from 'react';\nimport {m} from 'framer-motion';\nimport {AssignTicketsButton} from '@app/agent/ticket-actions/assign-tickets-button';\nimport {ChangeTicketStatusButton} from '@app/agent/ticket-actions/change-ticket-status-button';\nimport {AddTagToTicketsButton} from '@app/agent/ticket-actions/add-tag-to-tickets-button';\nimport {DeleteTicketsButton} from '@app/agent/ticket-actions/delete-tickets-button';\nimport {useAutoFocus} from '@common/ui/focus/use-auto-focus';\n\ninterface Props {\n  ticketIds: number[];\n  onActionCompleted: () => void;\n}\nexport function TicketTableActions({ticketIds, onActionCompleted}: Props) {\n  const ref = useRef<HTMLDivElement>(null);\n  useAutoFocus({autoFocus: true}, ref);\n  return (\n    <m.div\n      ref={ref}\n      initial={{y: -30, opacity: 1}}\n      animate={{y: 0, opacity: 1}}\n      exit={{y: 30, opacity: 0}}\n      tabIndex={-1}\n      role=\"menu\"\n      className=\"fixed left-0 right-0 top-120 mx-auto flex w-max items-center justify-center gap-12 rounded border bg p-14 shadow-lg outline-none focus-visible:ring-2\"\n    >\n      <AssignTicketsButton\n        ticketIds={ticketIds}\n        onSuccess={onActionCompleted}\n      />\n      <ChangeTicketStatusButton\n        ticketIds={ticketIds}\n        onSuccess={onActionCompleted}\n      />\n      <AddTagToTicketsButton\n        ticketIds={ticketIds}\n        onSuccess={onActionCompleted}\n      />\n      <DeleteTicketsButton\n        ticketIds={ticketIds}\n        onSuccess={onActionCompleted}\n      />\n    </m.div>\n  );\n}\n","import {useTickets} from '@app/agent/agent-ticket-page/user-details-sidebar/requests/use-tickets';\nimport {Trans} from '@common/i18n/trans';\nimport React, {Fragment, useMemo, useState} from 'react';\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {SvgImage} from '@common/ui/images/svg-image/svg-image';\nimport openedImage from './opened.svg';\nimport {\n  useMailboxParams,\n  useNavigateToMailboxTicketTable,\n} from '@app/agent/use-mailbox-params';\nimport {TicketTableFooter} from '@app/agent/agent-ticket-list-page/ticket-table/ticket-table-footer';\nimport {TicketTable} from '@app/agent/agent-ticket-list-page/ticket-table/ticket-table';\nimport {GlobalLoadingProgress} from '@app/agent/global-loading-progress';\nimport {TicketTableActions} from '@app/agent/agent-ticket-list-page/ticket-table/ticket-table-actions';\nimport {AnimatePresence} from 'framer-motion';\nimport {SortDescriptor} from '@common/ui/tables/types/sort-descriptor';\nimport {useSearchParams} from 'react-router-dom';\n\nexport function TicketTablePage() {\n  const [searchParams] = useSearchParams();\n  const orderBy = searchParams.get('orderBy') || '';\n  const orderDir = searchParams.get('orderDir') || '';\n  const sortDescriptor = useMemo(() => {\n    return {orderBy, orderDir: orderDir as SortDescriptor['orderDir']};\n  }, [orderBy, orderDir]);\n  const query = useTickets({\n    ...useMailboxParams(),\n    loader: 'ticketTable',\n  });\n  const {data, isLoading, isPlaceholderData} = query;\n  const items = data?.pagination.data || [];\n  const isEmpty = !isLoading && !isPlaceholderData && items.length === 0;\n  const navigateToTicketTable = useNavigateToMailboxTicketTable();\n  const [selectedTickets, setSelectedTickets] = useState<number[]>([]);\n\n  return (\n    <Fragment>\n      <GlobalLoadingProgress query={query} />\n      <div className=\"flex min-h-full min-w-0 flex-col\">\n        <div className=\"flex-auto\">\n          <TicketTable\n            query={query}\n            selectedTickets={selectedTickets}\n            onSelectionChange={setSelectedTickets}\n            sortDescriptor={sortDescriptor}\n            onSortChange={value => {\n              navigateToTicketTable({\n                orderBy: value.orderBy,\n                orderDir: value.orderDir,\n              });\n            }}\n          />\n          {isEmpty && (\n            <IllustratedMessage\n              className=\"mt-40\"\n              size=\"sm\"\n              image={<SvgImage src={openedImage} />}\n              title={\n                <Trans message=\"There are no tickets in this category yet.\" />\n              }\n            />\n          )}\n        </div>\n        <TicketTableFooter\n          query={query}\n          onPageChange={page => navigateToTicketTable({page})}\n          onPerPageChange={perPage => navigateToTicketTable({perPage})}\n        />\n        <AnimatePresence>\n          {selectedTickets.length && (\n            <TicketTableActions\n              ticketIds={selectedTickets}\n              onActionCompleted={() => setSelectedTickets([])}\n            />\n          )}\n        </AnimatePresence>\n      </div>\n    </Fragment>\n  );\n}\n","import {SearchTriggerButton} from '@app/help-center/search/search-trigger-button';\nimport {Trans} from '@common/i18n/trans';\nimport React, {JSXElementConstructor, useCallback} from 'react';\nimport {NavbarProps} from '@common/ui/navigation/navbar/navbar';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\n\ninterface Props {\n  element: JSXElementConstructor<NavbarProps>;\n  onOpenSearchPage?: () => void;\n}\nexport function AgentNavbar({element, onOpenSearchPage}: Props) {\n  const navigate = useNavigate();\n  const defaultOpenSearchPage = useCallback(() => {\n    navigate('/agent/search');\n  }, [navigate]);\n\n  const Element = element;\n  return (\n    <Element menuPosition=\"agent-mailbox\" color=\"bg\" size=\"md\">\n      <SearchTriggerButton\n        size=\"sm\"\n        width=\"w-320\"\n        onTrigger={onOpenSearchPage || defaultOpenSearchPage}\n      >\n        <Trans message=\"Search\" />\n      </SearchTriggerButton>\n    </Element>\n  );\n}\n","import {\n  MailboxTag,\n  useMailboxSidenavTags,\n} from '@app/agent/use-mailbox-sidenav-tags';\nimport {Trans} from '@common/i18n/trans';\nimport {Fragment, ReactNode} from 'react';\nimport {InboxIcon} from '@common/icons/material/Inbox';\nimport {NavLink} from 'react-router-dom';\nimport {FolderIcon} from '@common/icons/material/Folder';\nimport {Skeleton} from '@common/ui/skeleton/skeleton';\nimport {AnimatePresence, m} from 'framer-motion';\nimport clsx from 'clsx';\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\nimport {useMailboxParams} from '@app/agent/use-mailbox-params';\nimport {Menu, MenuTrigger} from '@common/ui/navigation/menu/menu-trigger';\nimport {Button} from '@common/ui/buttons/button';\nimport {Item} from '@common/ui/forms/listbox/item';\nimport {SettingsIcon} from '@common/icons/material/Settings';\nimport {KeyboardArrowUpIcon} from '@common/icons/material/KeyboardArrowUp';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\n\nexport function AgentTicketListSidenav() {\n  const navigate = useNavigate();\n  return (\n    <aside className=\"compact-scrollbar flex w-full flex-col gap-24 overflow-y-auto border-r text-muted\">\n      <div className=\"flex-auto\">\n        <Heading icon={<InboxIcon />}>\n          <Trans message=\"Inbox\" />\n        </Heading>\n        <TagList type=\"viewTags\" />\n        <Heading icon={<FolderIcon />}>\n          <Trans message=\"Folders\" />\n        </Heading>\n        <TagList type=\"categoryTags\" />\n      </div>\n      <div className=\"mt-auto p-14\">\n        <MenuTrigger placement=\"top\">\n          <Button\n            className=\"min-h-34 w-full\"\n            variant=\"outline\"\n            startIcon={<SettingsIcon />}\n            endIcon={<KeyboardArrowUpIcon />}\n            size=\"xs\"\n          >\n            <Trans message=\"Settings\" />\n          </Button>\n          <Menu>\n            <Item\n              value=\"saved-replies\"\n              onSelected={() => navigate('/agent/saved-replies')}\n            >\n              <Trans message=\"Saved replies\" />\n            </Item>\n            <Item\n              value=\"new-ticket\"\n              onSelected={() => navigate('/agent/tickets/new')}\n            >\n              <Trans message=\"New ticket\" />\n            </Item>\n            <Item\n              value=\"notifications\"\n              onSelected={() => navigate('/notifications/settings')}\n            >\n              <Trans message=\"Notifications\" />\n            </Item>\n          </Menu>\n        </MenuTrigger>\n      </div>\n    </aside>\n  );\n}\n\ninterface HeadingProps {\n  icon: ReactNode;\n  children: ReactNode;\n}\nfunction Heading({icon, children}: HeadingProps) {\n  return (\n    <div className=\"mb-14 flex items-center gap-8 px-14 pt-20\">\n      {icon}\n      <div className=\"text-sm font-semibold uppercase\">{children}</div>\n    </div>\n  );\n}\n\nconst listItemClassName =\n  'flex h-40 items-center justify-between gap-8 pl-38 pr-8 mx-8 rounded-lg';\n\ninterface TagListProps {\n  type: 'viewTags' | 'categoryTags';\n}\nfunction TagList({type}: TagListProps) {\n  const {data, isLoading} = useMailboxSidenavTags();\n  const tags = data?.[type];\n\n  const skeletons = (\n    <m.div key=\"skeletons\" {...opacityAnimation}>\n      {[...Array(4)].map((_, index) => (\n        <div\n          key={index}\n          className={clsx(listItemClassName, 'max-w-172 border-l-transparent')}\n        >\n          <Skeleton variant=\"text\" />\n        </div>\n      ))}\n    </m.div>\n  );\n\n  return (\n    <AnimatePresence initial={false} mode=\"wait\">\n      {isLoading ? (\n        skeletons\n      ) : (\n        <m.ul\n          className=\"cursor-pointer text-sm\"\n          key=\"tag-list\"\n          {...opacityAnimation}\n        >\n          {tags?.map(tag => <TagListItem tag={tag} key={tag.id} />)}\n        </m.ul>\n      )}\n    </AnimatePresence>\n  );\n}\n\ninterface TagListItemProps {\n  tag: MailboxTag;\n}\nfunction TagListItem({tag}: TagListItemProps) {\n  const isActive = `${tag.id}` === useMailboxParams().tagId;\n  return (\n    <li key={tag.id}>\n      <NavLink\n        className={clsx(\n          listItemClassName,\n          isActive\n            ? 'border-l-primary bg-primary/6 hover:bg-primary/10'\n            : 'border-l-transparent hover:bg-hover',\n        )}\n        to={`/agent/tickets?tagId=${tag.id}`}\n        end={true}\n      >\n        {' '}\n        <Fragment>\n          <Trans message={tag.display_name || tag.name} />\n          {tag.tickets_count ? (\n            <div\n              className={clsx(\n                'flex h-18 w-30 items-center justify-center rounded-full text-[11px] font-semibold',\n                isActive && 'bg-primary text-on-primary',\n              )}\n            >\n              {tag.tickets_count}\n            </div>\n          ) : null}\n        </Fragment>\n      </NavLink>\n    </li>\n  );\n}\n","import {DashboardLayout} from '@common/ui/layout/dashboard-layout';\nimport {AgentNavbar} from '@app/agent/agent-navbar';\nimport {DashboardNavbar} from '@common/ui/layout/dashboard-navbar';\nimport {\n  DashboardSidenav,\n  SidenavProps,\n} from '@common/ui/layout/dashboard-sidenav';\nimport {DashboardContent} from '@common/ui/layout/dashboard-content';\nimport React, {ReactElement} from 'react';\nimport {AgentTicketListSidenav} from '@app/agent/agent-ticket-list-page/agent-ticket-list-sidenav';\n\ninterface Props {\n  children: ReactElement;\n  rightSidenav?: ReactElement<SidenavProps>;\n}\nexport function AgentPageLayout({children, rightSidenav}: Props) {\n  return (\n    <DashboardLayout name=\"mailbox\">\n      <AgentNavbar element={DashboardNavbar} />\n      <DashboardSidenav position=\"left\" className=\"bg-alt\">\n        <AgentTicketListSidenav />\n      </DashboardSidenav>\n      <DashboardContent>\n        <main>{children}</main>\n      </DashboardContent>\n      {rightSidenav}\n    </DashboardLayout>\n  );\n}\n","import React from 'react';\nimport {TicketTablePage} from '@app/agent/agent-ticket-list-page/ticket-table/ticket-table-page';\nimport {AgentPageLayout} from '@app/agent/agent-page-layout';\n\nexport function AgentTicketListPage() {\n  return (\n    <AgentPageLayout>\n      <TicketTablePage />\n    </AgentPageLayout>\n  );\n}\n","import{useRef as r,useEffect as n,useMemo as t,useCallback as u,useState as e}from\"react\";function c(u,e,c){var i=this,a=r(null),o=r(0),f=r(null),l=r([]),m=r(),v=r(),d=r(u),p=r(!0);n(function(){d.current=u},[u]);var g=!e&&0!==e&&\"undefined\"!=typeof window;if(\"function\"!=typeof u)throw new TypeError(\"Expected a function\");e=+e||0;var w=!!(c=c||{}).leading,s=!(\"trailing\"in c)||!!c.trailing,x=\"maxWait\"in c,y=x?Math.max(+c.maxWait||0,e):null;n(function(){return p.current=!0,function(){p.current=!1}},[]);var h=t(function(){var r=function(r){var n=l.current,t=m.current;return l.current=m.current=null,o.current=r,v.current=d.current.apply(t,n)},n=function(r,n){g&&cancelAnimationFrame(f.current),f.current=g?requestAnimationFrame(r):setTimeout(r,n)},t=function(r){if(!p.current)return!1;var n=r-a.current;return!a.current||n>=e||n<0||x&&r-o.current>=y},u=function(n){return f.current=null,s&&l.current?r(n):(l.current=m.current=null,v.current)},c=function r(){var c=Date.now();if(t(c))return u(c);if(p.current){var i=e-(c-a.current),f=x?Math.min(i,y-(c-o.current)):i;n(r,f)}},h=function(){var u=Date.now(),d=t(u);if(l.current=[].slice.call(arguments),m.current=i,a.current=u,d){if(!f.current&&p.current)return o.current=a.current,n(c,e),w?r(a.current):v.current;if(x)return n(c,e),r(a.current)}return f.current||n(c,e),v.current};return h.cancel=function(){f.current&&(g?cancelAnimationFrame(f.current):clearTimeout(f.current)),o.current=0,l.current=a.current=m.current=f.current=null},h.isPending=function(){return!!f.current},h.flush=function(){return f.current?u(Date.now()):v.current},h},[w,x,e,y,s,g]);return h}function i(r,n){return r===n}function a(r){return\"function\"==typeof r?function(){return r}:r}function o(n,t,o){var f,l,m=o&&o.equalityFn||i,v=(f=e(a(n)),l=f[1],[f[0],u(function(r){return l(a(r))},[])]),d=v[0],p=v[1],g=c(u(function(r){return p(r)},[p]),t,o),w=r(n);return m(w.current,n)||(g(n),w.current=n),[d,g]}function f(r,n,t){var u=void 0===t?{}:t,e=u.leading,i=u.trailing;return c(r,n,{maxWait:n,leading:void 0===e||e,trailing:void 0===i||i})}export{o as useDebounce,c as useDebouncedCallback,f as useThrottledCallback};\n//# sourceMappingURL=index.module.js.map\n","import {\n  BackendFilter,\n  FilterControlType,\n  FilterOperator,\n} from '@common/datatable/filters/backend-filter';\nimport {message} from '@common/i18n/message';\nimport {\n  createdAtFilter,\n  timestampFilter,\n  updatedAtFilter,\n} from '@common/datatable/filters/timestamp-filters';\nimport {useMailboxSidenavTags} from '@app/agent/use-mailbox-sidenav-tags';\nimport {useMemo} from 'react';\nimport {USER_MODEL} from '@common/auth/user';\n\nexport function useSearchTicketsFilters(): BackendFilter[] | null {\n  const {data} = useMailboxSidenavTags();\n\n  return useMemo(() => {\n    if (!data) return null;\n    return [\n      {\n        key: 'status',\n        label: message('Status'),\n        description: message('Ticket status'),\n        defaultOperator: FilterOperator.eq,\n        control: {\n          type: FilterControlType.Select,\n          defaultValue: '01',\n          options: data.statusTags.map(tag => ({\n            key: tag.id,\n            label: message(tag.display_name || tag.name),\n            value: tag.name,\n          })),\n        },\n      },\n      {\n        key: 'tag',\n        label: message('Folder'),\n        description: message('Folder ticket is assigned to'),\n        defaultOperator: FilterOperator.eq,\n        control: {\n          type: FilterControlType.Select,\n          defaultValue: '01',\n          options: data.categoryTags.map(tag => ({\n            key: tag.id,\n            label: message(tag.display_name || tag.name),\n            value: tag.name,\n          })),\n        },\n      },\n      createdAtFilter({\n        description: message('Date ticket was created'),\n      }),\n      updatedAtFilter({\n        description: message('Date ticket was last updated'),\n      }),\n      timestampFilter({\n        key: 'closed_at',\n        label: message('Closed at'),\n        description: message('Date ticket was closed'),\n      }),\n      {\n        key: 'user_id',\n        label: message('Customer'),\n        description: message('Customer that created the ticket'),\n        defaultOperator: FilterOperator.eq,\n        control: {\n          type: FilterControlType.SelectModel,\n          model: USER_MODEL,\n        },\n      },\n      {\n        key: 'assigned_to',\n        label: message('Assignee'),\n        description: message('Agent assigned to the ticket'),\n        defaultOperator: FilterOperator.eq,\n        control: {\n          type: FilterControlType.SelectModel,\n          model: USER_MODEL,\n        },\n      },\n    ];\n  }, [data]);\n}\n","import {useEffect} from 'react';\n\nexport function useStableScrollbar(disable: boolean = false) {\n  useEffect(() => {\n    if (disable) {\n      document.documentElement.classList.remove('stable-scrollbar');\n    } else {\n      document.documentElement.classList.add('stable-scrollbar');\n    }\n    return () => {\n      document.documentElement.classList.remove('stable-scrollbar');\n    };\n  }, [disable]);\n}\n","import {AgentNavbar} from '@app/agent/agent-navbar';\nimport React, {useCallback, useEffect, useRef, useState} from 'react';\nimport {Navbar} from '@common/ui/navigation/navbar/navbar';\nimport {Tabs} from '@common/ui/tabs/tabs';\nimport {Tab} from '@common/ui/tabs/tab';\nimport {Trans} from '@common/i18n/trans';\nimport {Link, Outlet, useLocation, useSearchParams} from 'react-router-dom';\nimport {TabList} from '@common/ui/tabs/tab-list';\nimport {message} from '@common/i18n/message';\nimport {TextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {SearchIcon} from '@common/icons/material/Search';\nimport {useDebouncedCallback} from 'use-debounce';\nimport {FilterList} from '@common/datatable/filters/filter-list/filter-list';\nimport {AddFilterButton} from '@common/datatable/filters/add-filter-button';\nimport {useSearchTicketsFilters} from '@app/agent/agent-search-page/search-tickets/use-search-tickets-filters';\nimport {useStableScrollbar} from '@common/utils/hooks/use-stable-scrollbar';\n\nconst PageTabs = [\n  {uri: 'tickets', label: message('Tickets'), key: 0},\n  {uri: 'users', label: message('Users'), key: 1},\n  {uri: 'articles', label: message('Articles'), key: 2},\n];\n\nexport function AgentSearchPage() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchParamsQuery = searchParams.get('query') || '';\n  const {pathname} = useLocation();\n  const tabName = pathname.split('/').pop();\n  const selectedTab = PageTabs.find(tab => tab.uri === tabName)?.key ?? 0;\n  const searchInputRef = useRef<HTMLInputElement>(null);\n  const [searchQuery, _setSearchQuery] = useState(searchParamsQuery);\n\n  useStableScrollbar();\n\n  useEffect(() => {\n    _setSearchQuery(searchParamsQuery);\n  }, [searchParamsQuery]);\n\n  const updateQueryParams = (value: string) => {\n    setSearchParams(prev => {\n      prev.delete('page');\n      prev.set('query', value);\n      return prev;\n    });\n  };\n  const debouncedUpdateQueryParams = useDebouncedCallback(value => {\n    updateQueryParams(value);\n  }, 400);\n\n  const setSearchQuery = (value: string) => {\n    _setSearchQuery(value);\n    debouncedUpdateQueryParams(value);\n  };\n\n  const focusSearchInput = useCallback(() => {\n    searchInputRef.current?.focus();\n  }, []);\n\n  const filters = useSearchTicketsFilters();\n  const showFilters = filters && selectedTab === 0;\n\n  return (\n    <div>\n      <AgentNavbar element={Navbar} onOpenSearchPage={focusSearchInput} />\n      <main className=\"container mx-auto p-14 md:p-24\">\n        <div className=\"mb-34 flex items-center gap-24 pt-6\">\n          <form\n            className=\"flex-auto\"\n            onSubmit={e => {\n              e.preventDefault();\n              updateQueryParams(searchQuery);\n            }}\n          >\n            <TextField\n              onBlur={() => updateQueryParams(searchQuery)}\n              inputRef={searchInputRef}\n              value={searchQuery}\n              onChange={e => {\n                setSearchQuery(e.target.value);\n              }}\n              startAdornment={<SearchIcon />}\n              autoFocus\n            />\n          </form>\n          {showFilters && (\n            <AddFilterButton className=\"min-h-42 min-w-42\" filters={filters} />\n          )}\n        </div>\n        {showFilters && <FilterList filters={filters} />}\n        <Tabs selectedTab={selectedTab}>\n          <TabList>\n            {PageTabs.map(tab => (\n              <Tab\n                key={tab.key}\n                width=\"min-w-132\"\n                elementType={Link}\n                to={`/agent/search/${tab.uri}?query=${searchQuery}`}\n                relative=\"path\"\n                replace\n              >\n                <Trans {...tab.label} />\n              </Tab>\n            ))}\n          </TabList>\n          <div className=\"pt-34\">\n            <Outlet />\n          </div>\n        </Tabs>\n      </main>\n    </div>\n  );\n}\n","import {keepPreviousData, useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {PaginatedBackendResponse} from '@common/http/backend-response/pagination-response';\nimport {PaginateTicketsParams} from '@app/agent/agent-ticket-page/user-details-sidebar/requests/use-tickets';\nimport {useSearchParams} from 'react-router-dom';\nimport {Ticket} from '@app/agent/ticket';\n\nexport interface PaginateTicketsResponse\n  extends PaginatedBackendResponse<Ticket> {}\n\nexport function useSearchTickets() {\n  const [searchParams] = useSearchParams();\n  const params = {\n    filters: searchParams.get('filters') ?? '',\n    query: searchParams.get('query') ?? '',\n    page: searchParams.get('page') ?? '1',\n    perPage: searchParams.get('perPage') ?? '20',\n  };\n  const enabled = !!params.query || !!params.filters;\n  return useQuery({\n    queryKey: ['tickets', 'search', params],\n    queryFn: () => fetchTickets(params),\n    placeholderData: enabled ? keepPreviousData : undefined,\n    enabled,\n  });\n}\n\nfunction fetchTickets(params: PaginateTicketsParams) {\n  return apiClient\n    .get<PaginateTicketsResponse>('search/tickets', {params})\n    .then(response => response.data);\n}\n","import React, {Fragment, ReactNode} from 'react';\nimport {GlobalLoadingProgress} from '@app/agent/global-loading-progress';\nimport {DataTableEmptyStateMessage} from '@common/datatable/page/data-table-emty-state-message';\nimport searchImage from '@app/agent/agent-search-page/search.svg';\nimport {Trans} from '@common/i18n/trans';\nimport {DataTablePaginationFooter} from '@common/datatable/data-table-pagination-footer';\nimport {UseQueryResult} from '@tanstack/react-query';\nimport {useSearchParams} from 'react-router-dom';\nimport {PaginatedBackendResponse} from '@common/http/backend-response/pagination-response';\n\ninterface Props {\n  query: UseQueryResult<PaginatedBackendResponse<unknown>>;\n  children: ReactNode;\n}\nexport function SearchTableLayout({query, children}: Props) {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const {data, fetchStatus, isLoading, isPlaceholderData} = query;\n  const items = data?.pagination.data || [];\n  const isEmpty =\n    (fetchStatus === 'idle' && items.length === 0) ||\n    (!isLoading && !isPlaceholderData && items.length === 0);\n\n  return (\n    <Fragment>\n      <GlobalLoadingProgress query={query} />\n      {children}\n      {isEmpty && (\n        <DataTableEmptyStateMessage\n          isFiltering={\n            !!searchParams.get('query') || !!searchParams.get('filters')\n          }\n          className=\"mt-48\"\n          image={searchImage}\n          title={\n            <Trans message=\"Enter your query or filters to start searching\" />\n          }\n          filteringTitle={\n            <Trans message=\"No results match your query or filters\" />\n          }\n        />\n      )}\n      <DataTablePaginationFooter\n        query={query}\n        onPageChange={page =>\n          setSearchParams(prev => {\n            prev.set('page', page.toString());\n            return prev;\n          })\n        }\n        onPerPageChange={perPage =>\n          setSearchParams(prev => {\n            prev.set('perPage', perPage.toString());\n            return prev;\n          })\n        }\n      />\n    </Fragment>\n  );\n}\n","import {useSearchTickets} from '@app/agent/agent-search-page/requests/use-search-tickets';\nimport {TicketTable} from '@app/agent/agent-ticket-list-page/ticket-table/ticket-table';\nimport React, {useState} from 'react';\nimport {SearchTableLayout} from '@app/agent/agent-search-page/search-table-layout';\nimport {AnimatePresence} from 'framer-motion';\nimport {TicketTableActions} from '@app/agent/agent-ticket-list-page/ticket-table/ticket-table-actions';\n\nexport function SearchTicketsTable() {\n  const query = useSearchTickets();\n  const [selectedTickets, setSelectedTickets] = useState<number[]>([]);\n  return (\n    <SearchTableLayout query={query}>\n      <TicketTable\n        query={query}\n        selectedTickets={selectedTickets}\n        onSelectionChange={setSelectedTickets}\n      />\n      <AnimatePresence>\n        {selectedTickets.length && (\n          <TicketTableActions\n            ticketIds={selectedTickets}\n            onActionCompleted={() => setSelectedTickets([])}\n          />\n        )}\n      </AnimatePresence>\n    </SearchTableLayout>\n  );\n}\n","import {keepPreviousData, useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {PaginatedBackendResponse} from '@common/http/backend-response/pagination-response';\nimport {PaginateTicketsParams} from '@app/agent/agent-ticket-page/user-details-sidebar/requests/use-tickets';\nimport {useSearchParams} from 'react-router-dom';\nimport {User} from '@common/auth/user';\n\nexport interface PaginateUsersResponse extends PaginatedBackendResponse<User> {}\n\nexport function useSearchUsers() {\n  const [searchParams] = useSearchParams();\n  const params = {\n    query: searchParams.get('query') ?? '',\n    page: searchParams.get('page') ?? '1',\n    perPage: searchParams.get('perPage') ?? '20',\n  };\n  return useQuery({\n    queryKey: ['users', 'search', params],\n    queryFn: () => fetchUsers(params),\n    placeholderData: keepPreviousData,\n    enabled: !!params.query,\n  });\n}\n\nfunction fetchUsers(params: PaginateTicketsParams) {\n  return apiClient\n    .get<PaginateUsersResponse>('search/users', {params})\n    .then(response => response.data);\n}\n","import {Trans} from '@common/i18n/trans';\nimport React from 'react';\nimport {useSearchUsers} from '@app/agent/agent-search-page/requests/use-search-users';\nimport {ColumnConfig} from '@common/datatable/column-config';\nimport {User} from '@common/auth/user';\nimport {NameWithAvatar} from '@common/datatable/column-templates/name-with-avatar';\nimport {ChipList} from '@common/ui/forms/input-field/chip-field/chip-list';\nimport {Chip} from '@common/ui/forms/input-field/chip-field/chip';\nimport {FormattedDate} from '@common/i18n/formatted-date';\nimport {Table} from '@common/ui/tables/table';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {SearchTableLayout} from '@app/agent/agent-search-page/search-table-layout';\n\nconst columnConfig: ColumnConfig<User>[] = [\n  {\n    key: 'name',\n    allowsSorting: true,\n    sortingKey: 'email',\n    width: 'flex-3 min-w-200',\n    visibleInMode: 'all',\n    header: () => <Trans message=\"User\" />,\n    body: user => (\n      <NameWithAvatar\n        image={user.avatar}\n        label={user.display_name}\n        description={user.email}\n      />\n    ),\n  },\n  {\n    key: 'roles',\n    header: () => <Trans message=\"Roles\" />,\n    body: user => (\n      <ChipList radius=\"rounded\" size=\"xs\">\n        {user.roles?.map(role => (\n          <Chip key={role.id} selectable className=\"capitalize\">\n            <Trans message={role.name} />\n          </Chip>\n        ))}\n      </ChipList>\n    ),\n  },\n  {\n    key: 'createdAt',\n    allowsSorting: true,\n    width: 'w-96',\n    header: () => <Trans message=\"Created at\" />,\n    body: user => (\n      <time>\n        <FormattedDate date={user.created_at} />\n      </time>\n    ),\n  },\n];\n\nexport function SearchUsersTable() {\n  const navigate = useNavigate();\n  const query = useSearchUsers();\n  return (\n    <SearchTableLayout query={query}>\n      <Table\n        headerCellHeight=\"h-36\"\n        cellHeight=\"h-64\"\n        columns={columnConfig}\n        data={query.data?.pagination.data || []}\n        enableSelection={false}\n        onAction={user => navigate(`/agent/users/${user.id}`)}\n      />\n    </SearchTableLayout>\n  );\n}\n","import {Trans} from '@common/i18n/trans';\nimport React from 'react';\nimport {useSearchParams} from 'react-router-dom';\nimport {ColumnConfig} from '@common/datatable/column-config';\nimport {FormattedDate} from '@common/i18n/formatted-date';\nimport {Table} from '@common/ui/tables/table';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {Article} from '@app/help-center/articles/article';\nimport {ArticleIcon} from '@common/icons/material/Article';\nimport {useSearchArticles} from '@app/help-center/search/use-search-articles';\nimport {getArticleLink} from '@app/help-center/articles/article-link';\nimport {ArticlePath} from '@app/help-center/articles/article-path';\nimport {SearchTableLayout} from '@app/agent/agent-search-page/search-table-layout';\n\nconst columnConfig: ColumnConfig<Article>[] = [\n  {\n    key: 'name',\n    width: 'flex-3 min-w-200',\n    visibleInMode: 'all',\n    header: () => <Trans message=\"Article\" />,\n    body: article => (\n      <div className=\"flex items-center gap-12\">\n        <ArticleIcon />\n        <div className=\"min-w-0 overflow-hidden\">\n          <div className=\"overflow-hidden overflow-ellipsis\">\n            {article.title}\n          </div>\n          <ArticlePath article={article} className=\"text-xs text-muted\" />\n        </div>\n      </div>\n    ),\n  },\n  {\n    key: 'updated_at',\n    allowsSorting: true,\n    width: 'w-96',\n    header: () => <Trans message=\"Last updated\" />,\n    body: user => (\n      <time>\n        <FormattedDate date={user.updated_at} />\n      </time>\n    ),\n  },\n];\n\nexport function SearchArticlesTable() {\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const query = useSearchArticles(\n    searchParams.get('query') || '',\n    {\n      page: searchParams.get('page') ?? '1',\n      perPage: searchParams.get('perPage') ?? '20',\n      paginate: 'lengthAware',\n    },\n    {disableDebounce: true},\n  );\n  return (\n    <SearchTableLayout query={query}>\n      <Table\n        headerCellHeight=\"h-36\"\n        cellHeight=\"h-64\"\n        columns={columnConfig}\n        data={query.data?.pagination.data || []}\n        enableSelection={false}\n        onAction={article => navigate(getArticleLink(article))}\n      />\n    </SearchTableLayout>\n  );\n}\n","import {createSvgIcon} from '@common/icons/create-svg-icon';\n\nexport const AddNoteIcon = createSvgIcon(\n  <path d=\"M 5 5 L 5 6 L 5 26 L 5 27 L 6 27 L 20 27 L 20.40625 27 L 20.71875 26.71875 L 26.71875 20.71875 L 27 20.40625 L 27 20 L 27 6 L 27 5 L 26 5 L 6 5 L 5 5 z M 7 7 L 25 7 L 25 19 L 20 19 L 19 19 L 19 20 L 19 25 L 7 25 L 7 7 z M 21 21 L 23.5625 21 L 21 23.5625 L 21 21 z\" />,\n  '',\n  '0 0 32 32'\n);\n","import {createSvgIcon} from '@common/icons/create-svg-icon';\n\nexport const BackToTicketsIcon = createSvgIcon(\n  <path d=\"M 8.28125 5.28125 L 2.28125 11.28125 L 1.59375 12 L 2.28125 12.71875 L 8.28125 18.71875 L 9.71875 17.28125 L 5.4375 13 L 23 13 C 25.754545 13 28 15.245455 28 18 C 28 20.754545 25.754545 23 23 23 L 20 23 L 20 25 L 23 25 C 26.845455 25 30 21.845455 30 18 C 30 14.154545 26.845455 11 23 11 L 5.4375 11 L 9.71875 6.71875 L 8.28125 5.28125 z M 8 23 L 8 25 L 10 25 L 10 23 L 8 23 z M 12 23 L 12 25 L 14 25 L 14 23 L 12 23 z M 16 23 L 16 25 L 18 25 L 18 23 L 16 23 z\" />,\n  '',\n  '0 0 32 32'\n);\n","import {useSettings} from '@common/core/settings/use-settings';\nimport {useLocalStorage} from '@common/utils/hooks/local-storage';\nimport {useCallback} from 'react';\nimport {\n  useMailboxParams,\n  useNavigateToMailboxTicketTable,\n} from '@app/agent/use-mailbox-params';\nimport {message} from '@common/i18n/message';\nimport {apiClient} from '@common/http/query-client';\nimport {Ticket} from '@app/agent/ticket';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {getTicketPageLink} from '@app/agent/agent-ticket-page/ticket-page-link';\nimport {useParams} from 'react-router-dom';\n\nexport const AfterReplyActions = {\n  stay_on_page: message('Send and stay on page'),\n  next_active_ticket: message('Send and next ticket'),\n  back_to_folder: message('Send and back to folder'),\n};\n\nexport type AfterReplyAction = keyof typeof AfterReplyActions;\n\nexport function useAfterReplyAction() {\n  const {tagId} = useMailboxParams();\n  const {ticketId} = useParams();\n  const backToTicketTable = useNavigateToMailboxTicketTable();\n  const {replies} = useSettings();\n  const navigate = useNavigate();\n  const defaultAction: AfterReplyAction =\n    replies?.after_reply_action || 'next_active_ticket';\n  const [action, setAction] = useLocalStorage<AfterReplyAction>(\n    'after_reply_action',\n    defaultAction,\n  );\n  const perform = useCallback(async () => {\n    if (action === 'next_active_ticket') {\n      const response = await apiClient.get<{ticket: Ticket}>(\n        `tickets/${tagId}/next-active-ticket`,\n      );\n      if (response?.data.ticket) {\n        if (ticketId === `${response.data.ticket.id}`) {\n          backToTicketTable();\n        } else {\n          navigate(getTicketPageLink(response.data.ticket, {tagId}));\n        }\n      }\n    } else if (action === 'back_to_folder') {\n      backToTicketTable();\n    }\n  }, [action, backToTicketTable, tagId, navigate]);\n\n  return {action, setAction, perform};\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {Reply} from '@app/agent/reply';\nimport {useParams} from 'react-router-dom';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\n\ninterface Response {\n  reply: Reply;\n}\n\ninterface Payload {\n  body: string | null;\n  attachments?: number[];\n}\n\nexport function useCreateNote() {\n  const {ticketId} = useParams();\n  return useMutation({\n    mutationFn: (payload: Payload) => createNote(ticketId!, payload),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({\n        queryKey: ['tickets', `${ticketId}`],\n      });\n      toast(message('Note added'));\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction createNote(ticketId: number | string, payload: Payload) {\n  return apiClient\n    .post<Response>(`tickets/${ticketId}/notes`, payload)\n    .then(r => r.data);\n}\n","import {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {Trans} from '@common/i18n/trans';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {Button} from '@common/ui/buttons/button';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {ReplyEditor} from '@app/reply-editor/reply-editor';\nimport React, {useRef, useState} from 'react';\nimport {useCreateNote} from '@app/agent/agent-ticket-page/notes/use-create-note';\nimport {Editor} from '@tiptap/react';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {getReplyBody} from '@app/reply-editor/get-reply-body';\n\nexport function CreateNoteDialog() {\n  const editorRef = useRef<Editor | null>(null);\n  const {close} = useDialogContext();\n  const createNote = useCreateNote();\n  const [attachments, setAttachments] = useState<FileEntry[]>([]);\n\n  const handleSubmit = () => {\n    createNote.mutate(\n      {\n        body: getReplyBody(editorRef),\n        attachments: attachments.map(a => a.id),\n      },\n      {\n        onSuccess: () => close(),\n      },\n    );\n  };\n\n  return (\n    <Dialog size=\"lg\">\n      <DialogHeader>\n        <Trans message=\"Add a note\" />\n      </DialogHeader>\n      <DialogBody>\n        <FileUploadProvider>\n          <ReplyEditor\n            minHeight=\"min-h-[300px]\"\n            isLoading={createNote.isPending}\n            editorRef={editorRef}\n            className=\"mb-24\"\n            attachments={attachments}\n            onAttachmentsChange={attachments => setAttachments(attachments)}\n            onSubmit={() => handleSubmit()}\n          />\n        </FileUploadProvider>\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          variant=\"flat\"\n          color=\"primary\"\n          onClick={() => handleSubmit()}\n          disabled={createNote.isPending}\n        >\n          <Trans message=\"Add\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {Ticket} from '@app/agent/ticket';\nimport {Trans} from '@common/i18n/trans';\nimport {Link} from 'react-router-dom';\nimport React, {useState} from 'react';\nimport {useMailboxTicketTableLink} from '@app/agent/use-mailbox-params';\nimport {Chip} from '@common/ui/forms/input-field/chip-field/chip';\nimport {AssignTicketsButton} from '@app/agent/ticket-actions/assign-tickets-button';\nimport {ChangeTicketStatusButton} from '@app/agent/ticket-actions/change-ticket-status-button';\nimport {AddTagToTicketsButton} from '@app/agent/ticket-actions/add-tag-to-tickets-button';\nimport {AddNoteIcon} from '@app/agent/ticket-actions/icons/add-note-icon';\nimport {BackToTicketsIcon} from '@app/agent/ticket-actions/icons/back-to-tickets-icon';\nimport {TicketActionButton} from '@app/agent/ticket-actions/ticket-action-button';\nimport {useAfterReplyAction} from '@app/agent/agent-ticket-page/use-after-reply-action';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {CreateNoteDialog} from '@app/agent/agent-ticket-page/notes/create-note-dialog';\nimport {useKeybind} from '@common/utils/keybinds/use-keybind';\n\ninterface Props {\n  ticket: Ticket;\n}\nexport function TicketPageToolbar({ticket}: Props) {\n  const backLink = useMailboxTicketTableLink();\n  const {perform: afterReplyAction} = useAfterReplyAction();\n  return (\n    <div className=\"flex items-center gap-14 border-b py-4 pl-14 pr-20\">\n      <TicketActionButton\n        startIcon={<BackToTicketsIcon />}\n        isCompact={true}\n        elementType={Link}\n        to={backLink}\n      >\n        <Trans message=\"Back (b)\" />\n      </TicketActionButton>\n      <AssignTicketsButton ticketIds={[ticket.id]} isCompact />\n      <AddNoteButton />\n      <AddTagToTicketsButton ticketIds={[ticket.id]} isCompact />\n      <ChangeTicketStatusButton\n        ticketIds={[ticket.id]}\n        isCompact\n        onSuccess={() => afterReplyAction()}\n      />\n      <div className=\"ml-auto text-2xl\">#{ticket.id}</div>\n      {ticket.status && (\n        <Chip\n          size=\"sm\"\n          radius=\"rounded\"\n          className=\"font-bold capitalize\"\n          color={ticket.status === 'open' ? 'primary' : 'chip'}\n        >\n          <Trans message={ticket.status} />\n        </Chip>\n      )}\n    </div>\n  );\n}\n\nfunction AddNoteButton() {\n  const [isOpen, setIsOpen] = useState(false);\n  useKeybind('window', 'n', () => setIsOpen(true));\n  return (\n    <DialogTrigger type=\"modal\" isOpen={isOpen} onOpenChange={setIsOpen}>\n      <TicketActionButton startIcon={<AddNoteIcon />} isCompact>\n        <Trans message=\"Note (n)\" />\n      </TicketActionButton>\n      <CreateNoteDialog />\n    </DialogTrigger>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {Reply} from '@app/agent/reply';\n\ninterface Payload {\n  reply: Reply;\n}\n\nexport function useDeleteReply() {\n  return useMutation({\n    mutationFn: (payload: Payload) => deleteReply(payload),\n    onSuccess: async (_, payload) => {\n      await queryClient.invalidateQueries({\n        queryKey: ['tickets', `${payload.reply.ticket_id}`],\n      });\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction deleteReply(payload: Payload) {\n  return apiClient.delete(`replies/${payload.reply.id}`).then(r => r.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {Reply} from '@app/agent/reply';\n\ninterface Response {\n  reply: Reply;\n}\n\ninterface Payload {\n  reply: Reply;\n  body?: string | null;\n  attachments?: number[];\n}\n\nexport function useUpdateReply() {\n  return useMutation({\n    mutationFn: (payload: Payload) => updateReply(payload),\n    onSuccess: async (_, payload) => {\n      await queryClient.invalidateQueries({\n        queryKey: ['tickets', `${payload.reply.ticket_id}`, 'replies'],\n      });\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction updateReply({reply, ...payload}: Payload) {\n  return apiClient\n    .put<Response>(`replies/${reply.id}`, payload)\n    .then(r => r.data);\n}\n","import {Reply} from '@app/agent/reply';\nimport {useUpdateReply} from '@app/agent/agent-ticket-page/reply-list/requests/use-update-reply';\nimport React from 'react';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {ConfirmationDialog} from '@common/ui/overlays/dialog/confirmation-dialog';\nimport {Trans} from '@common/i18n/trans';\nimport {\n  AttachmentListLayout,\n  FileEntryAttachmentLayout,\n} from '@app/agent/ticket-layout/attachment-list-layout';\nimport {openDialog} from '@common/ui/overlays/store/dialog-store';\n\ninterface Props {\n  reply: Reply;\n}\nexport function ReplyAttachmentList({reply}: Props) {\n  if (!reply.attachments?.length) return null;\n  return (\n    <AttachmentListLayout className=\"mt-30 w-max\">\n      {reply.attachments.map((attachment, index) => (\n        <FileEntryAttachmentLayout\n          key={attachment.id}\n          attachments={reply.attachments!}\n          index={index}\n          onRemove={() => {\n            openDialog(DeleteAttachmentDialog, {reply, attachment});\n          }}\n        />\n      ))}\n    </AttachmentListLayout>\n  );\n}\n\ninterface DeleteAttachmentDialogProps {\n  reply: Reply;\n  attachment: FileEntry;\n}\nfunction DeleteAttachmentDialog({\n  reply,\n  attachment,\n}: DeleteAttachmentDialogProps) {\n  const updateReply = useUpdateReply();\n  const {close} = useDialogContext();\n  return (\n    <ConfirmationDialog\n      isDanger\n      title={<Trans message=\"Delete attachment\" />}\n      body={\n        <Trans message=\"Are you sure you want to delete this attachment?\" />\n      }\n      confirm={<Trans message=\"Delete\" />}\n      onConfirm={() => {\n        updateReply.mutate(\n          {\n            reply,\n            attachments: reply\n              .attachments!.filter(u => u.id !== attachment.id)\n              .map(u => u.id),\n          },\n          {onSuccess: close},\n        );\n      }}\n      isLoading={updateReply.isPending}\n    />\n  );\n}\n","import {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {Trans} from '@common/i18n/trans';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {Button} from '@common/ui/buttons/button';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {ReplyEditor} from '@app/reply-editor/reply-editor';\nimport React, {useRef, useState} from 'react';\nimport {Editor} from '@tiptap/react';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {getReplyBody} from '@app/reply-editor/get-reply-body';\nimport {useUpdateReply} from '@app/agent/agent-ticket-page/reply-list/requests/use-update-reply';\nimport {Reply} from '@app/agent/reply';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\n\ninterface Props {\n  reply: Reply;\n}\nexport function UpdateReplyDialog({reply}: Props) {\n  const editorRef = useRef<Editor | null>(null);\n  const {close} = useDialogContext();\n  const updateReply = useUpdateReply();\n  const [attachments, setAttachments] = useState<FileEntry[]>(\n    reply.attachments || [],\n  );\n  const title =\n    reply.type === 'notes' ? (\n      <Trans message=\"Edit note\" />\n    ) : (\n      <Trans message=\"Edit reply\" />\n    );\n\n  const handleSubmit = () => {\n    updateReply.mutate(\n      {\n        reply,\n        body: getReplyBody(editorRef),\n        attachments: attachments.map(a => a.id),\n      },\n      {\n        onSuccess: () => {\n          close();\n          toast(\n            reply.type === 'notes'\n              ? message('Updated note')\n              : message('Updated reply'),\n          );\n        },\n      },\n    );\n  };\n\n  return (\n    <Dialog size=\"lg\">\n      <DialogHeader>{title}</DialogHeader>\n      <DialogBody>\n        <FileUploadProvider>\n          <ReplyEditor\n            minHeight=\"min-h-[300px]\"\n            isLoading={updateReply.isPending}\n            initialContent={reply.body}\n            editorRef={editorRef}\n            attachments={attachments}\n            onAttachmentsChange={attachments => setAttachments(attachments)}\n            onSubmit={() => handleSubmit()}\n          />\n        </FileUploadProvider>\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          variant=\"flat\"\n          color=\"primary\"\n          onClick={() => handleSubmit()}\n          disabled={updateReply.isPending}\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\n\nexport interface OriginalReplyEmailResponse {\n  email: {\n    headers: Record<string, string>;\n    body: {\n      html: string;\n      plain: string;\n    };\n  };\n}\n\nexport function useOriginalReplyEmail(replyId: number | string) {\n  return useQuery({\n    queryKey: ['original-email', `${replyId}`],\n    queryFn: () => fetchEmail(replyId),\n    staleTime: Infinity,\n  });\n}\n\nfunction fetchEmail(replyId: string | number) {\n  return apiClient\n    .get<OriginalReplyEmailResponse>(`replies/${replyId}/original`)\n    .then(response => response.data);\n}\n","import {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {Trans} from '@common/i18n/trans';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport React, {useState} from 'react';\nimport {\n  OriginalReplyEmailResponse,\n  useOriginalReplyEmail,\n} from '@app/agent/agent-ticket-page/reply-list/requests/use-original-reply-email';\nimport {FullPageLoader} from '@common/ui/progress/full-page-loader';\nimport {UseQueryResult} from '@tanstack/react-query';\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {ErrorIcon} from '@common/icons/material/Error';\nimport {ButtonGroup} from '@common/ui/buttons/button-group';\nimport {Button} from '@common/ui/buttons/button';\nimport {useSettings} from '@common/core/settings/use-settings';\n\ntype ActiveTab = 'html' | 'plain' | 'headers';\n\ninterface Props {\n  replyId: number;\n}\nexport function OriginalEmailPreviewDialog({replyId}: Props) {\n  const {base_url} = useSettings();\n  const query = useOriginalReplyEmail(replyId);\n  const [activeTab, setActiveTab] = useState<ActiveTab>('html');\n\n  return (\n    <Dialog size=\"fullscreen\" className=\"h-dialog\">\n      <DialogHeader\n        showDivider\n        padding=\"px-24 py-12\"\n        titleFontWeight=\"font-normal\"\n        titleTextSize=\"text-base\"\n        justify=\"justify-start\"\n        actions={\n          <div>\n            <ButtonGroup\n              variant=\"outline\"\n              radius=\"rounded-md\"\n              size=\"xs\"\n              value={activeTab}\n              onChange={setActiveTab}\n            >\n              <Button value=\"html\">\n                <Trans message=\"HTML\" />\n              </Button>\n              <Button value=\"plain\">\n                <Trans message=\"Plain\" />\n              </Button>\n              <Button value=\"headers\">\n                <Trans message=\"Headers\" />\n              </Button>\n            </ButtonGroup>\n            <Button\n              className=\"ml-34\"\n              variant=\"outline\"\n              size=\"xs\"\n              elementType=\"a\"\n              download\n              href={`${base_url}/api/v1/replies/${replyId}/original/download`}\n            >\n              <Trans message=\"Download\" />\n            </Button>\n          </div>\n        }\n      >\n        <Trans message=\"Original email\" />\n      </DialogHeader>\n      <DialogBody>\n        {query.data?.email ? (\n          <Content data={query.data} activeTab={activeTab} />\n        ) : (\n          <Status query={query} />\n        )}\n      </DialogBody>\n    </Dialog>\n  );\n}\n\ninterface ContentProps {\n  data: OriginalReplyEmailResponse;\n  activeTab: ActiveTab;\n}\nfunction Content({data, activeTab}: ContentProps) {\n  if (activeTab === 'html') {\n    return <div dangerouslySetInnerHTML={{__html: data.email.body.html}} />;\n  } else if (activeTab === 'plain') {\n    return (\n      <pre className=\"whitespace-pre-wrap break-words\">\n        {data.email.body.plain}\n      </pre>\n    );\n  } else {\n    return (\n      <table>\n        <tbody>\n          {Object.entries(data.email.headers).map(([key, value]) => (\n            <tr key={key}>\n              <th className=\"whitespace-nowrap border px-20 py-10 text-left\">\n                {key}\n              </th>\n              <td className=\"whitespace-nowrap border px-20 py-10 text-left\">\n                {value}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\ninterface StatusProps {\n  query: UseQueryResult;\n}\nexport function Status({query}: StatusProps) {\n  if (query.isLoading) {\n    return <FullPageLoader className=\"absolute inset-0 m-auto\" />;\n  }\n\n  return (\n    <IllustratedMessage\n      className=\"mt-40\"\n      image={\n        <div>\n          <ErrorIcon size=\"xl\" />\n        </div>\n      }\n      imageHeight=\"h-auto\"\n      title={<Trans message=\"Original email for this reply does not exist\" />}\n    />\n  );\n}\n","import {GetTicketResponse} from '@app/agent/agent-ticket-page/requests/use-ticket';\r\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\r\nimport React from 'react';\r\nimport {useTicketPageStore} from '@app/agent/agent-ticket-page/ticket-page-store';\r\nimport {useTicketReplies} from '@app/agent/agent-ticket-page/reply-list/requests/use-ticket-replies';\r\nimport {Reply} from '@app/agent/reply';\r\nimport {Menu, MenuTrigger} from '@common/ui/navigation/menu/menu-trigger';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {MoreVertIcon} from '@common/icons/material/MoreVert';\r\nimport {Item} from '@common/ui/forms/listbox/item';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {closeDialog, openDialog} from '@common/ui/overlays/store/dialog-store';\r\nimport {useDeleteReply} from '@app/agent/agent-ticket-page/reply-list/requests/use-delete-reply';\r\nimport {ConfirmationDialog} from '@common/ui/overlays/dialog/confirmation-dialog';\r\nimport {TicketReplyLayout} from '@app/agent/ticket-layout/ticket-reply-layout';\r\nimport {ReplyAttachmentList} from '@app/agent/agent-ticket-page/reply-list/reply-attachment-list';\r\nimport {UpdateReplyDialog} from '@app/agent/agent-ticket-page/reply-list/update-reply-dialog';\r\nimport {OriginalEmailPreviewDialog} from '@app/agent/agent-ticket-page/reply-list/original-email-preview-dialog';\r\n\r\ninterface Props {\r\n  data: GetTicketResponse;\r\n}\r\nexport function AgentTicketPageReplyList({\r\n  data: {ticket, replies, draft},\r\n}: Props) {\r\n  const editorIsOpen = useTicketPageStore(s => s.editorIsOpen);\r\n  const showDraft = draft && !editorIsOpen;\r\n  const query = useTicketReplies(ticket.id, replies);\r\n\r\n  return (\r\n    <div>\r\n      {showDraft && (\r\n        <TicketReplyLayout\r\n          reply={draft}\r\n          className=\"pl-20 pr-8\"\r\n          actions={<ReplyActionsButton reply={draft} />}\r\n          ticketRequestType={ticket.ticket_request_type}\r\n        />\r\n      )}\r\n      {query.items.map(reply => {\r\n        const isInitial =\r\n          !query.hasNextPage && reply.id === query.items.at(-1)?.id;\r\n        return (\r\n          <TicketReplyLayout\r\n            className=\"pl-20 pr-8\"\r\n            key={reply.id}\r\n            reply={reply}\r\n            isInitial={isInitial}\r\n            actions={<ReplyActionsButton reply={reply} />}\r\n            attachments={<ReplyAttachmentList reply={reply} />}\r\n            ticketRequestType={ticket.ticket_request_type}\r\n          />\r\n        );\r\n      })}\r\n      <InfiniteScrollSentinel query={query} />\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface ReplyActionsButtonProps {\r\n  reply: Reply;\r\n}\r\nfunction ReplyActionsButton({reply}: ReplyActionsButtonProps) {\r\n  return (\r\n    <MenuTrigger>\r\n      <IconButton className=\"text-muted\" size=\"sm\">\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n      <Menu>\r\n        <Item\r\n          value=\"edit\"\r\n          onClick={() => openDialog(UpdateReplyDialog, {reply})}\r\n        >\r\n          <Trans message=\"Edit\" />\r\n        </Item>\r\n        {reply.type === 'replies' && (\r\n          <Item\r\n            value=\"showOriginal\"\r\n            onClick={() =>\r\n              openDialog(OriginalEmailPreviewDialog, {replyId: reply.id})\r\n            }\r\n          >\r\n            <Trans message=\"Show original\" />\r\n          </Item>\r\n        )}\r\n        <Item\r\n          value=\"delete\"\r\n          onClick={() => openDialog(ConfirmDeleteReplyDialog, {reply})}\r\n        >\r\n          <Trans message=\"Delete\" />\r\n        </Item>\r\n      </Menu>\r\n    </MenuTrigger>\r\n  );\r\n}\r\n\r\ninterface ConfirmDeleteReplyDialogProps {\r\n  reply: Reply;\r\n}\r\nfunction ConfirmDeleteReplyDialog({reply}: ConfirmDeleteReplyDialogProps) {\r\n  const deleteReply = useDeleteReply();\r\n  let title = <Trans message=\"Delete reply\" />;\r\n  let body = <Trans message=\"Are you sure you want to delete this reply?\" />;\r\n  if (reply.type === 'notes') {\r\n    title = <Trans message=\"Delete note\" />;\r\n    body = <Trans message=\"Are you sure you want to delete this note?\" />;\r\n  }\r\n  return (\r\n    <ConfirmationDialog\r\n      isDanger\r\n      title={title}\r\n      body={body}\r\n      confirm={<Trans message=\"Delete\" />}\r\n      onConfirm={() =>\r\n        deleteReply.mutate(\r\n          {reply},\r\n          {\r\n            onSuccess: () => closeDialog(),\r\n          },\r\n        )\r\n      }\r\n      isLoading={deleteReply.isPending}\r\n    />\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {updateTicketQuery} from '@app/agent/agent-ticket-page/requests/use-ticket';\n\ninterface Payload {\n  tagId: number;\n  ticketIds: number[];\n}\n\nexport function useRemoveTagFromTickets() {\n  return useMutation({\n    mutationFn: (payload: Payload) => removeTag(payload),\n    onSuccess: (_, payload) => {\n      queryClient.invalidateQueries({queryKey: ['mailbox', 'sidenav-tags']});\n      payload.ticketIds.forEach(ticketId => {\n        updateTicketQuery(ticketId, old => {\n          old.ticket.tags = old.ticket.tags?.filter(\n            tag => tag.id !== payload.tagId,\n          );\n        });\n      });\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction removeTag(payload: Payload): Promise<BackendResponse> {\n  return apiClient.post(`tickets/tags/remove`, payload).then(r => r.data);\n}\n","import {FormattedRelativeTime} from '@common/i18n/formatted-relative-time';\r\nimport {FormattedDate} from '@common/i18n/formatted-date';\r\nimport {Fragment, ReactNode} from 'react';\r\nimport {Ticket} from '@app/agent/ticket';\r\nimport TicketTypeRequestTag from './ticket-type-request-tag';\r\n\r\nconst TicketHeaderDateFormat: Intl.DateTimeFormatOptions = {\r\n  month: 'short',\r\n  day: 'numeric',\r\n};\r\n\r\ninterface Props {\r\n  ticket: Ticket;\r\n  children?: ReactNode;\r\n  actions?: ReactNode;\r\n}\r\nexport function TicketHeaderLayout({ticket, actions, children}: Props) {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"flex items-start gap-12 px-20 py-14 max-md:flex-col md:items-center\">\r\n        <div className=\"flex items-center gap-8\">\r\n          <h1 className=\"text-2xl\">{ticket.subject}</h1>\r\n          <TicketTypeRequestTag ticketRequestType={ticket.ticket_request_type} />\r\n        </div>\r\n        {children}\r\n        <div className=\"mr-24 max-md:hidden\" />\r\n        <div className=\"whitespace-nowrap text-muted md:ml-auto\">\r\n          <FormattedRelativeTime date={ticket.created_at} /> (\r\n          <FormattedDate\r\n            date={ticket.created_at}\r\n            options={TicketHeaderDateFormat}\r\n          />\r\n          )\r\n        </div>\r\n        {actions}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","import {Chip} from '@common/ui/forms/input-field/chip-field/chip';\nimport {\n  ChipList,\n  ChipListProps,\n} from '@common/ui/forms/input-field/chip-field/chip-list';\nimport {Ticket, TicketTag} from '@app/agent/ticket';\n\ninterface Props extends ChipListProps {\n  ticket: Ticket;\n  onRemoveTag?: (tag: TicketTag) => void;\n  tagType?: string;\n}\nexport function TicketTagList({\n  ticket,\n  onRemoveTag,\n  tagType,\n  size = 'xs',\n  ...chipListProps\n}: Props) {\n  if (!ticket.tags?.length) return null;\n\n  return (\n    <ChipList {...chipListProps} size={size} selectable={!!onRemoveTag}>\n      {ticket.tags\n        ?.filter(t => t.type !== 'status' && (!tagType || t.type === tagType))\n        .map(tag => (\n          <Chip\n            key={tag.id}\n            onRemove={onRemoveTag ? () => onRemoveTag(tag) : undefined}\n          >\n            {tag.display_name}\n          </Chip>\n        ))}\n    </ChipList>\n  );\n}\n","import {GetTicketResponse} from '@app/agent/agent-ticket-page/requests/use-ticket';\nimport {useRemoveTagFromTickets} from '@app/agent/ticket-actions/requests/use-remove-tag-from-tickets';\nimport {Tag} from '@common/tags/tag';\nimport {useOpenReplyEditor} from '@app/agent/agent-ticket-page/agent-reply-editor/use-open-reply-editor';\nimport {useTicketPageStore} from '@app/agent/agent-ticket-page/ticket-page-store';\nimport {TicketHeaderLayout} from '@app/agent/ticket-layout/ticket-header-layout';\nimport {TicketTagList} from '@app/agent/ticket-layout/ticket-tag-list';\nimport {useKeybind} from '@common/utils/keybinds/use-keybind';\nimport {Button} from '@common/ui/buttons/button';\nimport {Trans} from '@common/i18n/trans';\nimport {ReplyIcon} from '@common/icons/material/Reply';\n\ninterface Props {\n  data: GetTicketResponse;\n}\nexport function TicketPageHeader({data: {ticket}}: Props) {\n  const removeTags = useRemoveTagFromTickets();\n  const editorIsOpen = useTicketPageStore(s => s.editorIsOpen);\n  const openEditor = useOpenReplyEditor();\n  const handleRemoveTag = (tag: Tag) => {\n    removeTags.mutate({\n      ticketIds: [ticket.id],\n      tagId: tag.id,\n    });\n  };\n\n  useKeybind('window', 'r', () => {\n    if (!editorIsOpen) {\n      openEditor();\n    }\n  });\n\n  return (\n    <TicketHeaderLayout\n      ticket={ticket}\n      actions={\n        ticket.status !== 'locked' && (\n          <Button\n            variant=\"outline\"\n            size=\"xs\"\n            onClick={() => openEditor()}\n            startIcon={<ReplyIcon />}\n            disabled={editorIsOpen}\n          >\n            <Trans message=\"Reply\" />\n          </Button>\n        )\n      }\n    >\n      <TicketTagList ticket={ticket} onRemoveTag={handleRemoveTag} />\n    </TicketHeaderLayout>\n  );\n}\n","import {IconButton} from '@common/ui/buttons/icon-button';\nimport clsx from 'clsx';\nimport {KeyboardArrowDownIcon} from '@common/icons/material/KeyboardArrowDown';\nimport {ReactNode} from 'react';\nimport {useLocalStorage} from '@common/utils/hooks/local-storage';\n\ninterface Props {\n  label: ReactNode;\n  children: ReactNode;\n  name: string;\n  className?: string;\n}\nexport function UserDetailsSection({label, children, name, className}: Props) {\n  const [isVisible, setIsVisible] = useLocalStorage(name, true);\n  return (\n    <section className={clsx('border-b pb-14 text-sm', className)}>\n      <div className=\"flex items-center justify-between gap-14 px-14\">\n        <div className=\"font-semibold\">{label}</div>\n        <IconButton\n          onClick={() => setIsVisible(!isVisible)}\n          className={clsx('transition-transform', isVisible && 'rotate-180')}\n        >\n          <KeyboardArrowDownIcon />\n        </IconButton>\n      </div>\n      {isVisible && <div className=\"pt-8\">{children}</div>}\n    </section>\n  );\n}\n","import {PurchaseCode} from '@app/agent/purchase-code';\nimport {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {LinkStyle} from '@common/ui/buttons/external-link';\nimport {Trans} from '@common/i18n/trans';\nimport {ReactNode} from 'react';\nimport {FormattedDate} from '@common/i18n/formatted-date';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {Button} from '@common/ui/buttons/button';\nimport {useSyncEnvatoPurchases} from '@app/agent/agent-ticket-page/user-details-sidebar/requests/use-sync-envato-purchases';\n\ninterface Props {\n  purchaseCode: PurchaseCode;\n}\nexport function PurchaseCodeDetailsDialog({purchaseCode}: Props) {\n  const {close} = useDialogContext();\n  const syncPurchases = useSyncEnvatoPurchases();\n  return (\n    <Dialog size=\"md\">\n      <DialogBody>\n        <div className=\"flex items-start gap-14 text-sm\">\n          <img\n            src={purchaseCode.image}\n            alt=\"\"\n            className=\"h-80 w-80 flex-shrink-0 rounded\"\n          />\n          <div className=\"flex-auto\">\n            <a\n              href={purchaseCode.url}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              className={LinkStyle}\n            >\n              {purchaseCode.item_name}\n            </a>\n            <div className=\"mt-4 text-sm text-muted\">{purchaseCode.code}</div>\n            <div className=\"mt-12\">\n              <Detail\n                label={<Trans message=\"Customer\" />}\n                value={purchaseCode.envato_username}\n              />\n              <Detail\n                label={<Trans message=\"Purchased\" />}\n                value={<FormattedDate date={purchaseCode.purchased_at} />}\n              />\n              <Detail\n                label={<Trans message=\"Supported until\" />}\n                value={<FormattedDate date={purchaseCode.supported_until} />}\n              />\n              <Detail\n                label={<Trans message=\"Last synced\" />}\n                value={<FormattedDate date={purchaseCode.updated_at} />}\n              />\n            </div>\n          </div>\n        </div>\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          variant=\"flat\"\n          color=\"primary\"\n          disabled={syncPurchases.isPending}\n          onClick={() => syncPurchases.mutate({userId: purchaseCode.user_id})}\n        >\n          <Trans message=\"Sync purchases\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n\ninterface DetailProps {\n  label: ReactNode;\n  value: ReactNode;\n}\nfunction Detail({label, value}: DetailProps) {\n  return (\n    <div className=\"mb-6 flex items-center gap-14\">\n      <div>{label}:</div>\n      <div className=\"text-muted\">{value}</div>\n    </div>\n  );\n}\n","import {PurchaseCode} from '@app/agent/purchase-code';\nimport {Trans} from '@common/i18n/trans';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport clsx from 'clsx';\nimport {FormattedDate} from '@common/i18n/formatted-date';\nimport {PurchaseCodeDetailsDialog} from '@app/agent/agent-ticket-page/envato-purchase-list/purchase-code-details-dialog';\nimport React from 'react';\n\ninterface Props {\n  purchases: PurchaseCode[];\n  activePurchase?: PurchaseCode;\n  itemClassName?: string;\n}\nexport function EnvatoPurchaseList({\n  purchases,\n  itemClassName,\n  activePurchase,\n}: Props) {\n  return (\n    <div>\n      {purchases.map(purchase => (\n        <DialogTrigger type=\"modal\" key={purchase.id}>\n          <div\n            className={clsx(\n              'flex cursor-pointer items-center gap-8 rounded py-8 hover:bg-hover',\n              itemClassName,\n              activePurchase?.code === purchase.code && 'bg-primary-light/30',\n            )}\n          >\n            <img src={purchase.image} alt=\"\" className=\"h-30 w-30 rounded\" />\n            <div className=\"min-w-0 text-xs\">\n              <div className=\"overflow-hidden overflow-ellipsis whitespace-nowrap\">\n                {purchase.item_name}\n              </div>\n              <div\n                className={clsx(\n                  'text-muted',\n                  purchase.support_expired && 'line-through',\n                )}\n              >\n                {purchase.supported_until ? (\n                  <FormattedDate date={purchase.supported_until} />\n                ) : purchase.support_expired ? (\n                  <Trans message=\"Support expired\" />\n                ) : (\n                  '-'\n                )}\n              </div>\n            </div>\n          </div>\n          <PurchaseCodeDetailsDialog purchaseCode={purchase} />\n        </DialogTrigger>\n      ))}\n    </div>\n  );\n}\n","import {useMemo} from 'react';\nimport {PurchaseCode} from '@app/agent/purchase-code';\nimport {Trans} from '@common/i18n/trans';\nimport {PersonIcon} from '@common/icons/material/Person';\nimport {User} from '@common/auth/user';\nimport {Ticket} from '@app/agent/ticket';\nimport {UserDetailsSection} from '@app/agent/agent-ticket-page/user-details-sidebar/user-details-section';\nimport {EnvatoPurchaseList} from '@app/agent/agent-ticket-page/envato-purchase-list/envato-purchase-list';\n\ninterface Props {\n  user: User;\n  ticket: Ticket;\n}\nexport function TicketPagePurchaseList({user, ticket}: Props) {\n  const currentPurchase = useMemo(() => {\n    const category = ticket.tags?.find(tag => tag.type !== 'status')\n      ?.categories[0];\n    let bestMatch: PurchaseCode | undefined;\n    if (category) {\n      const categoryName = category.name.toLowerCase();\n      bestMatch = user.purchase_codes?.find(code => {\n        return code.item_name.toLowerCase().indexOf(categoryName) > -1;\n      });\n    }\n    return bestMatch || user.purchase_codes?.[0];\n  }, [user, ticket]);\n\n  return (\n    <UserDetailsSection\n      label={<Trans message=\"Envato\" />}\n      name=\"purchase-list-visible\"\n    >\n      <div className=\"overflow-hidden\">\n        {currentPurchase && (\n          <div className=\"mb-8 flex items-center gap-4 px-14 text-sm\">\n            <PersonIcon size=\"sm\" />\n            <a\n              href={`https://codecanyon.net/user/${currentPurchase.envato_username}`}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              {currentPurchase.envato_username}\n            </a>\n          </div>\n        )}\n        <EnvatoPurchaseList\n          purchases={user.purchase_codes || []}\n          itemClassName=\"px-14\"\n          activePurchase={currentPurchase}\n        />\n      </div>\n    </UserDetailsSection>\n  );\n}\n","import {ActivityLogItem} from '@app/agent/agent-ticket-page/user-details-sidebar/activity-log/activity-log-item';\nimport {useInfiniteData} from '@common/ui/infinite-scroll/use-infinite-data';\n\ninterface Params {\n  userId: number | string;\n}\n\nexport function useActivityLog(params: Params) {\n  return useInfiniteData<ActivityLogItem>({\n    queryKey: ['activity-log'],\n    endpoint: 'activity-log',\n    paginate: 'simple',\n    queryParams: params as any,\n  });\n}\n","import {Category, Section} from '@app/help-center/categories/category';\nimport {Tag} from '@common/tags/tag';\nimport {User} from '@common/auth/user';\n\nexport const ARTICLE_MODEL = 'article';\n\nexport interface Article {\n  id: number;\n  title: string;\n  body: string;\n  slug?: string;\n  draft: boolean;\n  visibility: 'public' | 'private';\n  views: number;\n  position: number;\n  description?: string;\n  created_at?: string;\n  updated_at?: string;\n  categories?: Category[];\n  tags?: Tag[];\n  attachments?: ArticleAttachment[];\n  feedback?: ArticleFeedback[];\n  author?: User;\n  author_id?: number;\n  path?: [Category, Section];\n  score?: number;\n  positive_votes?: number;\n  negative_votes?: number;\n  model_type: typeof ARTICLE_MODEL;\n  visible_to_role?: number;\n  managed_by_role?: number;\n  sections?: Section[];\n}\n\nexport interface ArticleAttachment {\n  id: number;\n  name: string;\n  file_size: number;\n  mime: string;\n  hash: string;\n}\n\nexport interface ArticleFeedback {\n  id: number;\n  was_helpful: boolean;\n  comment?: string;\n  article_id: number;\n  user_id?: number;\n  ip?: string;\n  created_at?: string;\n  updated_at?: string;\n  article?: Article;\n}\n","export const SEARCH_TERM_MODEL = 'search_term';\n\nexport interface SearchTerm {\n  id: number;\n  term: string;\n  user_id: number;\n  count: number;\n  term_count?: number;\n  created_at?: string;\n  updated_at?: string;\n  model_type: typeof SEARCH_TERM_MODEL;\n}\n","import {Children, cloneElement, ReactElement, ReactNode} from 'react';\nimport clsx from 'clsx';\n\ninterface TimelineProps {\n  children: ReactElement<TimelineProps>[];\n  className?: string;\n}\nexport function Timeline({children, className}: TimelineProps) {\n  const items = Children.toArray(children);\n  return (\n    <div className={className}>\n      {items.map((item, index) =>\n        cloneElement(item as any, {\n          isLast: index === items.length - 1,\n        })\n      )}\n    </div>\n  );\n}\n\ninterface TimelineItemProps {\n  children: ReactNode;\n  className?: string;\n  isLast?: boolean;\n}\nexport function TimelineItem({children, className, isLast}: TimelineItemProps) {\n  return (\n    <div className={clsx('flex gap-12', className)}>\n      <div>\n        <div className=\"mt-4 h-12 w-12 flex-shrink-0 rounded-full border-[3px]\" />\n        {!isLast && (\n          <div className=\"mx-auto mt-4 h-[calc(100%-12px)] w-1 bg-chip\"></div>\n        )}\n      </div>\n      <div className=\"flex-auto\">{children}</div>\n    </div>\n  );\n}\n","import {useActivityLog} from '@app/agent/agent-ticket-page/user-details-sidebar/activity-log/use-activity-log';\nimport {Ticket, TICKET_MODEL_TYPE} from '@app/agent/ticket';\nimport {UserDetailsSection} from '@app/agent/agent-ticket-page/user-details-sidebar/user-details-section';\nimport {Trans} from '@common/i18n/trans';\nimport {\n  ActivityLogItem,\n  TicketActivityLogItem,\n} from '@app/agent/agent-ticket-page/user-details-sidebar/activity-log/activity-log-item';\nimport {Article, ARTICLE_MODEL} from '@app/help-center/articles/article';\nimport {ArticleLink} from '@app/help-center/articles/article-link';\nimport clsx from 'clsx';\nimport {FormattedRelativeTime} from '@common/i18n/formatted-relative-time';\nimport {FormattedDate} from '@common/i18n/formatted-date';\nimport {TicketPageLink} from '@app/agent/agent-ticket-page/ticket-page-link';\nimport {\n  SEARCH_TERM_MODEL,\n  SearchTerm,\n} from '@app/agent/agent-search-page/search-term';\nimport {Link} from 'react-router-dom';\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport {Timeline, TimelineItem} from '@common/ui/timeline';\nimport {Fragment} from 'react';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\nimport {Skeleton} from '@common/ui/skeleton/skeleton';\n\nconst timePreset: Intl.DateTimeFormatOptions = {\n  hour: 'numeric',\n  minute: 'numeric',\n};\n\ninterface Props {\n  ticket: Ticket;\n}\nexport function ActivityList({ticket}: Props) {\n  const userId = ticket.user!.id;\n  const query = useActivityLog({userId});\n\n  const skeletons = (\n    <m.div key=\"skeletons\" className=\"px-14 py-6\" {...opacityAnimation}>\n      {Array.from({length: 5}).map((_, index) => (\n        <Skeleton className=\"min-h-48\" key={index} />\n      ))}\n    </m.div>\n  );\n\n  const timeline = (\n    <Fragment>\n      <m.div key=\"timeline\" {...opacityAnimation}>\n        <Timeline>\n          {query.items.map(activity => (\n            <TimelineItem\n              key={activity.id}\n              className={clsx(\n                'px-14 py-6',\n                activity.event === 'created' &&\n                  activity.subject?.id === ticket.id &&\n                  'bg-primary/8',\n              )}\n            >\n              <ListItem activity={activity} />\n              <div className=\"flex items-center gap-4 text-xs text-muted\">\n                <FormattedRelativeTime date={activity.created_at} />\n                <div>&bull;</div>\n                <FormattedDate\n                  date={activity.created_at}\n                  options={timePreset}\n                />\n              </div>\n            </TimelineItem>\n          ))}\n        </Timeline>\n      </m.div>\n      <InfiniteScrollSentinel query={query} size=\"sm\" />\n    </Fragment>\n  );\n\n  return (\n    <UserDetailsSection\n      label={<Trans message=\"Activity\" />}\n      name=\"activity-visible\"\n      className=\"mt-10\"\n    >\n      <AnimatePresence initial={false} mode=\"wait\">\n        {query.isLoading ? skeletons : timeline}\n      </AnimatePresence>\n    </UserDetailsSection>\n  );\n}\n\ninterface ListItemProps {\n  activity: ActivityLogItem;\n}\nfunction ListItem({activity}: ListItemProps) {\n  switch (activity.subject?.model_type) {\n    case ARTICLE_MODEL:\n      return (\n        <Trans\n          message=\"Viewd article: :link\"\n          values={{\n            link: (\n              <ArticleLink\n                target=\"_blank\"\n                className=\"font-semibold\"\n                article={activity.subject as Article}\n              />\n            ),\n          }}\n        />\n      );\n    case TICKET_MODEL_TYPE:\n      return <TicketListItem activity={activity as TicketActivityLogItem} />;\n    case SEARCH_TERM_MODEL:\n      const term = (activity.subject as SearchTerm).term;\n      return (\n        <Trans\n          message=\"Search for: :link\"\n          values={{\n            link: (\n              <Link\n                target=\"_blank\"\n                className=\"font-semibold\"\n                to={`/hc/search?query=${term}`}\n              >\n                {term}\n              </Link>\n            ),\n          }}\n        />\n      );\n    default:\n      return null;\n  }\n}\n\ninterface TicketListItemProps {\n  activity: TicketActivityLogItem;\n}\nfunction TicketListItem({activity}: TicketListItemProps) {\n  const link = (\n    <TicketPageLink\n      target=\"_blank\"\n      className=\"font-semibold\"\n      ticket={activity.subject as Ticket}\n    />\n  );\n  if (activity.event === 'replied') {\n    if (activity.properties?.source === 'email') {\n      return <Trans message=\"Replied via email: :link\" values={{link}} />;\n    } else {\n      return <Trans message=\"Replied via website: :link\" values={{link}} />;\n    }\n  } else if (activity.event === 'created') {\n    return <Trans message=\"Created ticket: :link\" values={{link}} />;\n  } else if (activity.event === 'articlesSuggested') {\n    return (\n      <Trans\n        message={`Suggested :count articles for \":query\"`}\n        values={{\n          count: activity.properties?.articleIds?.length || 1,\n          query: activity.properties?.query,\n        }}\n      />\n    );\n  }\n  return null;\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {useParams} from 'react-router-dom';\nimport {Ticket} from '@app/agent/ticket';\n\ninterface Response extends BackendResponse {\n  ticket: Ticket;\n}\n\ninterface Payload {\n  mergeeId: number;\n}\n\nexport function useMergeTickets() {\n  const {ticketId} = useParams();\n  return useMutation({\n    mutationFn: (payload: Payload) =>\n      mergeTickets({\n        ...payload,\n        ticketId: ticketId!,\n      }),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({queryKey: ['tickets']});\n      toast(message('Merged tickets'));\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction mergeTickets(\n  payload: Payload & {ticketId: number | string},\n): Promise<Response> {\n  return apiClient.post(`tickets/merge`, payload).then(r => r.data);\n}\n","import {\r\n  GetTicketResponse,\r\n  useTicket,\r\n} from '@app/agent/agent-ticket-page/requests/use-ticket';\r\nimport React, {Fragment} from 'react';\r\nimport {PageStatus} from '@common/http/page-status';\r\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\r\nimport {Dialog} from '@common/ui/overlays/dialog/dialog';\r\nimport {TicketHeaderLayout} from '@app/agent/ticket-layout/ticket-header-layout';\r\nimport {TicketTagList} from '@app/agent/ticket-layout/ticket-tag-list';\r\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {TicketReplyLayout} from '@app/agent/ticket-layout/ticket-reply-layout';\r\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\r\nimport {useTicketReplies} from '@app/agent/agent-ticket-page/reply-list/requests/use-ticket-replies';\r\nimport {FileEntry} from '@common/uploads/file-entry';\r\nimport {\r\n  AttachmentListLayout,\r\n  FileEntryAttachmentLayout,\r\n} from '@app/agent/ticket-layout/attachment-list-layout';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {Link} from 'react-router-dom';\r\nimport {getTicketPageLink} from '@app/agent/agent-ticket-page/ticket-page-link';\r\nimport {Ticket} from '@app/agent/ticket';\r\nimport {useMergeTickets} from '@app/agent/agent-ticket-page/user-details-sidebar/requests/use-merge-tickets';\r\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\r\nimport {ConfirmationDialog} from '@common/ui/overlays/dialog/confirmation-dialog';\r\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\r\n\r\ninterface Props {\r\n  ticketId: number;\r\n}\r\nexport function TicketPreviewDialog({ticketId}: Props) {\r\n  const query = useTicket(ticketId);\r\n  return (\r\n    <Dialog size=\"fullscreen\" className=\"h-dialog\">\r\n      <DialogHeader\r\n        showDivider\r\n        padding=\"px-24 py-12\"\r\n        titleFontWeight=\"font-normal\"\r\n        titleTextSize=\"text-base\"\r\n        justify=\"justify-start\"\r\n        actions={\r\n          query.data?.ticket ? <Actions ticket={query.data?.ticket} /> : null\r\n        }\r\n      >\r\n        <Trans message=\"Ticket preview\" />\r\n      </DialogHeader>\r\n      <DialogBody className=\"bg\" padding=\"p-0\">\r\n        {query.data ? (\r\n          <Content data={query.data} />\r\n        ) : (\r\n          <PageStatus query={query} loaderClassName=\"absolute inset-0 m-auto\" />\r\n        )}\r\n      </DialogBody>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\ninterface ActionsProps {\r\n  ticket: Ticket;\r\n}\r\nfunction Actions({ticket}: ActionsProps) {\r\n  const {close} = useDialogContext();\r\n\r\n  return (\r\n    <Fragment>\r\n      <Button\r\n        elementType={Link}\r\n        to={getTicketPageLink(ticket)}\r\n        variant=\"outline\"\r\n        size=\"xs\"\r\n      >\r\n        <Trans message=\"Open ticket\" />\r\n      </Button>\r\n      <DialogTrigger\r\n        type=\"modal\"\r\n        onClose={newTicket => {\r\n          if (newTicket) {\r\n            close();\r\n          }\r\n        }}\r\n      >\r\n        <Button variant=\"outline\" size=\"xs\" className=\"mr-48\">\r\n          <Trans message=\"Merge\" />\r\n        </Button>\r\n        <ConfirmMergeDialog ticket={ticket} />\r\n      </DialogTrigger>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface ConfirmMergeDialogProps {\r\n  ticket: Ticket;\r\n}\r\nfunction ConfirmMergeDialog({ticket}: ConfirmMergeDialogProps) {\r\n  const mergeTickets = useMergeTickets();\r\n  const {close} = useDialogContext();\r\n  return (\r\n    <ConfirmationDialog\r\n      title={<Trans message=\"Merge tickets\" />}\r\n      isLoading={mergeTickets.isPending}\r\n      onConfirm={() => {\r\n        mergeTickets.mutate(\r\n          {mergeeId: ticket.id},\r\n          {onSuccess: response => close(response.ticket)},\r\n        );\r\n      }}\r\n      body={\r\n        <div>\r\n          <Trans message=\"Please confirm you'd like to merge this ticket with the original one behind the popup.\" />\r\n          <p className=\"mt-12 font-semibold\">\r\n            <Trans message=\"Merged tickets cannot be unmerged.\" />\r\n          </p>\r\n        </div>\r\n      }\r\n      confirm={<Trans message=\"Merge\" />}\r\n    />\r\n  );\r\n}\r\n\r\ninterface ContentProps {\r\n  data: GetTicketResponse;\r\n}\r\nfunction Content({data}: ContentProps) {\r\n  return (\r\n    <div>\r\n      <TicketHeaderLayout ticket={data.ticket}>\r\n        <TicketTagList ticket={data.ticket} />\r\n      </TicketHeaderLayout>\r\n      <ReplyList data={data} />\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface ReplyListProps {\r\n  data: GetTicketResponse;\r\n}\r\nfunction ReplyList({data: {ticket, replies}}: ReplyListProps) {\r\n  const query = useTicketReplies(ticket.id, replies);\r\n  return (\r\n    <Fragment>\r\n      {query.items.map(reply => {\r\n        const isInitial =\r\n          !query.hasNextPage && reply.id === query.items.at(-1)?.id;\r\n        return (\r\n          <TicketReplyLayout\r\n            key={reply.id}\r\n            reply={reply}\r\n            isInitial={isInitial}\r\n            className=\"px-20\"\r\n            ticketRequestType={ticket.ticket_request_type}\r\n            attachments={\r\n              reply.attachments?.length ? (\r\n                <AttachmentList attachments={reply.attachments} />\r\n              ) : null\r\n            }\r\n          />\r\n        );\r\n      })}\r\n      <InfiniteScrollSentinel query={query} />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface AttachmentListProps {\r\n  attachments: FileEntry[];\r\n}\r\nfunction AttachmentList({attachments}: AttachmentListProps) {\r\n  return (\r\n    <AttachmentListLayout className=\"mt-30 w-max\">\r\n      {attachments.map((attachment, index) => (\r\n        <FileEntryAttachmentLayout\r\n          key={attachment.id}\r\n          attachments={attachments}\r\n          index={index}\r\n        />\r\n      ))}\r\n    </AttachmentListLayout>\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {UseFormReturn} from 'react-hook-form';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {Ticket} from '@app/agent/ticket';\n\ninterface Response extends BackendResponse {\n  ticket: Ticket;\n}\n\nexport interface UpdateTicketPayload {\n  user_id?: number;\n  subject?: string;\n  status?: string;\n  category_id?: number;\n}\n\nexport function useUpdateTicket(\n  ticketId: number | string,\n  form?: UseFormReturn<UpdateTicketPayload>,\n) {\n  return useMutation({\n    mutationFn: (payload: UpdateTicketPayload) =>\n      updateTicket(ticketId, payload),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({queryKey: ['tickets']});\n    },\n    onError: err =>\n      form ? onFormQueryError(err, form) : showHttpErrorToast(err),\n  });\n}\n\nfunction updateTicket(\n  ticketId: number | string,\n  payload: UpdateTicketPayload,\n): Promise<Response> {\n  return apiClient.put(`tickets/${ticketId}`, payload).then(r => r.data);\n}\n","import {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {Trans} from '@common/i18n/trans';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {Form} from '@common/ui/forms/form';\nimport {useForm} from 'react-hook-form';\nimport {\n  UpdateTicketPayload,\n  useUpdateTicket,\n} from '@app/agent/agent-ticket-page/user-details-sidebar/requests/use-update-ticket';\nimport {FormNormalizedModelField} from '@common/ui/forms/normalized-model-field';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {Button} from '@common/ui/buttons/button';\n\ninterface Props {\n  ticketId: string | number;\n}\nexport function ChangeCustomerDialog({ticketId}: Props) {\n  const {close, formId} = useDialogContext();\n  const form = useForm<UpdateTicketPayload>();\n  const updateTicket = useUpdateTicket(ticketId, form);\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Change customer\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          id={formId}\n          form={form}\n          onSubmit={values => {\n            updateTicket.mutate(values, {onSuccess: () => close()});\n          }}\n        >\n          <FormNormalizedModelField\n            required\n            name=\"user_id\"\n            endpoint=\"normalized-models/user\"\n            label={<Trans message=\"New customer\" />}\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          type=\"submit\"\n          form={formId}\n          variant=\"flat\"\n          color=\"primary\"\n          disabled={updateTicket.isPending}\n        >\n          <Trans message=\"Change\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import clsx from 'clsx';\nimport {Link} from 'react-router-dom';\nimport {getCustomerLink} from '@app/agent/customer-page/customer-link';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {SettingsIcon} from '@common/icons/material/Settings';\nimport {EmailIcon} from '@common/icons/material/Email';\nimport {useTicket} from '@app/agent/agent-ticket-page/requests/use-ticket';\nimport {TicketPagePurchaseList} from '@app/agent/agent-ticket-page/user-details-sidebar/ticket-page-purchase-list';\nimport {useTickets} from '@app/agent/agent-ticket-page/user-details-sidebar/requests/use-tickets';\nimport {Fragment} from 'react';\nimport {Ticket} from '@app/agent/ticket';\nimport {UserDetailsSection} from '@app/agent/agent-ticket-page/user-details-sidebar/user-details-section';\nimport {Trans} from '@common/i18n/trans';\nimport {ActivityList} from '@app/agent/agent-ticket-page/user-details-sidebar/activity-list';\nimport {useSettings} from '@common/core/settings/use-settings';\nimport {Skeleton} from '@common/ui/skeleton/skeleton';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\nimport {UserAvatar} from '@common/ui/images/user-avatar';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {ButtonBase} from '@common/ui/buttons/button-base';\nimport {TicketPreviewDialog} from '@app/agent/agent-ticket-page/ticket-preview-dialog';\nimport {ChipList} from '@common/ui/forms/input-field/chip-field/chip-list';\nimport {Chip} from '@common/ui/forms/input-field/chip-field/chip';\nimport {Menu, MenuTrigger} from '@common/ui/navigation/menu/menu-trigger';\nimport {Item} from '@common/ui/forms/listbox/item';\nimport {openDialog} from '@common/ui/overlays/store/dialog-store';\nimport {ChangeCustomerDialog} from '@app/agent/agent-ticket-page/user-details-sidebar/change-customer-dialog';\n\ninterface Props {\n  className?: string;\n}\nexport function UserDetailsSidebar({className}: Props) {\n  const {tickets} = useSettings();\n  const {data} = useTicket();\n  return (\n    <div\n      className={clsx(\n        className,\n        'compact-scrollbar stable-scrollbar overflow-y-auto border-l',\n      )}\n    >\n      {data?.ticket.user && (\n        <Fragment>\n          <CustomerDetails ticket={data.ticket} />\n          <OtherTickets ticket={data.ticket} />\n          {tickets?.log_activity && <ActivityList ticket={data.ticket} />}\n        </Fragment>\n      )}\n    </div>\n  );\n}\n\ninterface CustomerDetailsProps {\n  ticket: Ticket;\n}\nfunction CustomerDetails({ticket}: CustomerDetailsProps) {\n  const user = ticket.user!;\n  const {envato} = useSettings();\n  const editLink = getCustomerLink(user.id);\n  return (\n    <div className=\"py-14\">\n      <Link to={editLink} target=\"_blank\">\n        <UserAvatar user={user} size=\"xl\" circle className=\"mx-auto\" />\n      </Link>\n      <section className=\"mb-14 border-b px-14 pb-14 text-muted\">\n        <div className=\"mt-10 flex items-center justify-between gap-14 text-muted\">\n          <div>{user.display_name}</div>\n          <MenuTrigger>\n            <IconButton size=\"sm\">\n              <SettingsIcon />\n            </IconButton>\n            <Menu>\n              <Item\n                value=\"edit\"\n                elementType={Link}\n                to={editLink}\n                target=\"_blank\"\n              >\n                <Trans message=\"Edit\" />\n              </Item>\n              <Item\n                value=\"changeCustomer\"\n                onSelected={() =>\n                  openDialog(ChangeCustomerDialog, {ticketId: ticket.id})\n                }\n              >\n                <Trans message=\"Change customer\" />\n              </Item>\n            </Menu>\n          </MenuTrigger>\n        </div>\n        <div className=\"flex items-center gap-4\">\n          <EmailIcon size=\"xs\" />\n          <div className=\"text-sm\">{user.email}</div>\n        </div>\n        {!!user.tags?.length && (\n          <ChipList size=\"xs\" className=\"mt-14\">\n            {user.tags?.map(tag => (\n              <Chip key={tag.id}>{tag.display_name}</Chip>\n            ))}\n          </ChipList>\n        )}\n      </section>\n      {envato.enable && <TicketPagePurchaseList user={user} ticket={ticket} />}\n    </div>\n  );\n}\n\ninterface OtherTicketsProps {\n  ticket: Ticket;\n}\nfunction OtherTickets({ticket}: OtherTicketsProps) {\n  const user = ticket.user!;\n  const {data, isLoading} = useTickets({\n    userId: user.id,\n    perPage: 6,\n    paginate: 'simple',\n  });\n\n  const skeletons = (\n    <m.div key=\"skeletons\" {...opacityAnimation}>\n      {Array.from({length: 5}).map((_, index) => (\n        <Skeleton className=\"min-h-24\" key={index} />\n      ))}\n    </m.div>\n  );\n  const tickets = (\n    <m.div key=\"tickets\" {...opacityAnimation}>\n      {data?.pagination.data\n        .filter(t => t.id !== ticket.id)\n        .map(ticket => (\n          <DialogTrigger type=\"modal\" key={ticket.id}>\n            <ButtonBase\n              display=\"block\"\n              className={clsx(\n                'block min-w-0 max-w-full overflow-hidden text-ellipsis pb-4 text-sm hover:underline',\n                ticket.closed_at && 'text-muted',\n              )}\n            >\n              {ticket.subject}\n            </ButtonBase>\n            <TicketPreviewDialog ticketId={ticket.id} />\n          </DialogTrigger>\n        ))}\n    </m.div>\n  );\n\n  return (\n    <UserDetailsSection\n      label={<Trans message=\"Other tickets\" />}\n      name=\"other-tickets\"\n    >\n      <AnimatePresence initial={false} mode=\"wait\">\n        <div className=\"space-y-10 px-14\">\n          {isLoading ? skeletons : tickets}\n        </div>\n      </AnimatePresence>\n    </UserDetailsSection>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {Reply} from '@app/agent/reply';\nimport {\n  ActiveDraft,\n  useTicketPageStore,\n} from '@app/agent/agent-ticket-page/ticket-page-store';\nimport {useParams} from 'react-router-dom';\n\ninterface Response {\n  reply: Reply;\n}\n\ninterface Params {\n  draft: ActiveDraft;\n  type: 'background' | 'manual';\n  ticketId?: number | string;\n}\n\nexport function useSaveDraft() {\n  const urlParams = useParams();\n  const {updateActiveDraft, setEditorIsOpen} = useTicketPageStore();\n  return useMutation({\n    mutationFn: (params: Params) => {\n      updateActiveDraft({isSaving: true});\n      const ticketId = params.ticketId || urlParams.ticketId;\n      return saveDraft(params.draft, ticketId!);\n    },\n    onSuccess: async (response, params) => {\n      if (params.type !== 'background') {\n        const ticketId = params.ticketId || urlParams.ticketId;\n        await queryClient.invalidateQueries({\n          queryKey: ['tickets', `${ticketId}`],\n        });\n        setEditorIsOpen(false);\n      }\n      updateActiveDraft({\n        isDirty: false,\n        id: response.reply.id,\n      });\n    },\n    onError: err => showHttpErrorToast(err),\n    onSettled: () => {\n      updateActiveDraft({isSaving: false});\n    },\n  });\n}\n\nfunction saveDraft(\n  activeDraft: ActiveDraft,\n  ticketId: string | number,\n): Promise<Response> {\n  const payload = {\n    body: activeDraft.body,\n    attachments: activeDraft.attachments.map(u => u.id),\n  };\n  const request = activeDraft.id\n    ? apiClient.put(`replies/${activeDraft.id}`, payload)\n    : apiClient.post(`tickets/${ticketId}/drafts`, payload);\n  return request.then(r => r.data);\n}\n","import {useCallback} from 'react';\nimport {useSaveDraft} from '@app/agent/agent-ticket-page/requests/use-save-draft';\nimport {ticketPageStore} from '@app/agent/agent-ticket-page/ticket-page-store';\n\nexport function useBackgroundDraftSave() {\n  const saveDraft = useSaveDraft();\n  return useCallback(\n    (\n      type: 'background' | 'manual' = 'background',\n      ticketId?: number | string\n    ) => {\n      if (\n        ticketPageStore().activeDraft.isDirty &&\n        !ticketPageStore().activeDraft.isSaving &&\n        !ticketPageStore().ticketIsSaving\n      ) {\n        saveDraft.mutate({\n          ticketId,\n          draft: ticketPageStore().activeDraft,\n          type,\n        });\n      }\n    },\n    [saveDraft]\n  );\n}\n","import {Query, useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {Reply} from '@app/agent/reply';\nimport {useAfterReplyAction} from '@app/agent/agent-ticket-page/use-after-reply-action';\nimport {useDeleteDraft} from '@app/agent/agent-ticket-page/reply-list/requests/use-delete-draft';\nimport {\n  ticketPageStore,\n  useTicketPageStore,\n} from '@app/agent/agent-ticket-page/ticket-page-store';\nimport {useParams} from 'react-router-dom';\n\ninterface SubmitReplyResponse {\n  reply: Reply;\n}\n\ninterface Payload {\n  type: 'drafts' | 'replies' | 'notes';\n  body: string | null;\n  status?: string;\n  attachments?: number[];\n}\n\nexport function useSubmitAgentReply() {\n  const {ticketId} = useParams();\n  const {perform, action} = useAfterReplyAction();\n  const deleteDraft = useDeleteDraft({clearTicketCache: false});\n  const {setTicketIsSaving} = useTicketPageStore();\n  return useMutation({\n    mutationFn: (payload: Payload) => {\n      setTicketIsSaving(true);\n      return submitReply({\n        ticketId: ticketId!,\n        ...payload,\n      });\n    },\n    onSuccess: async () => {\n      // no need to wait for these to finish\n      queryClient.invalidateQueries({queryKey: ['mailbox', 'sidenav-tags']});\n      if (ticketPageStore().activeDraft.id) {\n        deleteDraft.mutate({id: ticketPageStore().activeDraft.id!});\n      }\n      ticketPageStore().discardActiveDraft();\n\n      await Promise.allSettled([\n        queryClient.invalidateQueries({\n          queryKey: ['tickets'],\n          predicate: q => {\n            // don't invalidate currently active ticket to avoid flickering\n            return (\n              action === 'stay_on_page' || !shouldIgnoreQuery(q, ticketId!)\n            );\n          },\n        }),\n        perform(),\n      ]);\n      toast(message('Reply submitted'));\n    },\n    onError: err => showHttpErrorToast(err),\n    onSettled: () => setTicketIsSaving(false),\n  });\n}\n\nfunction submitReply(payload: Payload & {ticketId: number | string}) {\n  return apiClient\n    .post<SubmitReplyResponse>(\n      `tickets/${payload.ticketId}/${payload.type}`,\n      payload,\n    )\n    .then(r => r.data);\n}\n\nfunction shouldIgnoreQuery(q: Query, ticketId: number | string) {\n  const isActiveTicket =\n    q.queryKey[0] === 'tickets' && q.queryKey[1] === `${ticketId}`;\n  const isOtherUserTickets =\n    q.queryKey[0] === 'tickets' &&\n    typeof q.queryKey[1] === 'object' &&\n    q.queryKey[1] &&\n    'userId' in q.queryKey[1];\n  return isActiveTicket || isOtherUserTickets;\n}\n","import React, {Fragment, useCallback} from 'react';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {CheckCircleIcon} from '@common/icons/material/CheckCircle';\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\nimport {Trans} from '@common/i18n/trans';\nimport {DeleteIcon} from '@common/icons/material/Delete';\nimport {useSaveDraft} from '@app/agent/agent-ticket-page/requests/use-save-draft';\nimport {useDeleteDraft} from '@app/agent/agent-ticket-page/reply-list/requests/use-delete-draft';\nimport {\n  ticketPageStore,\n  useTicketPageStore,\n} from '@app/agent/agent-ticket-page/ticket-page-store';\nimport {useKeybind} from '@common/utils/keybinds/use-keybind';\nimport {MenubarButtonProps} from '@common/text-editor/menubar/menubar-button-props';\n\ninterface Props {\n  size?: MenubarButtonProps['size'];\n}\nexport function AgentReplyEditorDraftButtons({size = 'sm'}: Props) {\n  const isDirty = useTicketPageStore(s => s.activeDraft.isDirty);\n  const isSaving = useTicketPageStore(s => s.activeDraft.isSaving);\n  const isEmpty = useTicketPageStore(\n    s => !s.activeDraft.body && !s.activeDraft.attachments?.length,\n  );\n  const saveDraft = useSaveDraft();\n  const deleteDraft = useDeleteDraft();\n\n  const handleDraftSave = () => {\n    saveDraft.mutate({\n      draft: ticketPageStore().activeDraft,\n      type: 'manual',\n    });\n  };\n\n  const handleDraftDelete = useCallback(() => {\n    if (ticketPageStore().activeDraft.id) {\n      deleteDraft.mutate(\n        {id: ticketPageStore().activeDraft.id!},\n        {onSuccess: () => ticketPageStore().setEditorIsOpen(false)},\n      );\n    } else {\n      ticketPageStore().setEditorIsOpen(false);\n    }\n  }, [deleteDraft]);\n\n  useKeybind('window', 'Escape', () => {\n    if (ticketPageStore().editorIsOpen) {\n      handleDraftDelete();\n    }\n  });\n\n  return (\n    <Fragment>\n      <Tooltip label={<Trans message=\"Save draft\" />}>\n        <IconButton\n          className=\"ml-auto\"\n          size={size}\n          color={!isDirty ? 'positive' : null}\n          onClick={handleDraftSave}\n          disabled={isSaving || isEmpty}\n        >\n          <CheckCircleIcon />\n        </IconButton>\n      </Tooltip>\n      <Tooltip label={<Trans message=\"Discard (Esc)\" />}>\n        <IconButton size={size} disabled={isSaving} onClick={handleDraftDelete}>\n          <DeleteIcon />\n        </IconButton>\n      </Tooltip>\n    </Fragment>\n  );\n}\n","import {keepPreviousData, useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {PaginatedBackendResponse} from '@common/http/backend-response/pagination-response';\nimport {useAuth} from '@common/auth/use-auth';\nimport {CannedReply} from '@app/agent/agent-ticket-page/canned-replies/canned-reply';\n\ninterface Response extends PaginatedBackendResponse<CannedReply> {}\n\nexport function useCannedReplies(query: string = '') {\n  const {user} = useAuth();\n  return useQuery({\n    queryKey: ['canned-replies', `${user?.id}`, query],\n    queryFn: ({signal}) => fetchCannedReplies(user!.id, query, signal),\n    placeholderData: keepPreviousData,\n  });\n}\n\nasync function fetchCannedReplies(\n  userId: number,\n  query: string,\n  signal?: AbortSignal,\n) {\n  if (query) {\n    await new Promise(resolve => setTimeout(resolve, 300));\n  }\n  return apiClient\n    .get<Response>('canned-replies', {\n      params: {userId, shared: true, perPage: 15, query},\n      signal,\n    })\n    .then(response => response.data);\n}\n","import {Menu, MenuTrigger} from '@common/ui/navigation/menu/menu-trigger';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {CommentIcon} from '@common/icons/material/Comment';\nimport {Item} from '@common/ui/forms/listbox/item';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {message} from '@common/i18n/message';\nimport {useCannedReplies} from '@app/agent/agent-ticket-page/canned-replies/requests/use-canned-replies';\nimport {Trans} from '@common/i18n/trans';\nimport {CannedReply} from '@app/agent/agent-ticket-page/canned-replies/canned-reply';\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\nimport {openDialog} from '@common/ui/overlays/store/dialog-store';\nimport {CreateCannedReplyDialog} from '@app/agent/agent-ticket-page/canned-replies/create-canned-reply-dialog';\nimport {ButtonSize} from '@common/ui/buttons/button-size';\nimport {useState} from 'react';\n\ninterface Props {\n  onSelected: (reply: CannedReply) => void;\n  size?: ButtonSize;\n}\nexport function CannedReplySelector({onSelected, size}: Props) {\n  const {trans} = useTrans();\n  const [query, setQuery] = useState('');\n  const {data, isFetching} = useCannedReplies(query);\n\n  return (\n    <MenuTrigger\n      isAsync\n      searchPlaceholder={trans(message('Search...'))}\n      isLoading={isFetching}\n      inputValue={query}\n      onInputValueChange={setQuery}\n      clearInputOnItemSelection\n      blurReferenceOnItemSelection\n      selectionMode=\"none\"\n      showSearchField\n      floatingMaxHeight={440}\n      floatingMinWidth=\"min-w-288\"\n      showEmptyMessage\n    >\n      <Tooltip label={<Trans message=\"Saved replies\" />}>\n        <IconButton size={size}>\n          <CommentIcon />\n        </IconButton>\n      </Tooltip>\n      <Menu>\n        <Item\n          value=\"saveThisReply\"\n          className=\"font-semibold\"\n          onSelected={() => openDialog(CreateCannedReplyDialog)}\n        >\n          <Trans message=\"Save this reply...\" />\n        </Item>\n        {data?.pagination.data.map(reply => (\n          <Item\n            value={reply.id}\n            key={reply.id}\n            onSelected={() => onSelected(reply)}\n          >\n            {reply.name}\n          </Item>\n        ))}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","import React, {useRef, useState} from 'react';\nimport {useSearchArticles} from '@app/help-center/search/use-search-articles';\nimport {ComboBox} from '@common/ui/forms/combobox/combobox';\nimport {SearchIcon} from '@common/icons/material/Search';\nimport {Item} from '@common/ui/forms/listbox/item';\nimport {ArticlePath} from '@app/help-center/articles/article-path';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {message} from '@common/i18n/message';\nimport {Article} from '@app/help-center/articles/article';\nimport {useKeybind} from '@common/utils/keybinds/use-keybind';\nimport {useTicketHcCategories} from '@app/agent/agent-ticket-page/requests/use-ticket';\n\ninterface Props {\n  onSelected: (article: Article) => void;\n}\nexport function TicketPageDocsSearchInput({onSelected}: Props) {\n  const hcCategories = useTicketHcCategories();\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [query, setQuery] = useState('');\n  const {data, isFetching} = useSearchArticles(query, {\n    categoryIds: hcCategories,\n  });\n  const {trans} = useTrans();\n\n  useKeybind(\n    'window',\n    'ctrl+/',\n    () => {\n      inputRef.current?.focus();\n    },\n    {allowedInputSelector: '.ProseMirror'},\n  );\n\n  return (\n    <ComboBox\n      inputValue={query}\n      onInputValueChange={setQuery}\n      isAsync\n      isLoading={isFetching}\n      items={data?.pagination.data}\n      clearInputOnItemSelection\n      hideEndAdornment\n      placeholder={trans(message('Search documentation... (ctrl+/)'))}\n      startAdornment={<SearchIcon />}\n      className=\"mb-10\"\n      selectionMode=\"none\"\n      showEmptyMessage\n      ref={inputRef}\n    >\n      {result => (\n        <Item\n          key={result.id}\n          value={result.id}\n          onSelected={() => {\n            close();\n            onSelected(result);\n          }}\n          description={<ArticlePath article={result} />}\n          textLabel={result.title}\n        >\n          {result.title}\n        </Item>\n      )}\n    </ComboBox>\n  );\n}\n","import React, {\n  Fragment,\n  MutableRefObject,\n  useCallback,\n  useEffect,\n  useRef,\n} from 'react';\nimport {Button} from '@common/ui/buttons/button';\nimport {Trans} from '@common/i18n/trans';\nimport {\n  Menu,\n  MenuItem,\n  MenuTrigger,\n} from '@common/ui/navigation/menu/menu-trigger';\nimport {useMailboxSidenavTags} from '@app/agent/use-mailbox-sidenav-tags';\nimport {KeyboardArrowDownIcon} from '@common/icons/material/KeyboardArrowDown';\nimport {\n  getFromLocalStorage,\n  useLocalStorage,\n} from '@common/utils/hooks/local-storage';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {ArrowDropDownIcon} from '@common/icons/material/ArrowDropDown';\nimport {\n  AfterReplyAction,\n  AfterReplyActions,\n  useAfterReplyAction,\n} from '@app/agent/agent-ticket-page/use-after-reply-action';\nimport {useSubmitAgentReply} from '@app/agent/agent-ticket-page/agent-reply-editor/use-submit-agent-reply';\nimport {Editor} from '@tiptap/react';\nimport {useGlobalListeners} from '@react-aria/utils';\nimport {AgentReplyEditorDraftButtons} from '@app/agent/agent-ticket-page/agent-reply-editor/agent-reply-editor-draft-buttons';\nimport {useBackgroundDraftSave} from '@app/agent/agent-ticket-page/agent-reply-editor/use-background-draft-save';\nimport {\n  ticketPageStore,\n  useTicketPageStore,\n} from '@app/agent/agent-ticket-page/ticket-page-store';\nimport {\n  ReplyEditor,\n  ReplyEditorToolbarButtonsProps,\n} from '@app/reply-editor/reply-editor';\nimport {SendReplyButton} from '@app/reply-editor/send-reply-button';\nimport {getReplyBody} from '@app/reply-editor/get-reply-body';\nimport {CannedReplySelector} from '@app/agent/agent-ticket-page/canned-replies/canned-reply-selector';\nimport {MenubarButtonProps} from '@common/text-editor/menubar/menubar-button-props';\nimport {TicketPageDocsSearchInput} from '@app/agent/agent-ticket-page/ticket-page-docs-search-input';\nimport {getArticleLink} from '@app/help-center/articles/article-link';\nimport {insertLinkIntoTextEditor} from '@common/text-editor/insert-link-into-text-editor';\n\nexport function AgentReplyEditor() {\n  const {addGlobalListener} = useGlobalListeners();\n  const submitReply = useSubmitAgentReply();\n  const attachments = useTicketPageStore(s => s.activeDraft.attachments);\n  const editorRef = useRef<Editor | null>(null);\n\n  const handleSubmit = useCallback(() => {\n    if (!editorRef.current) return;\n    submitReply.mutate(\n      {\n        type: 'replies',\n        status: getFromLocalStorage('ticket-page-status', 'pending'),\n        attachments: ticketPageStore().activeDraft.attachments.map(u => u.id),\n        body: getReplyBody(editorRef),\n      },\n      {\n        onSuccess: () => {\n          ticketPageStore().setEditorIsOpen(false);\n        },\n      },\n    );\n  }, [submitReply]);\n\n  const handleBackgroundSave = useBackgroundDraftSave();\n\n  useEffect(() => {\n    addGlobalListener(document, 'visibilitychange', () => {\n      if (document.hidden) {\n        handleBackgroundSave();\n      }\n    });\n  }, [addGlobalListener, handleBackgroundSave]);\n\n  return (\n    <div className=\"mb-24 px-20\">\n      <TicketPageDocsSearchInput\n        onSelected={article => {\n          if (editorRef.current) {\n            insertLinkIntoTextEditor(editorRef.current, {\n              href: getArticleLink(article),\n              target: '_blank',\n              text: article.title,\n            });\n          }\n        }}\n      />\n      <ReplyEditor\n        menubarButtons={<MenubarButtons editorRef={editorRef} />}\n        footerButtons={<FooterButtons />}\n        attachments={attachments}\n        onAttachmentsChange={attachments => {\n          ticketPageStore().updateActiveDraft({attachments});\n        }}\n        editorRef={editorRef}\n        onSubmit={handleSubmit}\n        isLoading={submitReply.isPending}\n        initialContent={ticketPageStore().activeDraft?.body}\n        onChange={() => {\n          if (editorRef.current) {\n            ticketPageStore().updateActiveDraft({\n              body: editorRef.current.getHTML(),\n            });\n          }\n        }}\n      />\n    </div>\n  );\n}\n\ninterface MenubarButtonsProps {\n  size?: MenubarButtonProps['size'];\n  editorRef: MutableRefObject<Editor | null>;\n}\nfunction MenubarButtons({size, editorRef}: MenubarButtonsProps) {\n  return (\n    <Fragment>\n      <CannedReplySelector\n        size={size}\n        onSelected={reply => {\n          ticketPageStore().updateActiveDraft({\n            body: reply.body,\n            attachments: reply.attachments,\n          });\n          editorRef.current?.commands.insertContent(reply.body);\n        }}\n      />\n      <AgentReplyEditorDraftButtons size={size} />\n    </Fragment>\n  );\n}\n\nfunction FooterButtons({isLoading, onSubmit}: ReplyEditorToolbarButtonsProps) {\n  return (\n    <Fragment>\n      <StatusSelector />\n      <SendReplyButton isLoading={isLoading} onSubmit={onSubmit} />\n      <AfterReplyActionSelector disabled={isLoading} />\n    </Fragment>\n  );\n}\n\ninterface AfterReplyActionSelectorProps {\n  disabled?: boolean;\n}\nfunction AfterReplyActionSelector({disabled}: AfterReplyActionSelectorProps) {\n  const {action, setAction} = useAfterReplyAction();\n  return (\n    <MenuTrigger\n      selectionMode=\"single\"\n      selectedValue={action}\n      onItemSelected={newValue => setAction(newValue as AfterReplyAction)}\n    >\n      <IconButton\n        border=\"border border-transparent border-l-primary-light/40\"\n        variant=\"flat\"\n        color=\"primary\"\n        radius=\"rounded-none\"\n        size=\"sm\"\n        disabled={disabled}\n      >\n        <ArrowDropDownIcon />\n      </IconButton>\n      <Menu>\n        {Object.entries(AfterReplyActions).map(([key, label]) => (\n          <MenuItem key={key} value={key} capitalizeFirst>\n            <Trans {...label} />\n          </MenuItem>\n        ))}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n\nfunction StatusSelector() {\n  const {data} = useMailboxSidenavTags();\n  const [selectedStatus, setSelectedStatus] = useLocalStorage(\n    'ticket-page-status',\n    'pending',\n  );\n  if (!data?.statusTags.length) return null;\n  const selectedTag = data.statusTags.find(t => t.name === selectedStatus);\n  return (\n    <MenuTrigger\n      selectionMode=\"single\"\n      selectedValue={selectedStatus}\n      onItemSelected={newValue => setSelectedStatus(newValue as string)}\n    >\n      <Button\n        radius=\"rounded-none\"\n        endIcon={<KeyboardArrowDownIcon />}\n        className=\"capitalize text-muted\"\n      >\n        <Trans message={selectedTag!.display_name} />\n      </Button>\n      <Menu>\n        {data.statusTags.map(tag => (\n          <MenuItem key={tag.id} value={tag.name} capitalizeFirst>\n            <Trans message={tag.display_name} />\n          </MenuItem>\n        ))}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","import {useTicket} from '@app/agent/agent-ticket-page/requests/use-ticket';\nimport {DashboardSidenav} from '@common/ui/layout/dashboard-sidenav';\nimport React, {Fragment, useEffect} from 'react';\nimport {PageStatus} from '@common/http/page-status';\nimport {TicketPageToolbar} from '@app/agent/agent-ticket-page/ticket-page-toolbar';\nimport {AgentTicketPageReplyList} from '@app/agent/agent-ticket-page/reply-list/agent-ticket-page-reply-list';\nimport {TicketPageHeader} from '@app/agent/agent-ticket-page/ticket-page-header';\nimport {UserDetailsSidebar} from '@app/agent/agent-ticket-page/user-details-sidebar/user-details-sidebar';\nimport {\n  defaultDraftValues,\n  ticketPageStore,\n  useTicketPageStore,\n} from '@app/agent/agent-ticket-page/ticket-page-store';\nimport {usePrevious} from '@common/utils/hooks/use-previous';\nimport {useBackgroundDraftSave} from '@app/agent/agent-ticket-page/agent-reply-editor/use-background-draft-save';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {AgentReplyEditor} from '@app/agent/agent-ticket-page/agent-reply-editor/agent-reply-editor';\nimport {AgentPageLayout} from '@app/agent/agent-page-layout';\nimport {Helmet} from '@common/seo/helmet';\nimport {useSettings} from '@common/core/settings/use-settings';\n\nexport function AgentTicketPage() {\n  return (\n    <AgentPageLayout\n      rightSidenav={\n        <DashboardSidenav position=\"right\" className=\"bg-alt\" size=\"w-264\">\n          <UserDetailsSidebar />\n        </DashboardSidenav>\n      }\n    >\n      <TicketContent />\n    </AgentPageLayout>\n  );\n}\n\nfunction TicketContent() {\n  const {branding} = useSettings();\n  const query = useTicket();\n  const previousTicketId = usePrevious(query.data?.ticket.id);\n  const saveDraft = useBackgroundDraftSave();\n\n  useEffect(() => {\n    const ticket = query.data?.ticket;\n    if (ticket) {\n      const draft = ticket.replies?.find(reply => reply.type === 'drafts');\n      if (draft && previousTicketId !== ticket.id) {\n        ticketPageStore().updateActiveDraft({\n          ...defaultDraftValues,\n          ...draft,\n          isDirty: false,\n        });\n      }\n    }\n    return () => {\n      if (previousTicketId) {\n        saveDraft('manual', previousTicketId);\n        ticketPageStore().setEditorIsOpen(false);\n      }\n    };\n  }, [previousTicketId]);\n\n  return (\n    <Fragment>\n      {query.data ? (\n        <Fragment>\n          <Helmet>\n            <title>\n              {query.data.ticket.subject} - {branding.site_name}\n            </title>\n          </Helmet>\n          <TicketPageToolbar ticket={query.data.ticket} />\n          <TicketPageHeader data={query.data} />\n          <ReplyEditor />\n          <AgentTicketPageReplyList data={query.data} />\n        </Fragment>\n      ) : (\n        <PageStatus\n          query={query}\n          loaderClassName=\"absolute inset-0 m-auto\"\n          redirectOn404=\"/agent/tickets\"\n        />\n      )}\n    </Fragment>\n  );\n}\n\nfunction ReplyEditor() {\n  const editorIsOpen = useTicketPageStore(s => s.editorIsOpen);\n  return (\n    <FileUploadProvider>\n      {editorIsOpen && <AgentReplyEditor />}\n    </FileUploadProvider>\n  );\n}\n","import React from 'react';\nimport {CannedRepliesDatatablePage} from '@app/admin/canned-replies/canned-replies-datatable-page';\nimport {useAuth} from '@common/auth/use-auth';\nimport {AgentPageLayout} from '@app/agent/agent-page-layout';\n\nexport function AgentCannedRepliesPage() {\n  const {user} = useAuth();\n  return (\n    <AgentPageLayout>\n      <CannedRepliesDatatablePage userId={user?.id} />\n    </AgentPageLayout>\n  );\n}\n","import {useForm} from 'react-hook-form';\nimport {\n  CreateTicketPayload,\n  useCreateTicket,\n} from '@app/agent/agent-new-ticket-page/use-create-ticket';\nimport {Form} from '@common/ui/forms/form';\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@common/i18n/trans';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {FormNormalizedModelField} from '@common/ui/forms/normalized-model-field';\nimport {FormSelect} from '@common/ui/forms/select/select';\nimport {Item} from '@common/ui/forms/listbox/item';\nimport {\n  GetMailboxSidenavTags,\n  useMailboxSidenavTags,\n} from '@app/agent/use-mailbox-sidenav-tags';\nimport React, {useRef, useState} from 'react';\nimport {PageStatus} from '@common/http/page-status';\nimport {AgentPageLayout} from '@app/agent/agent-page-layout';\nimport {Button} from '@common/ui/buttons/button';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {ReplyEditor} from '@app/reply-editor/reply-editor';\nimport {Editor} from '@tiptap/react';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport {getReplyBody} from '@app/reply-editor/get-reply-body';\nimport {getInputFieldClassNames} from '@common/ui/forms/input-field/get-input-field-class-names';\nimport {useSearchParams} from 'react-router-dom';\n\nexport function AgentNewTicketPage() {\n  const query = useMailboxSidenavTags();\n  return (\n    <AgentPageLayout>\n      <main className=\"container mx-auto p-12 md:p-24\">\n        <h1 className=\"mb-34 mt-14 text-3xl font-light\">\n          <Trans message=\"Create new ticket\" />\n        </h1>\n        {query.data ? (\n          <TicketForm tags={query.data} />\n        ) : (\n          <PageStatus query={query} show404={false} loaderIsScreen={false} />\n        )}\n      </main>\n    </AgentPageLayout>\n  );\n}\n\ninterface TicketFormProps {\n  tags: GetMailboxSidenavTags;\n}\nfunction TicketForm({tags: {statusTags, categoryTags}}: TicketFormProps) {\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const customerId = searchParams.get('customer_id');\n  const form = useForm<CreateTicketPayload>({\n    defaultValues: {\n      category_id: categoryTags[0]?.id,\n      status: statusTags[0]?.name,\n      user_id: customerId ? parseInt(customerId) : undefined,\n    },\n  });\n  const bodyError = form.formState.errors.body?.message;\n  const createTicket = useCreateTicket(form);\n  const editorRef = useRef<Editor | null>(null);\n  const [attachments, setAttachments] = useState<FileEntry[]>([]);\n\n  const handleSubmit = () => {\n    createTicket.mutate(\n      {\n        ...form.getValues(),\n        body: getReplyBody(editorRef) || '',\n        attachments: attachments.map(a => a.id),\n        created_by_agent: true,\n      },\n      {\n        onSuccess: () => navigate('/agent/tickets'),\n      },\n    );\n  };\n\n  const inputFieldClassNames = getInputFieldClassNames();\n\n  return (\n    <Form\n      form={form}\n      onSubmit={() => handleSubmit()}\n      onBeforeSubmit={() => form.clearErrors()}\n    >\n      <FormNormalizedModelField\n        name=\"user_id\"\n        endpoint=\"normalized-models/user\"\n        label={<Trans message=\"Customer\" />}\n        className=\"mb-24\"\n        autoFocus\n      />\n      <FormTextField\n        name=\"subject\"\n        label={<Trans message=\"Subject\" />}\n        className=\"mb-24\"\n      />\n      <FormSelect\n        name=\"category_id\"\n        label={<Trans message=\"Category\" />}\n        selectionMode=\"single\"\n        className=\"mb-24\"\n      >\n        {categoryTags.map(category => (\n          <Item key={category.id} value={category.id}>\n            {category.display_name || category.name}\n          </Item>\n        ))}\n      </FormSelect>\n      <FormSelect\n        name=\"status\"\n        label={<Trans message=\"Status\" />}\n        selectionMode=\"single\"\n        className=\"mb-24\"\n      >\n        {statusTags.map(status => (\n          <Item key={status.id} value={status.name}>\n            {status.display_name || status.name}\n          </Item>\n        ))}\n      </FormSelect>\n      <div className=\"mb-24\">\n        <div className={inputFieldClassNames.label}>\n          <Trans message=\"Reply body\" />\n        </div>\n        <FileUploadProvider>\n          <ReplyEditor\n            autoFocus={false}\n            minHeight=\"min-h-[300px]\"\n            isLoading={createTicket.isPending}\n            editorRef={editorRef}\n            attachments={attachments}\n            onAttachmentsChange={attachments => setAttachments(attachments)}\n            onSubmit={() => handleSubmit()}\n          />\n        </FileUploadProvider>\n        {bodyError && (\n          <div className={inputFieldClassNames.error}>{bodyError}</div>\n        )}\n      </div>\n      <Button\n        variant=\"flat\"\n        color=\"primary\"\n        type=\"submit\"\n        disabled={createTicket.isPending}\n      >\n        <Trans message=\"Create\" />\n      </Button>\n    </Form>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {UseFormReturn} from 'react-hook-form';\nimport {Article} from '@app/help-center/articles/article';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\n\ninterface Response extends BackendResponse {\n  article: Article;\n}\n\nexport interface UpdateUserDetailsPayload {\n  language?: string;\n  country?: string;\n  timezone?: string;\n  details?: string;\n  notes?: string;\n  emails?: {id?: number; address: string}[];\n  tags?: string[];\n}\n\nexport function useUpdateUserDetails(\n  userId: string | number,\n  form: UseFormReturn<UpdateUserDetailsPayload>,\n) {\n  return useMutation({\n    mutationFn: (payload: UpdateUserDetailsPayload) =>\n      updateDetails(userId!, payload),\n    onSuccess: async () => {\n      form.reset({}, {keepValues: true});\n      await queryClient.invalidateQueries({queryKey: ['users']});\n      toast(message('User details updated'));\n    },\n    onError: err =>\n      form ? onFormQueryError(err, form) : showHttpErrorToast(err),\n  });\n}\n\nfunction updateDetails(\n  userId: string | number,\n  payload: UpdateUserDetailsPayload,\n): Promise<Response> {\n  return apiClient.put(`users/${userId}/details`, payload).then(r => r.data);\n}\n","import {User} from '@common/auth/user';\nimport {useSettings} from '@common/core/settings/use-settings';\nimport React, {Fragment, ReactElement, ReactNode} from 'react';\nimport {Trans} from '@common/i18n/trans';\nimport {EnvatoPurchaseList} from '@app/agent/agent-ticket-page/envato-purchase-list/envato-purchase-list';\nimport {useFieldArray, useForm} from 'react-hook-form';\nimport {getLocalTimeZone} from '@internationalized/date';\nimport {useValueLists} from '@common/http/value-lists';\nimport {Form} from '@common/ui/forms/form';\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {Button} from '@common/ui/buttons/button';\nimport {TimezoneSelect} from '@common/auth/ui/account-settings/timezone-select';\nimport {InfoDialogTrigger} from '@common/ui/overlays/dialog/info-dialog-trigger/info-dialog-trigger';\nimport {FormChipField} from '@common/ui/forms/input-field/chip-field/form-chip-field';\nimport {\n  UpdateUserDetailsPayload,\n  useUpdateUserDetails,\n} from '@app/agent/customer-page/requests/use-update-user-details';\nimport {AddIcon} from '@common/icons/material/Add';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {CloseIcon} from '@common/icons/material/Close';\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\nimport {FormSelect} from '@common/ui/forms/select/select';\nimport {Option} from '@common/ui/forms/combobox/combobox';\nimport {message} from '@common/i18n/message';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {DashboardSidenavChildrenProps} from '@common/ui/layout/dashboard-sidenav';\nimport {FormattedDate} from '@common/i18n/formatted-date';\n\nconst borderColor = 'border border-fg-base/6 hover:border-divider';\n\ninterface Props extends DashboardSidenavChildrenProps {\n  user?: User;\n}\nexport function AgentCustomerPageSidebar({user, className}: Props) {\n  const {envato} = useSettings();\n\n  return (\n    <aside className={className}>\n      {user && <FormWrapper user={user} />}\n      {envato.enable && !!user?.purchase_codes && (\n        <Fragment>\n          <div className=\"mb-4 mt-24 text-lg font-semibold\">\n            <Trans message=\"Envato purchases\" />\n          </div>\n          <EnvatoPurchaseList purchases={user.purchase_codes} />\n        </Fragment>\n      )}\n    </aside>\n  );\n}\n\ninterface FormWrapperProps {\n  user: User;\n}\nfunction FormWrapper({user}: FormWrapperProps) {\n  const form = useForm<UpdateUserDetailsPayload>({\n    defaultValues: {\n      language: user.language || '',\n      country: user.country || '',\n      timezone: user.timezone || getLocalTimeZone(),\n      notes: user.details?.notes || '',\n      details: user.details?.details || '',\n      emails: user.secondary_emails,\n      tags: user.tags?.map(tag => tag.name),\n    },\n  });\n  const updateDetails = useUpdateUserDetails(user.id, form);\n\n  return (\n    <Form form={form} onSubmit={values => updateDetails.mutate(values)}>\n      <div className=\"space-y-12\">\n        <EmailsSection user={user} />\n        <LocalizationFields user={user} />\n        <Detail label={<Trans message=\"Tags\" />}>\n          <FormChipField\n            name=\"tags\"\n            size=\"sm\"\n            chipSize=\"xs\"\n            valueKey=\"name\"\n            inputBorder={borderColor}\n          />\n        </Detail>\n        <DetailsField />\n        <NotesField />\n        <Detail label={<Trans message=\"Last login\" />}>\n          {user.last_login ? (\n            <FormattedDate date={user.last_login.created_at} />\n          ) : (\n            '-'\n          )}\n        </Detail>\n        <Detail label={<Trans message=\"Created at\" />}>\n          {user.created_at ? <FormattedDate date={user.created_at} /> : '-'}\n        </Detail>\n      </div>\n      {form.formState.isDirty && (\n        <Button\n          color=\"primary\"\n          variant=\"flat\"\n          type=\"submit\"\n          size=\"sm\"\n          display=\"block\"\n          className=\"mt-14 w-full\"\n          disabled={updateDetails.isPending}\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      )}\n    </Form>\n  );\n}\n\ninterface EmailsSectionProps {\n  user: User;\n}\nfunction EmailsSection({user}: EmailsSectionProps) {\n  const {fields, append, remove} = useFieldArray<\n    UpdateUserDetailsPayload,\n    'emails',\n    'key'\n  >({\n    name: 'emails',\n    keyName: 'key',\n  });\n  return (\n    <Detail\n      label={\n        <div className=\"mt-4\">\n          <Trans message=\"Emails\" />\n        </div>\n      }\n      align=\"items-start\"\n    >\n      <div>\n        <div className=\"flex items-center justify-between gap-12\">\n          <div className=\"min-w-0 flex-auto overflow-hidden overflow-ellipsis whitespace-nowrap\">\n            {user.email}\n          </div>\n          <Tooltip label={<Trans message=\"Add email\" />}>\n            <IconButton\n              size=\"xs\"\n              iconSize=\"sm\"\n              onClick={() => append({address: ''})}\n            >\n              <AddIcon />\n            </IconButton>\n          </Tooltip>\n        </div>\n        <div className=\"space-y-4 pt-6\">\n          {fields.map((field, index) => (\n            <div key={field.key} className=\"flex items-center gap-8\">\n              <FormTextField\n                name={`emails.${index}.address`}\n                className=\"flex-auto\"\n                size=\"xs\"\n                type=\"email\"\n                inputBorder={borderColor}\n              />\n              <IconButton\n                color=\"danger\"\n                size=\"xs\"\n                iconSize=\"sm\"\n                onClick={() => remove(index)}\n              >\n                <CloseIcon />\n              </IconButton>\n            </div>\n          ))}\n        </div>\n      </div>\n    </Detail>\n  );\n}\n\ninterface LocalizationFieldsProps {\n  user: User;\n}\nfunction LocalizationFields({user}: LocalizationFieldsProps) {\n  const {trans} = useTrans();\n  const {data} = useValueLists(['timezones', 'countries', 'localizations']);\n  const countries = data?.countries || [];\n  const localizations = data?.localizations || [];\n  const timezones = data?.timezones || {};\n  return (\n    <Fragment>\n      <Detail label={<Trans message=\"Timezone\" />}>\n        <TimezoneSelect\n          name=\"timezone\"\n          timezones={timezones}\n          size=\"sm\"\n          inputBorder={borderColor}\n        />\n      </Detail>\n      <Detail label={<Trans message=\"Language\" />}>\n        <FormSelect\n          selectionMode=\"single\"\n          name=\"language\"\n          size=\"sm\"\n          inputBorder={borderColor}\n        >\n          {localizations.map(localization => (\n            <Option key={localization.language} value={localization.language}>\n              {localization.name}\n            </Option>\n          ))}\n        </FormSelect>\n      </Detail>\n      <Detail label={<Trans message=\"Country\" />}>\n        <FormSelect\n          selectionMode=\"single\"\n          size=\"sm\"\n          name=\"country\"\n          showSearchField\n          searchPlaceholder={trans(message('Search countries'))}\n          inputBorder={borderColor}\n        >\n          {countries.map(country => (\n            <Option key={country.code} value={country.code}>\n              {country.name}\n            </Option>\n          ))}\n        </FormSelect>\n      </Detail>\n    </Fragment>\n  );\n}\n\nfunction DetailsField() {\n  return (\n    <Detail\n      label={\n        <div className=\"flex items-center gap-1\">\n          <div>\n            <Trans message=\"Details\" />\n          </div>\n          <InfoDialogTrigger\n            dialogSize=\"xs\"\n            body={\n              <Trans message=\"Optional information, like address. Only visible to agents, not end users.\" />\n            }\n          />\n        </div>\n      }\n    >\n      <FormTextField\n        name=\"details\"\n        inputElementType=\"textarea\"\n        rows={1}\n        inputBorder={borderColor}\n      />\n    </Detail>\n  );\n}\n\nfunction NotesField() {\n  return (\n    <Detail\n      label={\n        <div className=\"flex items-center gap-1\">\n          <div>\n            <Trans message=\"Notes\" />\n          </div>\n          <InfoDialogTrigger\n            dialogSize=\"xs\"\n            body={\n              <Trans message=\"Optional notes. Only visible to agents, not end users.\" />\n            }\n          />\n        </div>\n      }\n    >\n      <FormTextField\n        name=\"notes\"\n        inputElementType=\"textarea\"\n        rows={1}\n        inputBorder={borderColor}\n      />\n    </Detail>\n  );\n}\n\ninterface DetailProps {\n  label: ReactElement;\n  children: ReactNode;\n  align?: string;\n}\nfunction Detail({label, children, align = 'items-center'}: DetailProps) {\n  return (\n    <div className={`flex ${align} gap-12`}>\n      <div className=\"w-80 flex-shrink-0 text-sm text-muted\">{label}</div>\n      <div className=\"flex-auto text-sm\">{children}</div>\n    </div>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\n\ninterface Payload {\n  userId: number | string;\n}\n\nexport function useDeleteUser() {\n  const navigate = useNavigate();\n  return useMutation({\n    mutationFn: deleteUser,\n    onSuccess: async () => {\n      toast(message('User deleted'));\n      await Promise.allSettled([\n        queryClient.invalidateQueries({\n          queryKey: ['users'],\n        }),\n        queryClient.invalidateQueries({\n          queryKey: ['tickets'],\n        }),\n      ]);\n      navigate('/agent/tickets');\n    },\n    onError: r => showHttpErrorToast(r),\n  });\n}\n\nfunction deleteUser(payload: Payload): Promise<BackendResponse> {\n  return apiClient\n    .delete(`users/${payload.userId}`)\n    .then(response => response.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {UseFormReturn} from 'react-hook-form';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\n\nexport interface MergeUsersPayload {\n  user_id: number | string;\n  mergee_id: number | string;\n}\n\nexport function useMergeUsers(form: UseFormReturn<MergeUsersPayload>) {\n  const navigate = useNavigate();\n  return useMutation({\n    mutationFn: mergeUsers,\n    onSuccess: async () => {\n      toast(message('Users merged'));\n      await Promise.allSettled([\n        queryClient.invalidateQueries({\n          queryKey: ['users'],\n        }),\n        queryClient.invalidateQueries({\n          queryKey: ['tickets'],\n        }),\n      ]);\n      navigate('/agent/tickets');\n    },\n    onError: r => onFormQueryError(r, form),\n  });\n}\n\nfunction mergeUsers(payload: MergeUsersPayload): Promise<BackendResponse> {\n  return apiClient.post(`merge-users`, payload).then(response => response.data);\n}\n","import {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {User} from '@common/auth/user';\nimport {Trans} from '@common/i18n/trans';\nimport {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {useForm} from 'react-hook-form';\nimport {Form} from '@common/ui/forms/form';\nimport {FormNormalizedModelField} from '@common/ui/forms/normalized-model-field';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {Button} from '@common/ui/buttons/button';\nimport {\n  MergeUsersPayload,\n  useMergeUsers,\n} from '@app/agent/customer-page/requests/use-merge-users';\nimport {message} from '@common/i18n/message';\n\ninterface Props {\n  mergee: User;\n}\n\nexport function MergeUsersDialog({mergee}: Props) {\n  const {close, formId} = useDialogContext();\n  const form = useForm<MergeUsersPayload>({\n    defaultValues: {\n      mergee_id: mergee.id,\n    },\n  });\n  const mergeUsers = useMergeUsers(form);\n  const selectedUserId = form.watch('user_id');\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans\n          message=\"Merge ':name' into another user\"\n          values={{name: mergee.display_name}}\n        />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          id={formId}\n          form={form}\n          onSubmit={values => {\n            mergeUsers.mutate(values, {onSuccess: () => close()});\n          }}\n        >\n          <FormNormalizedModelField\n            name=\"user_id\"\n            endpoint=\"normalized-models/user\"\n            label={<Trans message=\"User to merge into\" />}\n            placeholder={message('Select user')}\n            description={\n              <Trans\n                message=\"':name' will be deleted and all data belonging to them will be merged into selected user.\"\n                values={{name: mergee.display_name}}\n              />\n            }\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          type=\"submit\"\n          variant=\"flat\"\n          color=\"primary\"\n          form={formId}\n          disabled={!selectedUserId || mergeUsers.isPending}\n        >\n          <Trans message=\"Merge\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useUser} from '@common/auth/ui/use-user';\nimport {Link, Outlet, useLocation, useParams} from 'react-router-dom';\nimport {AgentNavbar} from '@app/agent/agent-navbar';\nimport React, {Fragment, useContext, useEffect, useState} from 'react';\nimport {getCustomerLink} from '@app/agent/customer-page/customer-link';\nimport {Trans} from '@common/i18n/trans';\nimport {Tabs} from '@common/ui/tabs/tabs';\nimport {TabList} from '@common/ui/tabs/tab-list';\nimport {Tab} from '@common/ui/tabs/tab';\nimport {AgentCustomerPageSidebar} from '@app/agent/customer-page/agent-customer-page-sidebar';\nimport {UserAvatar} from '@common/ui/images/user-avatar';\nimport {User} from '@common/auth/user';\nimport {Button} from '@common/ui/buttons/button';\nimport {AddIcon} from '@common/icons/material/Add';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {DashboardLayout} from '@common/ui/layout/dashboard-layout';\nimport {DashboardNavbar} from '@common/ui/layout/dashboard-navbar';\nimport {DashboardSidenav} from '@common/ui/layout/dashboard-sidenav';\nimport {DashboardContent} from '@common/ui/layout/dashboard-content';\nimport clsx from 'clsx';\nimport {prefetchValueLists} from '@common/http/value-lists';\nimport {DashboardLayoutContext} from '@common/ui/layout/dashboard-layout-context';\nimport {\n  Menu,\n  MenuItem,\n  MenuTrigger,\n} from '@common/ui/navigation/menu/menu-trigger';\nimport {MoreHorizIcon} from '@common/icons/material/MoreHoriz';\nimport {ConfirmationDialog} from '@common/ui/overlays/dialog/confirmation-dialog';\nimport {openDialog} from '@common/ui/overlays/store/dialog-store';\nimport {useDeleteUser} from '@app/agent/customer-page/requests/use-delete-user';\nimport {PageStatus} from '@common/http/page-status';\nimport {BanUserDialog} from '@common/admin/users/ban-user-dialog';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {MergeUsersDialog} from '@app/agent/customer-page/merge-users-dialog';\n\nexport function AgentCustomerPage() {\n  const {userId} = useParams();\n  const query = useUser(userId!, {\n    with: [\n      'tags',\n      'secondary_emails',\n      'details',\n      'purchase_codes',\n      'bans',\n      'lastLogin',\n    ],\n  });\n  const user = query.data?.user;\n\n  useEffect(() => {\n    prefetchValueLists(['timezones', 'countries', 'localizations']);\n  }, []);\n\n  if (!query.isLoading && !query.data) {\n    return <PageStatus query={query} />;\n  }\n\n  return (\n    <DashboardLayout name=\"agent_customer_page\">\n      <AgentNavbar element={DashboardNavbar} />\n      <LeftSidebar user={user} />\n      <DashboardContent>\n        <main\n          className={clsx(\n            'p-14 transition-opacity md:p-24',\n            !user && 'opacity-0',\n          )}\n        >\n          <Fragment>\n            <Header user={user} />\n            <Tables />\n          </Fragment>\n        </main>\n      </DashboardContent>\n    </DashboardLayout>\n  );\n}\n\ninterface PageNavbarProps {\n  user?: User;\n}\nfunction LeftSidebar({user}: PageNavbarProps) {\n  const {isMobileMode} = useContext(DashboardLayoutContext);\n  return (\n    <DashboardSidenav\n      position=\"left\"\n      size=\"w-350\"\n      className={clsx(\n        'bg',\n        isMobileMode ? 'border-r p-12' : 'mt-8 py-24 pl-24',\n      )}\n      overflow=\"overflow-y-auto overflow-x-hidden compact-scrollbar\"\n    >\n      <AgentCustomerPageSidebar user={user} />\n    </DashboardSidenav>\n  );\n}\n\ninterface HeaderProps {\n  user?: User;\n}\nfunction Header({user}: HeaderProps) {\n  if (!user) return null;\n  const banReason = user.bans?.[0]?.comment;\n  return (\n    <header className=\"mb-16 flex items-center\">\n      <div className=\"mr-auto flex items-center gap-14\">\n        <UserAvatar user={user} size=\"w-50 h-50\" circle />\n        <div>\n          <h1 className=\"text-xl font-semibold\">{user.display_name}</h1>\n          {banReason && (\n            <div className=\"text-sm text-danger\">\n              <Trans\n                message=\"Suspended: :reason\"\n                values={{reason: banReason}}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n      <Button\n        variant=\"outline\"\n        startIcon={<AddIcon />}\n        size=\"xs\"\n        className=\"mx-12\"\n        elementType={Link}\n        to={`/agent/tickets/new?customer_id=${user.id}`}\n        target=\"_blank\"\n      >\n        <Trans message=\"New ticket\" />\n      </Button>\n      <MenuTrigger>\n        <IconButton variant=\"outline\" size=\"xs\">\n          <MoreHorizIcon />\n        </IconButton>\n        <Menu>\n          <MenuItem\n            value=\"suspend\"\n            onSelected={() => openDialog(BanUserDialog, {user})}\n          >\n            <Trans message=\"Suspend\" />\n          </MenuItem>\n          <MenuItem\n            value=\"merge\"\n            onSelected={() => openDialog(MergeUsersDialog, {mergee: user})}\n          >\n            <Trans message=\"Merge into another user\" />\n          </MenuItem>\n          <MenuItem\n            value=\"delete\"\n            onSelected={() => openDialog(DeleteUserDialog, {user})}\n          >\n            <Trans message=\"Delete\" />\n          </MenuItem>\n        </Menu>\n      </MenuTrigger>\n    </header>\n  );\n}\n\ninterface DeleteUserDialogProps {\n  user: User;\n}\nfunction DeleteUserDialog({user}: DeleteUserDialogProps) {\n  const deleteUser = useDeleteUser();\n  const {close} = useDialogContext();\n  return (\n    <ConfirmationDialog\n      isDanger\n      title={<Trans message=\"Delete user\" />}\n      body={\n        <Trans message=\"Are you sure you want to delete this user? This will also delete all tickets created by this user and can't be undone.\" />\n      }\n      onConfirm={() => {\n        deleteUser.mutate(\n          {userId: user.id},\n          {\n            onSuccess: () => close(),\n          },\n        );\n      }}\n      isLoading={deleteUser.isPending}\n      confirm={<Trans message=\"Delete\" />}\n    />\n  );\n}\n\nfunction Tables() {\n  const {userId} = useParams();\n  const {pathname} = useLocation();\n  const [selectedTab, setSelectedTab] = useState(() => {\n    return pathname.endsWith('searches') ? 1 : 0;\n  });\n  return (\n    <div className=\"rounded border\">\n      <Tabs selectedTab={selectedTab} onTabChange={setSelectedTab}>\n        <TabList>\n          <Tab\n            width=\"min-w-132\"\n            elementType={Link}\n            to={getCustomerLink(userId!)}\n            replace\n          >\n            <Trans message=\"Tickets\" />\n          </Tab>\n          <Tab\n            width=\"min-w-132\"\n            elementType={Link}\n            to={getCustomerLink(userId!, {tab: 'searches'})}\n            replace\n          >\n            <Trans message=\"Searches\" />\n          </Tab>\n        </TabList>\n        <div>\n          <Outlet />\n        </div>\n      </Tabs>\n    </div>\n  );\n}\n","import {useParams, useSearchParams} from 'react-router-dom';\nimport {useTickets} from '@app/agent/agent-ticket-page/user-details-sidebar/requests/use-tickets';\nimport {TicketTable} from '@app/agent/agent-ticket-list-page/ticket-table/ticket-table';\nimport React, {useState} from 'react';\nimport {GlobalLoadingProgress} from '@app/agent/global-loading-progress';\nimport searchImage from '@app/agent/agent-search-page/search.svg';\nimport {Trans} from '@common/i18n/trans';\nimport {DataTablePaginationFooter} from '@common/datatable/data-table-pagination-footer';\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {SvgImage} from '@common/ui/images/svg-image/svg-image';\nimport {AnimatePresence} from 'framer-motion';\nimport {TicketTableActions} from '@app/agent/agent-ticket-list-page/ticket-table/ticket-table-actions';\n\nexport function AgentCustomerPageTicketTable() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const {userId} = useParams();\n  const [selectedTickets, setSelectedTickets] = useState<number[]>([]);\n  const query = useTickets({\n    userId,\n    page: searchParams.get('page') || 1,\n    perPage: searchParams.get('perPage') ?? '',\n    loader: 'ticketTable',\n  });\n\n  const {data, fetchStatus, isLoading, isPlaceholderData} = query;\n  const items = data?.pagination.data || [];\n  const isEmpty =\n    (fetchStatus === 'idle' && items.length === 0) ||\n    (!isLoading && !isPlaceholderData && items.length === 0);\n\n  return (\n    <div className=\"relative\">\n      <GlobalLoadingProgress query={query} />\n      <TicketTable\n        query={query}\n        selectedTickets={selectedTickets}\n        onSelectionChange={setSelectedTickets}\n      />\n      <AnimatePresence>\n        {selectedTickets.length && (\n          <TicketTableActions\n            ticketIds={selectedTickets}\n            onActionCompleted={() => setSelectedTickets([])}\n          />\n        )}\n      </AnimatePresence>\n      {isEmpty && (\n        <IllustratedMessage\n          className=\"mt-48\"\n          image={<SvgImage src={searchImage} />}\n          title={<Trans message=\"User has not created any tickets yet\" />}\n        />\n      )}\n      <DataTablePaginationFooter\n        query={query}\n        onPageChange={page =>\n          setSearchParams(prev => {\n            prev.set('page', page.toString());\n            return prev;\n          })\n        }\n        onPerPageChange={perPage =>\n          setSearchParams(prev => {\n            prev.set('perPage', perPage.toString());\n            return prev;\n          })\n        }\n      />\n    </div>\n  );\n}\n","import {useParams} from 'react-router-dom';\nimport React from 'react';\nimport {SearchReportTable} from '@app/admin/reports/search-report/search-report-table';\nimport {Trans} from '@common/i18n/trans';\n\nexport function CustomerSearchesTable() {\n  const {userId} = useParams();\n  return (\n    <SearchReportTable\n      description={\n        <Trans message=\"This report shows what the user searched for recently.\" />\n      }\n      userId={userId}\n      orderBy=\"last_seen\"\n    />\n  );\n}\n","import {Navigate, RouteObject, useRoutes} from 'react-router-dom';\nimport {AgentTicketListPage} from '@app/agent/agent-ticket-list-page/agent-ticket-list-page';\nimport {AgentSearchPage} from '@app/agent/agent-search-page/agent-search-page';\nimport {SearchTicketsTable} from '@app/agent/agent-search-page/search-tickets/search-tickets-table';\nimport {SearchUsersTable} from '@app/agent/agent-search-page/search-users-table';\nimport {SearchArticlesTable} from '@app/agent/agent-search-page/search-articles-table';\nimport {AgentTicketPage} from '@app/agent/agent-ticket-page/agent-ticket-page';\nimport {NotFoundPage} from '@common/ui/not-found-page/not-found-page';\nimport {AgentCannedRepliesPage} from '@app/agent/agent-canned-replies-page';\nimport {AgentNewTicketPage} from '@app/agent/agent-new-ticket-page/agent-new-ticket-page';\nimport {AgentCustomerPage} from '@app/agent/customer-page/agent-customer-page';\nimport {AgentCustomerPageTicketTable} from '@app/agent/customer-page/agent-customer-page-ticket-table';\nimport {CustomerSearchesTable} from '@app/agent/customer-page/customer-searches-table';\n\nconst RouteConfig: RouteObject[] = [\n  {\n    path: '/',\n    element: <Navigate to=\"/agent/tickets\" replace />,\n  },\n  {\n    path: '/tickets',\n    element: <AgentTicketListPage />,\n  },\n  {\n    path: '/tickets/new',\n    element: <AgentNewTicketPage />,\n  },\n  {\n    path: '/tickets/:ticketId',\n    element: <AgentTicketPage />,\n  },\n  {\n    path: '/users/:userId',\n    element: <AgentCustomerPage />,\n    children: [\n      {path: '', element: <Navigate to=\"tickets\" replace />},\n      {\n        path: 'tickets',\n        element: <AgentCustomerPageTicketTable />,\n      },\n      {\n        path: 'searches',\n        element: <CustomerSearchesTable />,\n      },\n    ],\n  },\n  {\n    path: '/search',\n    element: <AgentSearchPage />,\n    children: [\n      {\n        path: '',\n        element: <SearchTicketsTable />,\n      },\n      {\n        path: 'tickets',\n        element: <SearchTicketsTable />,\n      },\n      {\n        path: 'users',\n        element: <SearchUsersTable />,\n      },\n      {\n        path: 'articles',\n        element: <SearchArticlesTable />,\n      },\n    ],\n  },\n  {\n    path: 'saved-replies',\n    element: <AgentCannedRepliesPage />,\n  },\n  {\n    path: '*',\n    element: <NotFoundPage />,\n  },\n];\n\nexport default function AgentRoutes() {\n  return useRoutes(RouteConfig);\n}\n"],"names":["openedImage","defaultPage","defaultPerPage","useMailboxParams","searchParams","useSearchParams","useNavigateToMailboxTicketTable","navigate","useNavigate","urlParams","useCallback","userParams","link","getMailboxTicketTableLink","useMailboxTicketTableLink","tagId","page","perPage","orderBy","orderDir","TicketTableFooter","onPageChange","onPerPageChange","query","jsx","DataTablePaginationFooter","TicketTableColumns","Trans","ticket","TicketSummary","FormattedRelativeTime","body","_a","_c","_b","tags","_d","t","jsxs","ChipList","tag","Chip","TicketTypeRequestTag","TicketPageLink","className","children","color","linkProps","finalUri","useMemo","getTicketPageLink","Link","clsx","absolute","getBootstrapData","TicketTable","selectedTickets","onSelectionChange","sortDescriptor","onSortChange","Table","values","TicketTableRow","item","domProps","AGENT_PERMISSION","TICKET_MODEL_TYPE","useAgents","useQuery","fetchAgents","apiClient","response","useAssignTicketsToAgent","useMutation","payload","assignTickets","queryClient","toast","message","err","showHttpErrorToast","r","TicketActionButton","forwardRef","startIcon","endIcon","isCompact","buttonProps","ref","Tooltip","IconButton","Button","AssignTicketIcon","createSvgIcon","AssignTicketsButton","ticketIds","onSuccess","data","isOpen","setIsOpen","useState","useKeybind","MenuTrigger","userId","KeyboardArrowDownIcon","Menu","user","Item","UserAvatar","useMailboxSidenavTags","fetchTags","ChangeStatusIcon","ChangeTicketStatusButton","changeStatus","useChangeTicketStatus","newStatus","useAddTagToTickets","addTag","AddTagIcon","AddTagToTicketsButton","DialogTrigger","tagName","AddTagDialog","trans","useTrans","setQuery","selectedTag","setSelectedTag","isFetching","useTags","close","formId","useDialogContext","Dialog","DialogHeader","DialogBody","e","ComboBox","value","result","DialogFooter","useDeleteTickets","deleteTickets","ids","DeleteTicketsButton","DeleteIcon","DeleteTicketsDialog","onDeleted","ConfirmationDialog","TicketTableActions","onActionCompleted","useRef","useAutoFocus","m","TicketTablePage","useTickets","isLoading","isPlaceholderData","items","isEmpty","navigateToTicketTable","setSelectedTickets","Fragment","GlobalLoadingProgress","IllustratedMessage","SvgImage","AnimatePresence","AgentNavbar","element","onOpenSearchPage","defaultOpenSearchPage","Element","SearchTriggerButton","AgentTicketListSidenav","Heading","InboxIcon","TagList","FolderIcon","SettingsIcon","KeyboardArrowUpIcon","icon","listItemClassName","type","skeletons","opacityAnimation","_","index","Skeleton","TagListItem","isActive","NavLink","AgentPageLayout","rightSidenav","DashboardLayout","DashboardNavbar","DashboardSidenav","DashboardContent","AgentTicketListPage","c","u","i","a","o","f","l","v","d","n","g","w","s","x","y","h","useSearchTicketsFilters","FilterOperator","FilterControlType","createdAtFilter","updatedAtFilter","timestampFilter","USER_MODEL","useStableScrollbar","disable","useEffect","PageTabs","AgentSearchPage","setSearchParams","searchParamsQuery","pathname","useLocation","tabName","selectedTab","tab","searchInputRef","searchQuery","_setSearchQuery","updateQueryParams","prev","debouncedUpdateQueryParams","useDebouncedCallback","setSearchQuery","focusSearchInput","filters","showFilters","Navbar","TextField","SearchIcon","AddFilterButton","FilterList","Tabs","TabList","Tab","Outlet","useSearchTickets","params","enabled","fetchTickets","keepPreviousData","SearchTableLayout","fetchStatus","DataTableEmptyStateMessage","searchImage","SearchTicketsTable","useSearchUsers","fetchUsers","columnConfig","NameWithAvatar","role","FormattedDate","SearchUsersTable","article","ArticleIcon","ArticlePath","SearchArticlesTable","useSearchArticles","getArticleLink","AddNoteIcon","BackToTicketsIcon","AfterReplyActions","useAfterReplyAction","ticketId","useParams","backToTicketTable","replies","useSettings","defaultAction","action","setAction","useLocalStorage","perform","useCreateNote","createNote","CreateNoteDialog","editorRef","attachments","setAttachments","handleSubmit","getReplyBody","FileUploadProvider","ReplyEditor","TicketPageToolbar","backLink","afterReplyAction","AddNoteButton","useDeleteReply","deleteReply","useUpdateReply","updateReply","reply","ReplyAttachmentList","AttachmentListLayout","attachment","FileEntryAttachmentLayout","openDialog","DeleteAttachmentDialog","UpdateReplyDialog","title","useOriginalReplyEmail","replyId","fetchEmail","OriginalEmailPreviewDialog","base_url","activeTab","setActiveTab","ButtonGroup","Content","Status","key","FullPageLoader","ErrorIcon","AgentTicketPageReplyList","draft","editorIsOpen","useTicketPageStore","showDraft","useTicketReplies","TicketReplyLayout","ReplyActionsButton","isInitial","InfiniteScrollSentinel","MoreVertIcon","ConfirmDeleteReplyDialog","closeDialog","useRemoveTagFromTickets","removeTag","updateTicketQuery","old","TicketHeaderDateFormat","TicketHeaderLayout","actions","TicketTagList","onRemoveTag","tagType","size","chipListProps","TicketPageHeader","removeTags","openEditor","useOpenReplyEditor","handleRemoveTag","ReplyIcon","UserDetailsSection","label","name","isVisible","setIsVisible","PurchaseCodeDetailsDialog","purchaseCode","syncPurchases","useSyncEnvatoPurchases","LinkStyle","Detail","EnvatoPurchaseList","purchases","itemClassName","activePurchase","purchase","TicketPagePurchaseList","currentPurchase","category","bestMatch","categoryName","code","PersonIcon","useActivityLog","useInfiniteData","ARTICLE_MODEL","SEARCH_TERM_MODEL","Timeline","Children","cloneElement","TimelineItem","isLast","timePreset","ActivityList","timeline","activity","ListItem","ArticleLink","TicketListItem","term","useMergeTickets","mergeTickets","TicketPreviewDialog","useTicket","Actions","PageStatus","newTicket","ConfirmMergeDialog","ReplyList","AttachmentList","useUpdateTicket","form","updateTicket","onFormQueryError","ChangeCustomerDialog","useForm","Form","FormNormalizedModelField","UserDetailsSidebar","tickets","CustomerDetails","OtherTickets","envato","editLink","getCustomerLink","EmailIcon","ButtonBase","useSaveDraft","updateActiveDraft","setEditorIsOpen","saveDraft","activeDraft","useBackgroundDraftSave","ticketPageStore","useSubmitAgentReply","deleteDraft","useDeleteDraft","setTicketIsSaving","submitReply","q","shouldIgnoreQuery","isActiveTicket","isOtherUserTickets","AgentReplyEditorDraftButtons","isDirty","isSaving","handleDraftSave","handleDraftDelete","CheckCircleIcon","useCannedReplies","useAuth","signal","fetchCannedReplies","resolve","CannedReplySelector","onSelected","CommentIcon","CreateCannedReplyDialog","TicketPageDocsSearchInput","hcCategories","useTicketHcCategories","inputRef","AgentReplyEditor","addGlobalListener","useGlobalListeners","getFromLocalStorage","handleBackgroundSave","insertLinkIntoTextEditor","MenubarButtons","FooterButtons","onSubmit","StatusSelector","SendReplyButton","AfterReplyActionSelector","disabled","newValue","ArrowDropDownIcon","MenuItem","selectedStatus","setSelectedStatus","AgentTicketPage","TicketContent","branding","previousTicketId","usePrevious","defaultDraftValues","Helmet","AgentCannedRepliesPage","CannedRepliesDatatablePage","AgentNewTicketPage","TicketForm","statusTags","categoryTags","customerId","bodyError","createTicket","useCreateTicket","inputFieldClassNames","getInputFieldClassNames","FormTextField","FormSelect","status","useUpdateUserDetails","updateDetails","borderColor","AgentCustomerPageSidebar","FormWrapper","getLocalTimeZone","EmailsSection","LocalizationFields","FormChipField","DetailsField","NotesField","fields","append","remove","useFieldArray","AddIcon","field","CloseIcon","useValueLists","countries","localizations","timezones","TimezoneSelect","localization","Option","country","InfoDialogTrigger","align","useDeleteUser","deleteUser","useMergeUsers","mergeUsers","MergeUsersDialog","mergee","selectedUserId","AgentCustomerPage","useUser","prefetchValueLists","LeftSidebar","Header","Tables","isMobileMode","useContext","DashboardLayoutContext","banReason","MoreHorizIcon","BanUserDialog","DeleteUserDialog","setSelectedTab","AgentCustomerPageTicketTable","CustomerSearchesTable","SearchReportTable","RouteConfig","Navigate","NotFoundPage","AgentRoutes","useRoutes"],"mappings":"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","x_google_ignoreList":[26]}