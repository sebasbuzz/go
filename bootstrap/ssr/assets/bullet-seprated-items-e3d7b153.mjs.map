{"version":3,"file":"bullet-seprated-items-e3d7b153.mjs","sources":["../../../resources/client/help-center/articles/use-article.ts","../../../common/resources/client/ui/bullet-seprated-items.tsx"],"sourcesContent":["import {useQuery} from '@tanstack/react-query';\nimport {Article} from '@app/help-center/articles/article';\nimport {useParams} from 'react-router-dom';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\nimport {Section} from '@app/help-center/categories/category';\n\nexport interface ArticlePageNavItem {\n  indent: boolean;\n  display_name: string;\n  slug: string;\n  type: string;\n}\n\nexport interface GetArticleResponse extends BackendResponse {\n  article: Article;\n  pageNav?: ArticlePageNavItem[];\n  categoryNav?: Section[];\n}\n\nexport function useArticle(loader: 'articlePage' | 'updateArticle') {\n  const {categoryId, sectionId, articleId} = useParams();\n  return useQuery<GetArticleResponse>({\n    queryKey: ['hc', 'articles', articleId, categoryId, sectionId, loader],\n    queryFn: () => fetchArticle(articleId!, loader, categoryId, sectionId),\n    initialData: () => {\n      const data = getBootstrapData().loaders?.[loader];\n      const [category, section] = data?.article?.path || [];\n      if (\n        data?.article?.id == articleId &&\n        category?.id == categoryId &&\n        section?.id == sectionId\n      ) {\n        return data;\n      }\n    },\n  });\n}\n\nfunction fetchArticle(\n  articleId: string | number,\n  loader: string,\n  categoryId?: string,\n  sectionId?: string,\n) {\n  const url =\n    categoryId && sectionId\n      ? `hc/articles/${categoryId}/${sectionId}/${articleId}`\n      : `hc/articles/${articleId}`;\n  return apiClient\n    .get<GetArticleResponse>(url, {params: {loader}})\n    .then(response => response.data);\n}\n","import React, {Children, Fragment, ReactNode} from 'react';\nimport clsx from 'clsx';\n\ninterface BulletSeparatedItemsProps {\n  children: ReactNode;\n  className?: string;\n}\n\nexport function BulletSeparatedItems({\n  children,\n  className,\n}: BulletSeparatedItemsProps) {\n  const items = Children.toArray(children);\n  return (\n    <div className={clsx('flex items-center gap-4 overflow-hidden', className)}>\n      {items.map((child, index) => (\n        <Fragment key={index}>\n          <div>{child}</div>\n          {index < items.length - 1 ? <div>&bull;</div> : null}\n        </Fragment>\n      ))}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;;AAqBO,SAAS,WAAW,QAAyC;AAClE,QAAM,EAAC,YAAY,WAAW,cAAa,UAAU;AACrD,SAAO,SAA6B;AAAA,IAClC,UAAU,CAAC,MAAM,YAAY,WAAW,YAAY,WAAW,MAAM;AAAA,IACrE,SAAS,MAAM,aAAa,WAAY,QAAQ,YAAY,SAAS;AAAA,IACrE,aAAa,MAAM;;AACjB,YAAM,QAAO,sBAAA,EAAmB,YAAnB,mBAA6B;AAC1C,YAAM,CAAC,UAAU,OAAO,MAAI,kCAAM,YAAN,mBAAe,SAAQ;AAEjD,YAAA,kCAAM,YAAN,mBAAe,OAAM,cACrB,qCAAU,OAAM,eAChB,mCAAS,OAAM,WACf;AACO,eAAA;AAAA,MACT;AAAA,IACF;AAAA,EAAA,CACD;AACH;AAEA,SAAS,aACP,WACA,QACA,YACA,WACA;AACM,QAAA,MACJ,cAAc,YACV,eAAe,UAAU,IAAI,SAAS,IAAI,SAAS,KACnD,eAAe,SAAS;AAC9B,SAAO,UACJ,IAAwB,KAAK,EAAC,QAAQ,EAAC,SAAQ,CAAA,EAC/C,KAAK,CAAA,aAAY,SAAS,IAAI;AACnC;AC7CO,SAAS,qBAAqB;AAAA,EACnC;AAAA,EACA;AACF,GAA8B;AACtB,QAAA,QAAQ,SAAS,QAAQ,QAAQ;AACvC,SACG,oBAAA,OAAA,EAAI,WAAW,KAAK,2CAA2C,SAAS,GACtE,UAAA,MAAM,IAAI,CAAC,OAAO,+BAChB,UACC,EAAA,UAAA;AAAA,IAAA,oBAAC,SAAK,UAAM,MAAA,CAAA;AAAA,IACX,QAAQ,MAAM,SAAS,IAAK,oBAAA,OAAA,EAAI,cAAM,CAAA,IAAS;AAAA,EAAA,KAFnC,KAGf,CACD,EACH,CAAA;AAEJ;"}