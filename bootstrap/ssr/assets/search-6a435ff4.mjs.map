{"version":3,"file":"search-6a435ff4.mjs","sources":["../../../common/resources/client/ui/layout/dashboard-layout-context.ts","../../../common/resources/client/utils/hooks/use-previous.ts","../../../common/resources/client/uploads/formatted-bytes.tsx","../../../common/resources/client/utils/hooks/use-block-body-overflow.ts","../../../common/resources/client/ui/layout/dashboard-layout.tsx","../../../common/resources/client/icons/material/MenuOpen.tsx","../../../common/resources/client/ui/layout/dashboard-navbar.tsx","../../../common/resources/client/ui/layout/dashboard-content.tsx","../../../common/resources/client/ui/layout/dashboard-sidenav.tsx","../../../common/resources/client/utils/keybinds/is-ctrl-key-pressed.ts","../../../resources/client/agent/agent-search-page/search.svg"],"sourcesContent":["import {createContext} from 'react';\n\nexport type DashboardSidenavStatus = 'open' | 'closed' | 'compact';\n\nexport interface DashboardContextValue {\n  leftSidenavStatus: DashboardSidenavStatus;\n  setLeftSidenavStatus: (status: DashboardSidenavStatus) => void;\n  rightSidenavStatus: DashboardSidenavStatus;\n  setRightSidenavStatus: (status: DashboardSidenavStatus) => void;\n  isMobileMode: boolean | null;\n  leftSidenavCanBeCompact?: boolean;\n  name: string;\n}\n\nexport const DashboardLayoutContext = createContext<DashboardContextValue>(\n  null!\n);\n","import {useEffect, useRef} from 'react';\n\nexport function usePrevious<T>(value: T) {\n  const ref = useRef<T>();\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n}\n","import {Fragment, memo} from 'react';\nimport {prettyBytes} from './utils/pretty-bytes';\n\ninterface FormattedBytesProps {\n  bytes?: number;\n}\nexport const FormattedBytes = memo(({bytes}: FormattedBytesProps) => {\n  return <Fragment>{prettyBytes(bytes)}</Fragment>;\n});\n","import {useEffect} from 'react';\n\nexport function useBlockBodyOverflow(disable: boolean = false) {\n  useEffect(() => {\n    if (disable) {\n      document.documentElement.classList.remove('no-page-overflow');\n    } else {\n      document.documentElement.classList.add('no-page-overflow');\n    }\n    return () => {\n      document.documentElement.classList.remove('no-page-overflow');\n    };\n  }, [disable]);\n}\n","import {ComponentPropsWithoutRef, useCallback, useMemo} from 'react';\nimport {\n  DashboardLayoutContext,\n  DashboardSidenavStatus,\n} from './dashboard-layout-context';\nimport {Underlay} from '../overlays/underlay';\nimport {AnimatePresence} from 'framer-motion';\nimport {useControlledState} from '@react-stately/utils';\nimport {useMediaQuery} from '../../utils/hooks/use-media-query';\nimport {\n  getFromLocalStorage,\n  setInLocalStorage,\n} from '../../utils/hooks/local-storage';\nimport {useBlockBodyOverflow} from '../../utils/hooks/use-block-body-overflow';\nimport clsx from 'clsx';\n\ninterface DashboardLayoutProps extends ComponentPropsWithoutRef<'div'> {\n  name: string;\n  leftSidenavCanBeCompact?: boolean;\n  leftSidenavStatus?: DashboardSidenavStatus;\n  onLeftSidenavChange?: (status: DashboardSidenavStatus) => void;\n  rightSidenavStatus?: DashboardSidenavStatus;\n  initialRightSidenavStatus?: DashboardSidenavStatus;\n  onRightSidenavChange?: (status: DashboardSidenavStatus) => void;\n  height?: string;\n  gridClassName?: string;\n  blockBodyOverflow?: boolean;\n}\nexport function DashboardLayout({\n  children,\n  leftSidenavStatus: leftSidenav,\n  onLeftSidenavChange,\n  rightSidenavStatus: rightSidenav,\n  initialRightSidenavStatus,\n  onRightSidenavChange,\n  name,\n  leftSidenavCanBeCompact,\n  height = 'h-screen',\n  className,\n  gridClassName = 'dashboard-grid',\n  blockBodyOverflow = true,\n  ...domProps\n}: DashboardLayoutProps) {\n  useBlockBodyOverflow(!blockBodyOverflow);\n  const isMobile = useMediaQuery('(max-width: 1024px)');\n\n  const isCompactModeInitially = useMemo(() => {\n    return !name ? false : getFromLocalStorage(`${name}.sidenav.compact`);\n  }, [name]);\n  const defaultLeftSidenavStatus = isCompactModeInitially ? 'compact' : 'open';\n  const [leftSidenavStatus, setLeftSidenavStatus] = useControlledState(\n    leftSidenav,\n    isMobile ? 'closed' : defaultLeftSidenavStatus,\n    onLeftSidenavChange,\n  );\n\n  const rightSidenavStatusDefault = useMemo(() => {\n    if (isMobile) {\n      return 'closed';\n    }\n    if (initialRightSidenavStatus != null) {\n      return initialRightSidenavStatus;\n    }\n    const userSelected = getFromLocalStorage(\n      `${name}.sidenav.right.position`,\n      'open',\n    );\n    if (userSelected != null) {\n      return userSelected;\n    }\n    return initialRightSidenavStatus || 'closed';\n  }, [isMobile, name, initialRightSidenavStatus]);\n  const [rightSidenavStatus, _setRightSidenavStatus] = useControlledState(\n    rightSidenav,\n    rightSidenavStatusDefault,\n    onRightSidenavChange,\n  );\n  const setRightSidenavStatus = useCallback(\n    (status: DashboardSidenavStatus) => {\n      _setRightSidenavStatus(status);\n      setInLocalStorage(`${name}.sidenav.right.position`, status);\n    },\n    [_setRightSidenavStatus, name],\n  );\n\n  const shouldShowUnderlay =\n    isMobile && (leftSidenavStatus === 'open' || rightSidenavStatus === 'open');\n\n  return (\n    <DashboardLayoutContext.Provider\n      value={{\n        leftSidenavStatus,\n        setLeftSidenavStatus,\n        rightSidenavStatus,\n        setRightSidenavStatus,\n        leftSidenavCanBeCompact,\n        name,\n        isMobileMode: isMobile,\n      }}\n    >\n      <div\n        {...domProps}\n        className={clsx('relative isolate', gridClassName, className, height)}\n      >\n        {children}\n        <AnimatePresence>\n          {shouldShowUnderlay && (\n            <Underlay\n              position=\"fixed\"\n              key=\"dashboard-underlay\"\n              onClick={() => {\n                setLeftSidenavStatus('closed');\n                setRightSidenavStatus('closed');\n              }}\n            />\n          )}\n        </AnimatePresence>\n      </div>\n    </DashboardLayoutContext.Provider>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const MenuOpenIcon = createSvgIcon(\n  <path d=\"M3 18h13v-2H3v2zm0-5h10v-2H3v2zm0-7v2h13V6H3zm18 9.59L17.42 12 21 8.41 19.59 7l-5 5 5 5L21 15.59z\" />\n, 'MenuOpenOutlined');\n","import {Navbar, NavbarProps} from '../navigation/navbar/navbar';\nimport {IconButton} from '../buttons/icon-button';\nimport React, {useContext} from 'react';\nimport clsx from 'clsx';\nimport {DashboardLayoutContext} from './dashboard-layout-context';\nimport {setInLocalStorage} from '../../utils/hooks/local-storage';\nimport {MenuOpenIcon} from '@common/icons/material/MenuOpen';\n\nexport interface DashboardNavbarProps\n  extends Omit<NavbarProps, 'toggleButton'> {\n  hideToggleButton?: boolean;\n}\nexport function DashboardNavbar({\n  children,\n  className,\n  hideToggleButton,\n  ...props\n}: DashboardNavbarProps) {\n  const {\n    isMobileMode,\n    leftSidenavStatus,\n    setLeftSidenavStatus,\n    name,\n    leftSidenavCanBeCompact,\n  } = useContext(DashboardLayoutContext);\n\n  const shouldToggleCompactMode = leftSidenavCanBeCompact && !isMobileMode;\n  const shouldShowToggle =\n    !hideToggleButton && (isMobileMode || leftSidenavCanBeCompact);\n\n  const handleToggle = () => {\n    setLeftSidenavStatus(leftSidenavStatus === 'open' ? 'closed' : 'open');\n  };\n\n  const handleCompactModeToggle = () => {\n    const newStatus = leftSidenavStatus === 'compact' ? 'open' : 'compact';\n    setInLocalStorage(`${name}.sidenav.compact`, newStatus === 'compact');\n    setLeftSidenavStatus(newStatus);\n  };\n\n  return (\n    <Navbar\n      className={clsx('dashboard-grid-navbar', className)}\n      border=\"border-b\"\n      size=\"sm\"\n      toggleButton={\n        shouldShowToggle ? (\n          <IconButton\n            size=\"md\"\n            onClick={() => {\n              if (shouldToggleCompactMode) {\n                handleCompactModeToggle();\n              } else {\n                handleToggle();\n              }\n            }}\n          >\n            <MenuOpenIcon />\n          </IconButton>\n        ) : undefined\n      }\n      {...props}\n    >\n      {children}\n    </Navbar>\n  );\n}\n","import {cloneElement, ReactElement} from 'react';\nimport clsx from 'clsx';\n\ninterface DashboardContentProps {\n  children: ReactElement<{className: string}>;\n  isScrollable?: boolean;\n}\nexport function DashboardContent({\n  children,\n  isScrollable = true,\n}: DashboardContentProps) {\n  return cloneElement(children, {\n    className: clsx(\n      children.props.className,\n      isScrollable && 'overflow-y-auto stable-scrollbar',\n      'dashboard-grid-content'\n    ),\n  });\n}\n","import clsx from 'clsx';\nimport {m} from 'framer-motion';\nimport {cloneElement, ReactElement, useContext} from 'react';\nimport {DashboardLayoutContext} from './dashboard-layout-context';\n\nexport interface DashboardSidenavChildrenProps {\n  className?: string;\n  isCompactMode?: boolean;\n}\n\nexport interface SidenavProps {\n  className?: string;\n  children: ReactElement<DashboardSidenavChildrenProps>;\n  position?: 'left' | 'right';\n  size?: 'sm' | 'md' | 'lg' | string;\n  mode?: 'overlay';\n  // absolute will place sidenav between navbar/footer, fixed will overlay it over nav/footer.\n  overlayPosition?: 'absolute' | 'fixed';\n  display?: 'flex' | 'block';\n  overflow?: string;\n  forceClosed?: boolean;\n}\nexport function DashboardSidenav({\n  className,\n  position,\n  children,\n  size = 'md',\n  mode,\n  overlayPosition = 'fixed',\n  display = 'flex',\n  overflow = 'overflow-hidden',\n  forceClosed = false,\n}: SidenavProps) {\n  const {\n    isMobileMode,\n    leftSidenavStatus,\n    setLeftSidenavStatus,\n    rightSidenavStatus,\n    setRightSidenavStatus,\n  } = useContext(DashboardLayoutContext);\n  const status = position === 'left' ? leftSidenavStatus : rightSidenavStatus;\n  const isOverlayMode = isMobileMode || mode === 'overlay';\n\n  const variants = {\n    open: {display, width: null as any},\n    compact: {\n      display,\n      width: null as any,\n    },\n    closed: {\n      width: 0,\n      transitionEnd: {\n        display: 'none',\n      },\n    },\n  };\n\n  const sizeClassName = getSize(status === 'compact' ? 'compact' : size);\n\n  return (\n    <m.div\n      variants={variants}\n      initial={false}\n      animate={forceClosed ? 'closed' : status}\n      transition={{type: 'tween', duration: 0.15}}\n      onClick={e => {\n        // close sidenav when user clicks a link or button on mobile\n        const target = e.target as HTMLElement;\n        if (isMobileMode && (target.closest('button') || target.closest('a'))) {\n          setLeftSidenavStatus('closed');\n          setRightSidenavStatus('closed');\n        }\n      }}\n      className={clsx(\n        className,\n        position === 'left'\n          ? 'dashboard-grid-sidenav-left'\n          : 'dashboard-grid-sidenav-right',\n        'will-change-[width]',\n        overflow,\n        sizeClassName,\n        isOverlayMode && `${overlayPosition} bottom-0 top-0 z-20 shadow-2xl`,\n        isOverlayMode && position === 'left' && 'left-0',\n        isOverlayMode && position === 'right' && 'right-0',\n      )}\n    >\n      {cloneElement<DashboardSidenavChildrenProps>(children, {\n        className: clsx(\n          children.props.className,\n          'w-full h-full',\n          status === 'compact' && 'compact-scrollbar',\n        ),\n        isCompactMode: status === 'compact',\n      })}\n    </m.div>\n  );\n}\n\nfunction getSize(size: SidenavProps['size'] | 'compact'): string {\n  switch (size) {\n    case 'compact':\n      return 'w-80';\n    case 'sm':\n      return 'w-224';\n    case 'md':\n      return 'w-240';\n    case 'lg':\n      return 'w-288';\n    default:\n      return size || '';\n  }\n}\n","import {isMac} from '@react-aria/utils';\n\ninterface Event {\n  altKey: boolean;\n  ctrlKey: boolean;\n  metaKey: boolean;\n}\n\nexport function isCtrlKeyPressed(e: Event) {\n  if (isMac()) {\n    return e.metaKey;\n  }\n\n  return e.ctrlKey;\n}\n","export default \"__VITE_ASSET__c9293802__\""],"names":[],"mappings":"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"}