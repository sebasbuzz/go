{"version":3,"file":"agent-routes-c5ef5570.mjs","sources":["../../../resources/client/agent/agent-ticket-list-page/ticket-table/opened.svg","../../../resources/client/agent/use-mailbox-params.ts","../../../resources/client/agent/agent-ticket-list-page/ticket-table/ticket-table-footer.tsx","../../../resources/client/agent/agent-ticket-list-page/ticket-table/ticket-table-columns.tsx","../../../resources/client/agent/agent-ticket-page/ticket-page-link.tsx","../../../resources/client/agent/agent-ticket-list-page/ticket-table/ticket-table.tsx","../../../resources/client/agent/ticket.ts","../../../resources/client/agent/ticket-actions/requests/use-agents.ts","../../../resources/client/agent/ticket-actions/requests/use-assign-tickets-to-aggent.tsx","../../../resources/client/agent/ticket-actions/ticket-action-button.tsx","../../../resources/client/agent/ticket-actions/icons/assign-ticket-icon.tsx","../../../resources/client/agent/ticket-actions/assign-tickets-button.tsx","../../../resources/client/agent/use-mailbox-sidenav-tags.ts","../../../resources/client/agent/ticket-actions/icons/change-status-icon.tsx","../../../resources/client/agent/ticket-actions/change-ticket-status-button.tsx","../../../resources/client/agent/ticket-actions/requests/use-add-tag-to-tickets.ts","../../../resources/client/agent/ticket-actions/icons/add-tag-icon.tsx","../../../resources/client/agent/ticket-actions/add-tag-to-tickets-button.tsx","../../../resources/client/agent/ticket-actions/requests/use-delete-tickets.tsx","../../../resources/client/agent/ticket-actions/delete-tickets-button.tsx","../../../resources/client/agent/agent-ticket-list-page/ticket-table/ticket-table-actions.tsx","../../../resources/client/agent/agent-ticket-list-page/ticket-table/ticket-table-page.tsx","../../../resources/client/agent/agent-navbar.tsx","../../../resources/client/agent/agent-ticket-list-page/agent-ticket-list-sidenav.tsx","../../../resources/client/agent/agent-page-layout.tsx","../../../resources/client/agent/agent-ticket-list-page/agent-ticket-list-page.tsx","../../../resources/client/agent/agent-search-page/search-tickets/use-search-tickets-filters.tsx","../../../common/resources/client/utils/hooks/use-stable-scrollbar.ts","../../../resources/client/agent/agent-search-page/agent-search-page.tsx","../../../resources/client/agent/agent-search-page/requests/use-search-tickets.ts","../../../resources/client/agent/agent-search-page/search-table-layout.tsx","../../../resources/client/agent/agent-search-page/search-tickets/search-tickets-table.tsx","../../../resources/client/agent/agent-search-page/requests/use-search-users.ts","../../../resources/client/agent/agent-search-page/search-users-table.tsx","../../../resources/client/agent/agent-search-page/search-articles-table.tsx","../../../resources/client/agent/ticket-actions/icons/add-note-icon.tsx","../../../resources/client/agent/ticket-actions/icons/back-to-tickets-icon.tsx","../../../resources/client/agent/agent-ticket-page/use-after-reply-action.ts","../../../resources/client/agent/agent-ticket-page/notes/use-create-note.ts","../../../resources/client/agent/agent-ticket-page/notes/create-note-dialog.tsx","../../../resources/client/agent/agent-ticket-page/ticket-page-toolbar.tsx","../../../resources/client/agent/agent-ticket-page/reply-list/requests/use-delete-reply.ts","../../../resources/client/agent/agent-ticket-page/reply-list/requests/use-update-reply.ts","../../../resources/client/agent/agent-ticket-page/reply-list/reply-attachment-list.tsx","../../../resources/client/agent/agent-ticket-page/reply-list/update-reply-dialog.tsx","../../../resources/client/agent/agent-ticket-page/reply-list/requests/use-original-reply-email.ts","../../../resources/client/agent/agent-ticket-page/reply-list/original-email-preview-dialog.tsx","../../../resources/client/agent/agent-ticket-page/reply-list/agent-ticket-page-reply-list.tsx","../../../resources/client/agent/ticket-actions/requests/use-remove-tag-from-tickets.ts","../../../resources/client/agent/ticket-layout/ticket-header-layout.tsx","../../../resources/client/agent/ticket-layout/ticket-tag-list.tsx","../../../resources/client/agent/agent-ticket-page/ticket-page-header.tsx","../../../resources/client/agent/agent-ticket-page/user-details-sidebar/user-details-section.tsx","../../../resources/client/agent/agent-ticket-page/envato-purchase-list/purchase-code-details-dialog.tsx","../../../resources/client/agent/agent-ticket-page/envato-purchase-list/envato-purchase-list.tsx","../../../resources/client/agent/agent-ticket-page/user-details-sidebar/ticket-page-purchase-list.tsx","../../../resources/client/agent/agent-ticket-page/user-details-sidebar/activity-log/use-activity-log.ts","../../../resources/client/help-center/articles/article.ts","../../../resources/client/agent/agent-search-page/search-term.ts","../../../common/resources/client/ui/timeline.tsx","../../../resources/client/agent/agent-ticket-page/user-details-sidebar/activity-list.tsx","../../../resources/client/agent/agent-ticket-page/user-details-sidebar/requests/use-merge-tickets.ts","../../../resources/client/agent/agent-ticket-page/ticket-preview-dialog.tsx","../../../resources/client/agent/agent-ticket-page/user-details-sidebar/requests/use-update-ticket.ts","../../../resources/client/agent/agent-ticket-page/user-details-sidebar/change-customer-dialog.tsx","../../../resources/client/agent/agent-ticket-page/user-details-sidebar/user-details-sidebar.tsx","../../../resources/client/agent/agent-ticket-page/requests/use-save-draft.ts","../../../resources/client/agent/agent-ticket-page/agent-reply-editor/use-background-draft-save.ts","../../../resources/client/agent/agent-ticket-page/agent-reply-editor/use-submit-agent-reply.ts","../../../resources/client/agent/agent-ticket-page/agent-reply-editor/agent-reply-editor-draft-buttons.tsx","../../../resources/client/agent/agent-ticket-page/canned-replies/requests/use-canned-replies.ts","../../../resources/client/agent/agent-ticket-page/canned-replies/canned-reply-selector.tsx","../../../resources/client/agent/agent-ticket-page/ticket-page-docs-search-input.tsx","../../../resources/client/agent/agent-ticket-page/agent-reply-editor/agent-reply-editor.tsx","../../../resources/client/agent/agent-ticket-page/agent-ticket-page.tsx","../../../resources/client/agent/agent-canned-replies-page.tsx","../../../resources/client/agent/agent-new-ticket-page/agent-new-ticket-page.tsx","../../../resources/client/agent/customer-page/requests/use-update-user-details.ts","../../../resources/client/agent/customer-page/agent-customer-page-sidebar.tsx","../../../resources/client/agent/customer-page/requests/use-delete-user.ts","../../../resources/client/agent/customer-page/requests/use-merge-users.ts","../../../resources/client/agent/customer-page/merge-users-dialog.tsx","../../../resources/client/agent/customer-page/agent-customer-page.tsx","../../../resources/client/agent/customer-page/agent-customer-page-ticket-table.tsx","../../../resources/client/agent/customer-page/customer-searches-table.tsx","../../../resources/client/agent/agent-routes.tsx"],"sourcesContent":["export default \"__VITE_ASSET__a71f56b4__\"","import {useSearchParams} from 'react-router-dom';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {PaginateTicketsParams} from '@app/agent/agent-ticket-page/user-details-sidebar/requests/use-tickets';\nimport {useCallback} from 'react';\n\nconst defaultPage = '1';\nconst defaultPerPage = '20';\n\nexport function useMailboxParams() {\n  const [searchParams] = useSearchParams();\n  const tagId = searchParams.get('tagId') || 'unassigned';\n  return {\n    tagId,\n    page: searchParams.get('page') || defaultPage,\n    perPage: searchParams.get('perPage') || defaultPerPage,\n    orderBy: searchParams.get('orderBy') || '',\n    orderDir: searchParams.get('orderDir') || '',\n  };\n}\n\nexport function useNavigateToMailboxTicketTable() {\n  const navigate = useNavigate();\n  const urlParams = useMailboxParams();\n  return useCallback(\n    (userParams: PaginateTicketsParams = {}) => {\n      const link = getMailboxTicketTableLink(urlParams, userParams);\n      navigate(link);\n    },\n    [urlParams, navigate],\n  );\n}\n\nexport function useMailboxTicketTableLink(\n  userParams: PaginateTicketsParams = {},\n) {\n  const urlParams = useMailboxParams();\n  return getMailboxTicketTableLink(urlParams, userParams);\n}\n\nfunction getMailboxTicketTableLink(\n  urlParams: Record<string, string>,\n  userParams: PaginateTicketsParams = {},\n) {\n  const tagId = userParams.tagId || urlParams.tagId;\n  const page = `${userParams.page || urlParams.page}`;\n  const perPage = `${userParams.perPage || urlParams.perPage}`;\n\n  // if orderBy/orderDir is set as undefined in user params, it means sorting\n  // was reset on the table, and we should clear all sorting params from url\n  const orderBy =\n    'orderBy' in userParams ? userParams.orderBy : urlParams.orderBy;\n  const orderDir =\n    'orderDir' in userParams ? userParams.orderDir : urlParams.orderDir;\n  let link = `/agent/tickets?tagId=${tagId}`;\n  if (page !== defaultPage) {\n    link += `&page=${page}`;\n  }\n  if (perPage !== defaultPerPage) {\n    link += `&perPage=${perPage}`;\n  }\n  if (orderBy) {\n    link += `&orderBy=${orderBy}`;\n  }\n  if (orderDir) {\n    link += `&orderDir=${orderDir}`;\n  }\n  return link;\n}\n","import {DataTablePaginationFooter} from '@common/datatable/data-table-pagination-footer';\nimport React from 'react';\nimport {UseQueryResult} from '@tanstack/react-query';\nimport {PaginatedBackendResponse} from '@common/http/backend-response/pagination-response';\nimport {Ticket} from '@app/agent/ticket';\n\ninterface Props {\n  onPerPageChange: (perPage: number) => void;\n  onPageChange: (page: number) => void;\n  query: UseQueryResult<PaginatedBackendResponse<Ticket>>;\n}\nexport function TicketTableFooter({\n  onPageChange,\n  onPerPageChange,\n  query,\n}: Props) {\n  return (\n    <DataTablePaginationFooter\n      className=\"flex-shrink-0\"\n      onPerPageChange={onPerPageChange}\n      onPageChange={onPageChange}\n      query={query}\n    />\n  );\n}\n","import {ColumnConfig} from '@common/datatable/column-config';\r\nimport {Ticket} from '@app/agent/ticket';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {FormattedRelativeTime} from '@common/i18n/formatted-relative-time';\r\nimport React from 'react';\r\nimport {ChipList} from '@common/ui/forms/input-field/chip-field/chip-list';\r\nimport {Chip} from '@common/ui/forms/input-field/chip-field/chip';\r\nimport TicketTypeRequestTag from '@app/agent/ticket-layout/ticket-type-request-tag';\r\n\r\nexport const TicketTableColumns: ColumnConfig<Ticket>[] = [\r\n  {\r\n    key: 'user_id',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Customer\" />,\r\n    visibleInMode: 'all',\r\n    width: 'w-132',\r\n    body: ticket => (ticket.user ? ticket.user.display_name : '-'),\r\n  },\r\n  {\r\n    key: 'avatar',\r\n    header: () => <Trans message=\"Avatar\" />,\r\n    hideHeader: true,\r\n    width: 'w-100 flex-shrink-0',\r\n    body: ticket =>\r\n      ticket.user ? (\r\n        <img\r\n          className=\"m-auto h-38 w-38 rounded-full\"\r\n          src={ticket.user.avatar}\r\n          alt=\"\"\r\n        />\r\n      ) : (\r\n        '-'\r\n      ),\r\n  },\r\n  {\r\n    key: 'summary',\r\n    header: () => <Trans message=\"Ticket summary\" />,\r\n    body: ticket => <TicketSummary ticket={ticket} />,\r\n    width: 'flex-3 min-w-200',\r\n  },\r\n  {\r\n    key: 'replies_count',\r\n    header: () => <Trans message=\"Replies count\" />,\r\n    hideHeader: true,\r\n    width: 'w-50',\r\n    body: ticket => (\r\n      <div className=\"w-max rounded border bg-alt px-6 text-xs font-normal text-muted\">\r\n        {ticket.replies_count || 1}\r\n      </div>\r\n    ),\r\n  },\r\n  {\r\n    key: 'assigned_to',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Assigned to\" />,\r\n    width: 'w-124',\r\n    body: ticket => (ticket.assignee ? ticket.assignee.display_name : ''),\r\n  },\r\n  {\r\n    key: 'id',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Number\" />,\r\n    width: 'w-90',\r\n    body: ticket => ticket.id,\r\n  },\r\n  {\r\n    key: 'updated_at',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Last updated\" />,\r\n    visibleInMode: 'all',\r\n    width: 'w-144',\r\n    body: ticket => <FormattedRelativeTime date={ticket.updated_at} />,\r\n  },\r\n];\r\n\r\ninterface TicketSummaryProps {\r\n  ticket: Ticket;\r\n}\r\nfunction TicketSummary({ticket}: TicketSummaryProps) {\r\n  const body = ticket.latest_reply?.body\r\n    ? ticket.latest_reply.body\r\n    : ticket.replies?.[0]?.body;\r\n  const tags = ticket.tags?.filter(t => t.type !== 'status');\r\n\r\n  return (\r\n    <div className=\"overflow-hidden overflow-ellipsis whitespace-nowrap pr-12\">\r\n      <div className=\"flex items-center gap-10\">\r\n        <ChipList size=\"xs\" wrap={false}>\r\n          {tags?.map(tag => (\r\n            <Chip key={tag.id}>{tag.display_name || tag.name}</Chip>\r\n          ))}\r\n        </ChipList>\r\n        <TicketTypeRequestTag ticketRequestType={ticket.ticket_request_type}/>\r\n        <div>{ticket.subject}</div>\r\n      </div>\r\n      {body && (\r\n        <div className=\"overflow-hidden overflow-ellipsis whitespace-nowrap pt-4 font-normal text-muted\">\r\n          {body}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import {Link, LinkProps} from 'react-router-dom';\nimport clsx from 'clsx';\nimport React, {ReactNode, useMemo} from 'react';\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\nimport {Ticket} from '@app/agent/ticket';\n\ninterface Props extends Omit<LinkProps, 'to'> {\n  ticket: Ticket;\n  className?: string;\n  children?: ReactNode;\n  color?: 'primary' | 'inherit';\n}\nexport function TicketPageLink({\n  ticket,\n  className,\n  children,\n  color = 'inherit',\n  ...linkProps\n}: Props) {\n  const finalUri = useMemo(() => {\n    return getTicketPageLink(ticket);\n  }, [ticket]);\n\n  return (\n    <Link\n      {...linkProps}\n      className={clsx(\n        color === 'primary'\n          ? 'text-primary hover:text-primary-dark'\n          : 'text-inherit',\n        'overflow-x-hidden overflow-ellipsis outline-none transition-colors hover:underline focus-visible:underline',\n        className\n      )}\n      to={finalUri}\n    >\n      {children ?? ticket.subject}\n    </Link>\n  );\n}\n\nexport function getTicketPageLink(\n  ticket: Ticket,\n  {absolute, tagId}: {absolute?: boolean; tagId?: string | number} = {}\n): string {\n  let link = `/agent/tickets/${ticket.id}`;\n  if (absolute) {\n    link = `${getBootstrapData().settings.base_url}${link}`;\n  }\n  if (tagId) {\n    link = `${link}?tagId=${tagId}`;\n  }\n  return link;\n}\n","import {Table} from '@common/ui/tables/table';\nimport {TicketTableColumns} from '@app/agent/agent-ticket-list-page/ticket-table/ticket-table-columns';\nimport React from 'react';\nimport {RowElementProps} from '@common/ui/tables/table-row';\nimport {Ticket} from '@app/agent/ticket';\nimport clsx from 'clsx';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {useMailboxParams} from '@app/agent/use-mailbox-params';\nimport {UseQueryResult} from '@tanstack/react-query';\nimport {PaginatedBackendResponse} from '@common/http/backend-response/pagination-response';\nimport {getTicketPageLink} from '@app/agent/agent-ticket-page/ticket-page-link';\nimport {SortDescriptor} from '@common/ui/tables/types/sort-descriptor';\n\ninterface Props {\n  query: UseQueryResult<PaginatedBackendResponse<Ticket>>;\n  selectedTickets?: number[];\n  onSelectionChange?: (ticketIds: number[]) => void;\n  sortDescriptor?: SortDescriptor;\n  onSortChange?: (sortDescriptor: SortDescriptor) => void;\n}\nexport function TicketTable({\n  query,\n  selectedTickets,\n  onSelectionChange,\n  sortDescriptor,\n  onSortChange,\n}: Props) {\n  const navigate = useNavigate();\n  const {tagId} = useMailboxParams();\n  return (\n    <Table\n      headerCellHeight=\"h-36\"\n      cellHeight=\"h-64\"\n      selectedRows={selectedTickets}\n      onSelectionChange={values => onSelectionChange?.(values as number[])}\n      columns={TicketTableColumns}\n      data={query.data?.pagination.data || []}\n      renderRowAs={TicketTableRow}\n      onAction={ticket => navigate(getTicketPageLink(ticket, {tagId}))}\n      sortDescriptor={sortDescriptor}\n      onSortChange={onSortChange}\n    />\n  );\n}\n\nfunction TicketTableRow({\n  children,\n  item,\n  className,\n  ...domProps\n}: RowElementProps<Ticket>) {\n  return (\n    <div\n      className={clsx(\n        className,\n        item.status === 'open' && 'font-semibold',\n        item.closed_at && 'bg-alt',\n      )}\n      {...domProps}\n    >\n      {children}\n    </div>\n  );\n}\n","import {User} from '@common/auth/user';\r\nimport {Tag} from '@common/tags/tag';\r\nimport {Reply} from '@app/agent/reply';\r\nimport {Category} from '@app/help-center/categories/category';\r\n\r\nexport const AGENT_PERMISSION = 'tickets.update';\r\nexport const TICKET_MODEL_TYPE = 'ticket';\r\n\r\nexport interface TicketTag extends Tag {\r\n  categories: Category[];\r\n  ticket_request_type?: any;\r\n  support_expired?: boolean;\r\n}\r\n\r\nexport interface Ticket {\r\n  id: number;\r\n  subject: string;\r\n  user_id: number;\r\n  closed_at?: string;\r\n  closed_by?: number;\r\n  status: string;\r\n  assigned_to?: number;\r\n  created_at?: string;\r\n  updated_at?: string;\r\n  ticket_request_type: number;\r\n  updated_at_formatted: string;\r\n  user?: User;\r\n  assignee?: User;\r\n  tags?: TicketTag[];\r\n  categories?: Tag[];\r\n  replies?: Reply[];\r\n  replies_count?: number;\r\n  latest_replies?: Reply[];\r\n  latest_reply?: Reply;\r\n  notes?: Reply[];\r\n  animated?: boolean;\r\n  model_type: typeof TICKET_MODEL_TYPE;\r\n}\r\n","import {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {PaginatedBackendResponse} from '@common/http/backend-response/pagination-response';\nimport {User} from '@common/auth/user';\nimport {AGENT_PERMISSION} from '@app/agent/ticket';\n\nexport function useAgents() {\n  return useQuery({\n    queryKey: ['users', 'agents'],\n    queryFn: () => fetchAgents(),\n  });\n}\n\nfunction fetchAgents() {\n  return apiClient\n    .get<PaginatedBackendResponse<User>>('users', {\n      params: {\n        permission: AGENT_PERMISSION,\n        perPage: 20,\n      },\n    })\n    .then(response => response.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\n\ninterface Payload {\n  ticketIds: (number | string)[];\n  userId: number | string;\n}\n\nexport function useAssignTicketsToAgent() {\n  return useMutation({\n    mutationFn: (payload: Payload) => assignTickets(payload),\n    onSuccess: async () => {\n      await Promise.allSettled([\n        queryClient.invalidateQueries({queryKey: ['mailbox', 'sidenav-tags']}),\n        queryClient.invalidateQueries({queryKey: ['tickets']}),\n      ]);\n      toast(message('Tickets reassigned'));\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction assignTickets(payload: Payload) {\n  return apiClient\n    .post<BackendResponse>(`tickets/assign`, payload)\n    .then(r => r.data);\n}\n","import React, {forwardRef, ReactElement} from 'react';\nimport {ButtonColor} from '@common/ui/buttons/get-shared-button-style';\nimport {Button, ButtonProps} from '@common/ui/buttons/button';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\n\ninterface Props {\n  startIcon: ReactElement;\n  endIcon?: ReactElement;\n  children: ReactElement<MessageDescriptor>;\n  color?: ButtonColor;\n  isCompact?: boolean;\n  disabled?: boolean;\n  elementType?: ButtonProps['elementType'];\n  to?: ButtonProps['to'];\n}\nexport const TicketActionButton = forwardRef<HTMLButtonElement, Props>(\n  (\n    {startIcon, endIcon, children, color, isCompact = false, ...buttonProps},\n    ref\n  ) => {\n    if (isCompact) {\n      return (\n        <Tooltip label={children} ref={ref}>\n          <IconButton color={color} iconSize=\"md\" size=\"sm\" {...buttonProps}>\n            {startIcon}\n          </IconButton>\n        </Tooltip>\n      );\n    }\n    return (\n      <Button\n        startIcon={startIcon}\n        endIcon={endIcon}\n        variant=\"outline\"\n        color={color}\n        size=\"xs\"\n        ref={ref}\n        {...buttonProps}\n      >\n        {children}\n      </Button>\n    );\n  }\n);\n","import {createSvgIcon} from '@common/icons/create-svg-icon';\nimport React from 'react';\n\nexport const AssignTicketIcon = createSvgIcon(\n  <path d=\"M 16 5 C 12.145852 5 9 8.1458513 9 12 C 9 14.408843 10.23116 16.55212 12.09375 17.8125 C 8.5266131 19.342333 6 22.881262 6 27 L 8 27 C 8 24.109626 9.5263067 21.592958 11.8125 20.1875 C 12.483006 21.834363 14.120749 23 16 23 C 17.879251 23 19.516994 21.834363 20.1875 20.1875 C 22.473693 21.592958 24 24.109626 24 27 L 26 27 C 26 22.881262 23.473387 19.342333 19.90625 17.8125 C 21.76884 16.55212 23 14.408843 23 12 C 23 8.1458513 19.854148 5 16 5 z M 16 7 C 18.773268 7 21 9.2267317 21 12 C 21 14.773268 18.773268 17 16 17 C 13.226732 17 11 14.773268 11 12 C 11 9.2267317 13.226732 7 16 7 z M 16 19 C 16.81989 19 17.600009 19.116459 18.34375 19.34375 C 17.997935 20.307297 17.090648 21 16 21 C 14.909352 21 14.002065 20.307297 13.65625 19.34375 C 14.399991 19.116459 15.18011 19 16 19 z\" />,\n  '',\n  '0 0 32 32'\n);\n","import {useAgents} from '@app/agent/ticket-actions/requests/use-agents';\nimport {useAssignTicketsToAgent} from '@app/agent/ticket-actions/requests/use-assign-tickets-to-aggent';\nimport {Menu, MenuTrigger} from '@common/ui/navigation/menu/menu-trigger';\nimport {KeyboardArrowDownIcon} from '@common/icons/material/KeyboardArrowDown';\nimport {Trans} from '@common/i18n/trans';\nimport {Item} from '@common/ui/forms/listbox/item';\nimport {UserAvatar} from '@common/ui/images/user-avatar';\nimport React, {useState} from 'react';\nimport {TicketActionButton} from '@app/agent/ticket-actions/ticket-action-button';\nimport {AssignTicketIcon} from '@app/agent/ticket-actions/icons/assign-ticket-icon';\nimport {useKeybind} from '@common/utils/keybinds/use-keybind';\n\ninterface Props {\n  ticketIds: number[];\n  onSuccess?: () => void;\n  isCompact?: boolean;\n}\nexport function AssignTicketsButton({ticketIds, onSuccess, isCompact}: Props) {\n  const {data} = useAgents();\n  const assignTickets = useAssignTicketsToAgent();\n  const [isOpen, setIsOpen] = useState(false);\n  useKeybind('window', 'a', () => setIsOpen(true));\n\n  return (\n    <MenuTrigger\n      isOpen={isOpen}\n      onOpenChange={setIsOpen}\n      onItemSelected={userId =>\n        assignTickets.mutate({ticketIds, userId}, {onSuccess})\n      }\n    >\n      <TicketActionButton\n        isCompact={isCompact}\n        startIcon={<AssignTicketIcon />}\n        endIcon={<KeyboardArrowDownIcon />}\n        disabled={assignTickets.isPending}\n      >\n        <Trans message=\"Assign (a)\" />\n      </TicketActionButton>\n      <Menu>\n        {data?.pagination.data.map(user => (\n          <Item\n            key={user.id}\n            value={user.id}\n            startIcon={<UserAvatar user={user} size=\"sm\" />}\n          >\n            {user.display_name}\n          </Item>\n        ))}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {Tag} from '@common/tags/tag';\n\nexport interface MailboxTag extends Tag {\n  tickets_count: number;\n}\n\nexport interface GetMailboxSidenavTags extends BackendResponse {\n  viewTags: MailboxTag[];\n  categoryTags: MailboxTag[];\n  statusTags: MailboxTag[];\n}\n\nexport function useMailboxSidenavTags() {\n  return useQuery({\n    queryKey: ['mailbox', 'sidenav-tags'],\n    queryFn: () => fetchTags(),\n  });\n}\n\nfunction fetchTags() {\n  return apiClient\n    .get<GetMailboxSidenavTags>('tags/agent-mailbox')\n    .then(response => response.data);\n}\n","import {createSvgIcon} from '@common/icons/create-svg-icon';\n\nexport const ChangeStatusIcon = createSvgIcon(\n  <path d=\"M 5 5 L 5 6 L 5 29 L 7 29 L 7 19 L 15 19 L 15 21 L 15 22 L 16 22 L 26 22 L 27 22 L 27 21 L 27 9 L 27 8 L 26 8 L 17 8 L 17 6 L 17 5 L 16 5 L 6 5 L 5 5 z M 7 7 L 15 7 L 15 8 L 15 9 L 15 17 L 7 17 L 7 7 z M 17 10 L 25 10 L 25 20 L 17 20 L 17 19 L 17 18 L 17 10 z\" />,\n  '',\n  '0 0 32 32'\n);\n","import {useMailboxSidenavTags} from '@app/agent/use-mailbox-sidenav-tags';\nimport {useChangeTicketStatus} from '@app/agent/ticket-actions/requests/use-change-ticket-status';\nimport {Menu, MenuTrigger} from '@common/ui/navigation/menu/menu-trigger';\nimport {TicketActionButton} from '@app/agent/ticket-actions/ticket-action-button';\nimport {KeyboardArrowDownIcon} from '@common/icons/material/KeyboardArrowDown';\nimport {Trans} from '@common/i18n/trans';\nimport {Item} from '@common/ui/forms/listbox/item';\nimport React, {useState} from 'react';\nimport {ChangeStatusIcon} from '@app/agent/ticket-actions/icons/change-status-icon';\nimport {useKeybind} from '@common/utils/keybinds/use-keybind';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\n\ninterface Props {\n  ticketIds: number[];\n  onSuccess?: () => void;\n  isCompact?: boolean;\n}\nexport function ChangeTicketStatusButton({\n  ticketIds,\n  onSuccess,\n  isCompact,\n}: Props) {\n  const {data} = useMailboxSidenavTags();\n  const changeStatus = useChangeTicketStatus();\n  const [isOpen, setIsOpen] = useState(false);\n  useKeybind('window', 's', () => setIsOpen(true));\n\n  return (\n    <MenuTrigger\n      isOpen={isOpen}\n      onOpenChange={setIsOpen}\n      onItemSelected={newStatus =>\n        changeStatus.mutate(\n          {ids: ticketIds, status: newStatus as string},\n          {\n            onSuccess: () => {\n              onSuccess?.();\n              toast(message('Status changed'));\n            },\n          },\n        )\n      }\n    >\n      <TicketActionButton\n        isCompact={isCompact}\n        startIcon={<ChangeStatusIcon />}\n        endIcon={<KeyboardArrowDownIcon />}\n        disabled={changeStatus.isPending}\n      >\n        <Trans message=\"Change status (s)\" />\n      </TicketActionButton>\n      <Menu>\n        {data?.statusTags.map(tag => (\n          <Item key={tag.id} value={tag.name} capitalizeFirst>\n            {tag.display_name || tag.name}\n          </Item>\n        ))}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {TicketTag} from '@app/agent/ticket';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\n\ninterface Response extends BackendResponse {\n  tag: TicketTag;\n}\n\ninterface Payload {\n  tagName: string;\n  ticketIds: number[];\n}\n\nexport function useAddTagToTickets() {\n  return useMutation({\n    mutationFn: (payload: Payload) => addTag(payload),\n    onSuccess: async () => {\n      queryClient.invalidateQueries({queryKey: ['mailbox', 'sidenav-tags']});\n      await queryClient.invalidateQueries({queryKey: ['tickets']});\n      toast(message('Tag added'));\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction addTag(payload: Payload): Promise<Response> {\n  return apiClient.post(`tickets/tags/add`, payload).then(r => r.data);\n}\n","import {createSvgIcon} from '@common/icons/create-svg-icon';\n\nexport const AddTagIcon = createSvgIcon(\n  <path d=\"M 16 5 L 15.6875 5.28125 L 4.28125 16.8125 L 3.59375 17.5 L 4.28125 18.21875 L 13.78125 27.71875 L 14.5 28.40625 L 15.1875 27.71875 L 16.40625 26.5 C 17.46025 29.688126 20.466215 32 24 32 C 28.406433 32 32 28.406433 32 24 C 32 20.501976 29.731898 17.519896 26.59375 16.4375 L 26.71875 16.3125 L 27 16 L 27 15.59375 L 27 6 L 27 5 L 26 5 L 16.40625 5 L 16 5 z M 16.84375 7 L 25 7 L 25 15.15625 L 24.15625 16 C 24.103605 15.99897 24.052884 16 24 16 C 19.593567 16 16 19.593567 16 24 C 16 24.03173 15.999628 24.062105 16 24.09375 L 14.5 25.59375 L 6.40625 17.5 L 16.84375 7 z M 22 9 C 21.447715 9 21 9.4477153 21 10 C 21 10.552285 21.447715 11 22 11 C 22.552285 11 23 10.552285 23 10 C 23 9.4477153 22.552285 9 22 9 z M 24 18 C 27.325553 18 30 20.674447 30 24 C 30 27.325553 27.325553 30 24 30 C 20.674447 30 18 27.325553 18 24 C 18 20.674447 20.674447 18 24 18 z M 23 20 L 23 23 L 20 23 L 20 25 L 23 25 L 23 28 L 25 28 L 25 25 L 28 25 L 28 23 L 25 23 L 25 20 L 23 20 z\" />,\n  '',\n  '0 0 32 32'\n);\n","import {Button} from '@common/ui/buttons/button';\nimport {Trans} from '@common/i18n/trans';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport React, {useState} from 'react';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {useTags} from '@common/tags/use-tags';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {ComboBox} from '@common/ui/forms/combobox/combobox';\nimport {message} from '@common/i18n/message';\nimport {Item} from '@common/ui/forms/listbox/item';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {useAddTagToTickets} from '@app/agent/ticket-actions/requests/use-add-tag-to-tickets';\nimport {TicketActionButton} from '@app/agent/ticket-actions/ticket-action-button';\nimport {AddTagIcon} from '@app/agent/ticket-actions/icons/add-tag-icon';\nimport {useKeybind} from '@common/utils/keybinds/use-keybind';\n\ninterface Props {\n  ticketIds: number[];\n  onSuccess?: () => void;\n  isCompact?: boolean;\n}\nexport function AddTagToTicketsButton({\n  ticketIds,\n  onSuccess,\n  isCompact,\n}: Props) {\n  const addTag = useAddTagToTickets();\n  const [isOpen, setIsOpen] = useState(false);\n  useKeybind('window', 't', () => setIsOpen(true));\n\n  return (\n    <DialogTrigger\n      isOpen={isOpen}\n      onOpenChange={setIsOpen}\n      type=\"popover\"\n      onClose={tagName => {\n        if (tagName) {\n          addTag.mutate({tagName, ticketIds}, {onSuccess});\n        }\n      }}\n    >\n      <TicketActionButton\n        startIcon={<AddTagIcon />}\n        isCompact={isCompact}\n        disabled={addTag.isPending}\n      >\n        <Trans message=\"Add tag (t)\" />\n      </TicketActionButton>\n      <AddTagDialog />\n    </DialogTrigger>\n  );\n}\n\nfunction AddTagDialog() {\n  const {trans} = useTrans();\n  const [query, setQuery] = useState('');\n  const [selectedTag, setSelectedTag] = useState<string>('');\n  const {data, isFetching} = useTags({query, perPage: 8, notType: 'status'});\n  const {close, formId} = useDialogContext();\n\n  return (\n    <Dialog size=\"sm\">\n      <DialogHeader>\n        <Trans message=\"Add tag\" />\n      </DialogHeader>\n      <DialogBody>\n        <form\n          id={formId}\n          onSubmit={e => {\n            e.preventDefault();\n            close(selectedTag);\n          }}\n        >\n          <ComboBox\n            isAsync\n            isLoading={isFetching}\n            inputValue={query}\n            onInputValueChange={setQuery}\n            selectedValue={selectedTag}\n            onSelectionChange={value => setSelectedTag(value as string)}\n            selectionMode=\"single\"\n            placeholder={trans(message('Enter tag name...'))}\n            allowCustomValue\n            autoFocus\n          >\n            {data?.pagination.data.map(result => (\n              <Item\n                key={result.id}\n                value={result.name}\n                textLabel={result.name}\n                capitalizeFirst\n                className=\"rounded\"\n              >\n                {result.display_name || result.name}\n              </Item>\n            ))}\n          </ComboBox>\n        </form>\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button variant=\"flat\" color=\"primary\" type=\"submit\" form={formId}>\n          <Trans message=\"Add\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\n\ninterface Payload {\n  ids: (number | string)[];\n}\n\nexport function useDeleteTickets() {\n  return useMutation({\n    mutationFn: (payload: Payload) => deleteTickets(payload),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({queryKey: ['tickets']});\n      toast(message('Tickets deleted'));\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction deleteTickets({ids}: Payload) {\n  return apiClient\n    .delete<BackendResponse>(`tickets/${ids.join(',')}`)\n    .then(r => r.data);\n}\n","import {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {TicketActionButton} from '@app/agent/ticket-actions/ticket-action-button';\nimport {DeleteIcon} from '@common/icons/material/Delete';\nimport {Trans} from '@common/i18n/trans';\nimport React, {useState} from 'react';\nimport {useDeleteTickets} from '@app/agent/ticket-actions/requests/use-delete-tickets';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {ConfirmationDialog} from '@common/ui/overlays/dialog/confirmation-dialog';\nimport {useKeybind} from '@common/utils/keybinds/use-keybind';\n\ninterface Props {\n  ticketIds: number[];\n  onSuccess?: () => void;\n  isCompact?: boolean;\n}\nexport function DeleteTicketsButton({ticketIds, onSuccess, isCompact}: Props) {\n  const [isOpen, setIsOpen] = useState(false);\n  useKeybind('window', 'd', () => setIsOpen(true));\n\n  return (\n    <DialogTrigger type=\"modal\" isOpen={isOpen} onOpenChange={setIsOpen}>\n      <TicketActionButton\n        startIcon={<DeleteIcon />}\n        color=\"danger\"\n        isCompact={isCompact}\n      >\n        <Trans message=\"Delete (d)\" />\n      </TicketActionButton>\n      <DeleteTicketsDialog ticketIds={ticketIds} onDeleted={onSuccess} />\n    </DialogTrigger>\n  );\n}\n\ninterface DeleteTicketsButtonProps {\n  ticketIds: number[];\n  onDeleted?: () => void;\n}\nfunction DeleteTicketsDialog({ticketIds, onDeleted}: DeleteTicketsButtonProps) {\n  const deleteTickets = useDeleteTickets();\n  const {close} = useDialogContext();\n  return (\n    <ConfirmationDialog\n      isDanger\n      isLoading={deleteTickets.isPending}\n      onConfirm={() => {\n        deleteTickets.mutate(\n          {ids: ticketIds},\n          {\n            onSuccess: () => {\n              close();\n              onDeleted?.();\n            },\n          },\n        );\n      }}\n      title={<Trans message=\"Delete tickets\" />}\n      body={\n        <Trans message=\"Are you sure you want to delete selected tickets?\" />\n      }\n      confirm={<Trans message=\"delete\" />}\n    />\n  );\n}\n","import React, {useRef} from 'react';\nimport {m} from 'framer-motion';\nimport {AssignTicketsButton} from '@app/agent/ticket-actions/assign-tickets-button';\nimport {ChangeTicketStatusButton} from '@app/agent/ticket-actions/change-ticket-status-button';\nimport {AddTagToTicketsButton} from '@app/agent/ticket-actions/add-tag-to-tickets-button';\nimport {DeleteTicketsButton} from '@app/agent/ticket-actions/delete-tickets-button';\nimport {useAutoFocus} from '@common/ui/focus/use-auto-focus';\n\ninterface Props {\n  ticketIds: number[];\n  onActionCompleted: () => void;\n}\nexport function TicketTableActions({ticketIds, onActionCompleted}: Props) {\n  const ref = useRef<HTMLDivElement>(null);\n  useAutoFocus({autoFocus: true}, ref);\n  return (\n    <m.div\n      ref={ref}\n      initial={{y: -30, opacity: 1}}\n      animate={{y: 0, opacity: 1}}\n      exit={{y: 30, opacity: 0}}\n      tabIndex={-1}\n      role=\"menu\"\n      className=\"fixed left-0 right-0 top-120 mx-auto flex w-max items-center justify-center gap-12 rounded border bg p-14 shadow-lg outline-none focus-visible:ring-2\"\n    >\n      <AssignTicketsButton\n        ticketIds={ticketIds}\n        onSuccess={onActionCompleted}\n      />\n      <ChangeTicketStatusButton\n        ticketIds={ticketIds}\n        onSuccess={onActionCompleted}\n      />\n      <AddTagToTicketsButton\n        ticketIds={ticketIds}\n        onSuccess={onActionCompleted}\n      />\n      <DeleteTicketsButton\n        ticketIds={ticketIds}\n        onSuccess={onActionCompleted}\n      />\n    </m.div>\n  );\n}\n","import {useTickets} from '@app/agent/agent-ticket-page/user-details-sidebar/requests/use-tickets';\nimport {Trans} from '@common/i18n/trans';\nimport React, {Fragment, useMemo, useState} from 'react';\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {SvgImage} from '@common/ui/images/svg-image/svg-image';\nimport openedImage from './opened.svg';\nimport {\n  useMailboxParams,\n  useNavigateToMailboxTicketTable,\n} from '@app/agent/use-mailbox-params';\nimport {TicketTableFooter} from '@app/agent/agent-ticket-list-page/ticket-table/ticket-table-footer';\nimport {TicketTable} from '@app/agent/agent-ticket-list-page/ticket-table/ticket-table';\nimport {GlobalLoadingProgress} from '@app/agent/global-loading-progress';\nimport {TicketTableActions} from '@app/agent/agent-ticket-list-page/ticket-table/ticket-table-actions';\nimport {AnimatePresence} from 'framer-motion';\nimport {SortDescriptor} from '@common/ui/tables/types/sort-descriptor';\nimport {useSearchParams} from 'react-router-dom';\n\nexport function TicketTablePage() {\n  const [searchParams] = useSearchParams();\n  const orderBy = searchParams.get('orderBy') || '';\n  const orderDir = searchParams.get('orderDir') || '';\n  const sortDescriptor = useMemo(() => {\n    return {orderBy, orderDir: orderDir as SortDescriptor['orderDir']};\n  }, [orderBy, orderDir]);\n  const query = useTickets({\n    ...useMailboxParams(),\n    loader: 'ticketTable',\n  });\n  const {data, isLoading, isPlaceholderData} = query;\n  const items = data?.pagination.data || [];\n  const isEmpty = !isLoading && !isPlaceholderData && items.length === 0;\n  const navigateToTicketTable = useNavigateToMailboxTicketTable();\n  const [selectedTickets, setSelectedTickets] = useState<number[]>([]);\n\n  return (\n    <Fragment>\n      <GlobalLoadingProgress query={query} />\n      <div className=\"flex min-h-full min-w-0 flex-col\">\n        <div className=\"flex-auto\">\n          <TicketTable\n            query={query}\n            selectedTickets={selectedTickets}\n            onSelectionChange={setSelectedTickets}\n            sortDescriptor={sortDescriptor}\n            onSortChange={value => {\n              navigateToTicketTable({\n                orderBy: value.orderBy,\n                orderDir: value.orderDir,\n              });\n            }}\n          />\n          {isEmpty && (\n            <IllustratedMessage\n              className=\"mt-40\"\n              size=\"sm\"\n              image={<SvgImage src={openedImage} />}\n              title={\n                <Trans message=\"There are no tickets in this category yet.\" />\n              }\n            />\n          )}\n        </div>\n        <TicketTableFooter\n          query={query}\n          onPageChange={page => navigateToTicketTable({page})}\n          onPerPageChange={perPage => navigateToTicketTable({perPage})}\n        />\n        <AnimatePresence>\n          {selectedTickets.length && (\n            <TicketTableActions\n              ticketIds={selectedTickets}\n              onActionCompleted={() => setSelectedTickets([])}\n            />\n          )}\n        </AnimatePresence>\n      </div>\n    </Fragment>\n  );\n}\n","import {SearchTriggerButton} from '@app/help-center/search/search-trigger-button';\nimport {Trans} from '@common/i18n/trans';\nimport React, {JSXElementConstructor, useCallback} from 'react';\nimport {NavbarProps} from '@common/ui/navigation/navbar/navbar';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\n\ninterface Props {\n  element: JSXElementConstructor<NavbarProps>;\n  onOpenSearchPage?: () => void;\n}\nexport function AgentNavbar({element, onOpenSearchPage}: Props) {\n  const navigate = useNavigate();\n  const defaultOpenSearchPage = useCallback(() => {\n    navigate('/agent/search');\n  }, [navigate]);\n\n  const Element = element;\n  return (\n    <Element menuPosition=\"agent-mailbox\" color=\"bg\" size=\"md\">\n      <SearchTriggerButton\n        size=\"sm\"\n        width=\"w-320\"\n        onTrigger={onOpenSearchPage || defaultOpenSearchPage}\n      >\n        <Trans message=\"Search\" />\n      </SearchTriggerButton>\n    </Element>\n  );\n}\n","import {\n  MailboxTag,\n  useMailboxSidenavTags,\n} from '@app/agent/use-mailbox-sidenav-tags';\nimport {Trans} from '@common/i18n/trans';\nimport {Fragment, ReactNode} from 'react';\nimport {InboxIcon} from '@common/icons/material/Inbox';\nimport {NavLink} from 'react-router-dom';\nimport {FolderIcon} from '@common/icons/material/Folder';\nimport {Skeleton} from '@common/ui/skeleton/skeleton';\nimport {AnimatePresence, m} from 'framer-motion';\nimport clsx from 'clsx';\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\nimport {useMailboxParams} from '@app/agent/use-mailbox-params';\nimport {Menu, MenuTrigger} from '@common/ui/navigation/menu/menu-trigger';\nimport {Button} from '@common/ui/buttons/button';\nimport {Item} from '@common/ui/forms/listbox/item';\nimport {SettingsIcon} from '@common/icons/material/Settings';\nimport {KeyboardArrowUpIcon} from '@common/icons/material/KeyboardArrowUp';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\n\nexport function AgentTicketListSidenav() {\n  const navigate = useNavigate();\n  return (\n    <aside className=\"compact-scrollbar flex w-full flex-col gap-24 overflow-y-auto border-r text-muted\">\n      <div className=\"flex-auto\">\n        <Heading icon={<InboxIcon />}>\n          <Trans message=\"Inbox\" />\n        </Heading>\n        <TagList type=\"viewTags\" />\n        <Heading icon={<FolderIcon />}>\n          <Trans message=\"Folders\" />\n        </Heading>\n        <TagList type=\"categoryTags\" />\n      </div>\n      <div className=\"mt-auto p-14\">\n        <MenuTrigger placement=\"top\">\n          <Button\n            className=\"min-h-34 w-full\"\n            variant=\"outline\"\n            startIcon={<SettingsIcon />}\n            endIcon={<KeyboardArrowUpIcon />}\n            size=\"xs\"\n          >\n            <Trans message=\"Settings\" />\n          </Button>\n          <Menu>\n            <Item\n              value=\"saved-replies\"\n              onSelected={() => navigate('/agent/saved-replies')}\n            >\n              <Trans message=\"Saved replies\" />\n            </Item>\n            <Item\n              value=\"new-ticket\"\n              onSelected={() => navigate('/agent/tickets/new')}\n            >\n              <Trans message=\"New ticket\" />\n            </Item>\n            <Item\n              value=\"notifications\"\n              onSelected={() => navigate('/notifications/settings')}\n            >\n              <Trans message=\"Notifications\" />\n            </Item>\n          </Menu>\n        </MenuTrigger>\n      </div>\n    </aside>\n  );\n}\n\ninterface HeadingProps {\n  icon: ReactNode;\n  children: ReactNode;\n}\nfunction Heading({icon, children}: HeadingProps) {\n  return (\n    <div className=\"mb-14 flex items-center gap-8 px-14 pt-20\">\n      {icon}\n      <div className=\"text-sm font-semibold uppercase\">{children}</div>\n    </div>\n  );\n}\n\nconst listItemClassName =\n  'flex h-40 items-center justify-between gap-8 pl-38 pr-8 mx-8 rounded-lg';\n\ninterface TagListProps {\n  type: 'viewTags' | 'categoryTags';\n}\nfunction TagList({type}: TagListProps) {\n  const {data, isLoading} = useMailboxSidenavTags();\n  const tags = data?.[type];\n\n  const skeletons = (\n    <m.div key=\"skeletons\" {...opacityAnimation}>\n      {[...Array(4)].map((_, index) => (\n        <div\n          key={index}\n          className={clsx(listItemClassName, 'max-w-172 border-l-transparent')}\n        >\n          <Skeleton variant=\"text\" />\n        </div>\n      ))}\n    </m.div>\n  );\n\n  return (\n    <AnimatePresence initial={false} mode=\"wait\">\n      {isLoading ? (\n        skeletons\n      ) : (\n        <m.ul\n          className=\"cursor-pointer text-sm\"\n          key=\"tag-list\"\n          {...opacityAnimation}\n        >\n          {tags?.map(tag => <TagListItem tag={tag} key={tag.id} />)}\n        </m.ul>\n      )}\n    </AnimatePresence>\n  );\n}\n\ninterface TagListItemProps {\n  tag: MailboxTag;\n}\nfunction TagListItem({tag}: TagListItemProps) {\n  const isActive = `${tag.id}` === useMailboxParams().tagId;\n  return (\n    <li key={tag.id}>\n      <NavLink\n        className={clsx(\n          listItemClassName,\n          isActive\n            ? 'border-l-primary bg-primary/6 hover:bg-primary/10'\n            : 'border-l-transparent hover:bg-hover',\n        )}\n        to={`/agent/tickets?tagId=${tag.id}`}\n        end={true}\n      >\n        {' '}\n        <Fragment>\n          <Trans message={tag.display_name || tag.name} />\n          {tag.tickets_count ? (\n            <div\n              className={clsx(\n                'flex h-18 w-30 items-center justify-center rounded-full text-[11px] font-semibold',\n                isActive && 'bg-primary text-on-primary',\n              )}\n            >\n              {tag.tickets_count}\n            </div>\n          ) : null}\n        </Fragment>\n      </NavLink>\n    </li>\n  );\n}\n","import {DashboardLayout} from '@common/ui/layout/dashboard-layout';\nimport {AgentNavbar} from '@app/agent/agent-navbar';\nimport {DashboardNavbar} from '@common/ui/layout/dashboard-navbar';\nimport {\n  DashboardSidenav,\n  SidenavProps,\n} from '@common/ui/layout/dashboard-sidenav';\nimport {DashboardContent} from '@common/ui/layout/dashboard-content';\nimport React, {ReactElement} from 'react';\nimport {AgentTicketListSidenav} from '@app/agent/agent-ticket-list-page/agent-ticket-list-sidenav';\n\ninterface Props {\n  children: ReactElement;\n  rightSidenav?: ReactElement<SidenavProps>;\n}\nexport function AgentPageLayout({children, rightSidenav}: Props) {\n  return (\n    <DashboardLayout name=\"mailbox\">\n      <AgentNavbar element={DashboardNavbar} />\n      <DashboardSidenav position=\"left\" className=\"bg-alt\">\n        <AgentTicketListSidenav />\n      </DashboardSidenav>\n      <DashboardContent>\n        <main>{children}</main>\n      </DashboardContent>\n      {rightSidenav}\n    </DashboardLayout>\n  );\n}\n","import React from 'react';\nimport {TicketTablePage} from '@app/agent/agent-ticket-list-page/ticket-table/ticket-table-page';\nimport {AgentPageLayout} from '@app/agent/agent-page-layout';\n\nexport function AgentTicketListPage() {\n  return (\n    <AgentPageLayout>\n      <TicketTablePage />\n    </AgentPageLayout>\n  );\n}\n","import {\n  BackendFilter,\n  FilterControlType,\n  FilterOperator,\n} from '@common/datatable/filters/backend-filter';\nimport {message} from '@common/i18n/message';\nimport {\n  createdAtFilter,\n  timestampFilter,\n  updatedAtFilter,\n} from '@common/datatable/filters/timestamp-filters';\nimport {useMailboxSidenavTags} from '@app/agent/use-mailbox-sidenav-tags';\nimport {useMemo} from 'react';\nimport {USER_MODEL} from '@common/auth/user';\n\nexport function useSearchTicketsFilters(): BackendFilter[] | null {\n  const {data} = useMailboxSidenavTags();\n\n  return useMemo(() => {\n    if (!data) return null;\n    return [\n      {\n        key: 'status',\n        label: message('Status'),\n        description: message('Ticket status'),\n        defaultOperator: FilterOperator.eq,\n        control: {\n          type: FilterControlType.Select,\n          defaultValue: '01',\n          options: data.statusTags.map(tag => ({\n            key: tag.id,\n            label: message(tag.display_name || tag.name),\n            value: tag.name,\n          })),\n        },\n      },\n      {\n        key: 'tag',\n        label: message('Folder'),\n        description: message('Folder ticket is assigned to'),\n        defaultOperator: FilterOperator.eq,\n        control: {\n          type: FilterControlType.Select,\n          defaultValue: '01',\n          options: data.categoryTags.map(tag => ({\n            key: tag.id,\n            label: message(tag.display_name || tag.name),\n            value: tag.name,\n          })),\n        },\n      },\n      createdAtFilter({\n        description: message('Date ticket was created'),\n      }),\n      updatedAtFilter({\n        description: message('Date ticket was last updated'),\n      }),\n      timestampFilter({\n        key: 'closed_at',\n        label: message('Closed at'),\n        description: message('Date ticket was closed'),\n      }),\n      {\n        key: 'user_id',\n        label: message('Customer'),\n        description: message('Customer that created the ticket'),\n        defaultOperator: FilterOperator.eq,\n        control: {\n          type: FilterControlType.SelectModel,\n          model: USER_MODEL,\n        },\n      },\n      {\n        key: 'assigned_to',\n        label: message('Assignee'),\n        description: message('Agent assigned to the ticket'),\n        defaultOperator: FilterOperator.eq,\n        control: {\n          type: FilterControlType.SelectModel,\n          model: USER_MODEL,\n        },\n      },\n    ];\n  }, [data]);\n}\n","import {useEffect} from 'react';\n\nexport function useStableScrollbar(disable: boolean = false) {\n  useEffect(() => {\n    if (disable) {\n      document.documentElement.classList.remove('stable-scrollbar');\n    } else {\n      document.documentElement.classList.add('stable-scrollbar');\n    }\n    return () => {\n      document.documentElement.classList.remove('stable-scrollbar');\n    };\n  }, [disable]);\n}\n","import {AgentNavbar} from '@app/agent/agent-navbar';\nimport React, {useCallback, useEffect, useRef, useState} from 'react';\nimport {Navbar} from '@common/ui/navigation/navbar/navbar';\nimport {Tabs} from '@common/ui/tabs/tabs';\nimport {Tab} from '@common/ui/tabs/tab';\nimport {Trans} from '@common/i18n/trans';\nimport {Link, Outlet, useLocation, useSearchParams} from 'react-router-dom';\nimport {TabList} from '@common/ui/tabs/tab-list';\nimport {message} from '@common/i18n/message';\nimport {TextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {SearchIcon} from '@common/icons/material/Search';\nimport {useDebouncedCallback} from 'use-debounce';\nimport {FilterList} from '@common/datatable/filters/filter-list/filter-list';\nimport {AddFilterButton} from '@common/datatable/filters/add-filter-button';\nimport {useSearchTicketsFilters} from '@app/agent/agent-search-page/search-tickets/use-search-tickets-filters';\nimport {useStableScrollbar} from '@common/utils/hooks/use-stable-scrollbar';\n\nconst PageTabs = [\n  {uri: 'tickets', label: message('Tickets'), key: 0},\n  {uri: 'users', label: message('Users'), key: 1},\n  {uri: 'articles', label: message('Articles'), key: 2},\n];\n\nexport function AgentSearchPage() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchParamsQuery = searchParams.get('query') || '';\n  const {pathname} = useLocation();\n  const tabName = pathname.split('/').pop();\n  const selectedTab = PageTabs.find(tab => tab.uri === tabName)?.key ?? 0;\n  const searchInputRef = useRef<HTMLInputElement>(null);\n  const [searchQuery, _setSearchQuery] = useState(searchParamsQuery);\n\n  useStableScrollbar();\n\n  useEffect(() => {\n    _setSearchQuery(searchParamsQuery);\n  }, [searchParamsQuery]);\n\n  const updateQueryParams = (value: string) => {\n    setSearchParams(prev => {\n      prev.delete('page');\n      prev.set('query', value);\n      return prev;\n    });\n  };\n  const debouncedUpdateQueryParams = useDebouncedCallback(value => {\n    updateQueryParams(value);\n  }, 400);\n\n  const setSearchQuery = (value: string) => {\n    _setSearchQuery(value);\n    debouncedUpdateQueryParams(value);\n  };\n\n  const focusSearchInput = useCallback(() => {\n    searchInputRef.current?.focus();\n  }, []);\n\n  const filters = useSearchTicketsFilters();\n  const showFilters = filters && selectedTab === 0;\n\n  return (\n    <div>\n      <AgentNavbar element={Navbar} onOpenSearchPage={focusSearchInput} />\n      <main className=\"container mx-auto p-14 md:p-24\">\n        <div className=\"mb-34 flex items-center gap-24 pt-6\">\n          <form\n            className=\"flex-auto\"\n            onSubmit={e => {\n              e.preventDefault();\n              updateQueryParams(searchQuery);\n            }}\n          >\n            <TextField\n              onBlur={() => updateQueryParams(searchQuery)}\n              inputRef={searchInputRef}\n              value={searchQuery}\n              onChange={e => {\n                setSearchQuery(e.target.value);\n              }}\n              startAdornment={<SearchIcon />}\n              autoFocus\n            />\n          </form>\n          {showFilters && (\n            <AddFilterButton className=\"min-h-42 min-w-42\" filters={filters} />\n          )}\n        </div>\n        {showFilters && <FilterList filters={filters} />}\n        <Tabs selectedTab={selectedTab}>\n          <TabList>\n            {PageTabs.map(tab => (\n              <Tab\n                key={tab.key}\n                width=\"min-w-132\"\n                elementType={Link}\n                to={`/agent/search/${tab.uri}?query=${searchQuery}`}\n                relative=\"path\"\n                replace\n              >\n                <Trans {...tab.label} />\n              </Tab>\n            ))}\n          </TabList>\n          <div className=\"pt-34\">\n            <Outlet />\n          </div>\n        </Tabs>\n      </main>\n    </div>\n  );\n}\n","import {keepPreviousData, useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {PaginatedBackendResponse} from '@common/http/backend-response/pagination-response';\nimport {PaginateTicketsParams} from '@app/agent/agent-ticket-page/user-details-sidebar/requests/use-tickets';\nimport {useSearchParams} from 'react-router-dom';\nimport {Ticket} from '@app/agent/ticket';\n\nexport interface PaginateTicketsResponse\n  extends PaginatedBackendResponse<Ticket> {}\n\nexport function useSearchTickets() {\n  const [searchParams] = useSearchParams();\n  const params = {\n    filters: searchParams.get('filters') ?? '',\n    query: searchParams.get('query') ?? '',\n    page: searchParams.get('page') ?? '1',\n    perPage: searchParams.get('perPage') ?? '20',\n  };\n  const enabled = !!params.query || !!params.filters;\n  return useQuery({\n    queryKey: ['tickets', 'search', params],\n    queryFn: () => fetchTickets(params),\n    placeholderData: enabled ? keepPreviousData : undefined,\n    enabled,\n  });\n}\n\nfunction fetchTickets(params: PaginateTicketsParams) {\n  return apiClient\n    .get<PaginateTicketsResponse>('search/tickets', {params})\n    .then(response => response.data);\n}\n","import React, {Fragment, ReactNode} from 'react';\nimport {GlobalLoadingProgress} from '@app/agent/global-loading-progress';\nimport {DataTableEmptyStateMessage} from '@common/datatable/page/data-table-emty-state-message';\nimport searchImage from '@app/agent/agent-search-page/search.svg';\nimport {Trans} from '@common/i18n/trans';\nimport {DataTablePaginationFooter} from '@common/datatable/data-table-pagination-footer';\nimport {UseQueryResult} from '@tanstack/react-query';\nimport {useSearchParams} from 'react-router-dom';\nimport {PaginatedBackendResponse} from '@common/http/backend-response/pagination-response';\n\ninterface Props {\n  query: UseQueryResult<PaginatedBackendResponse<unknown>>;\n  children: ReactNode;\n}\nexport function SearchTableLayout({query, children}: Props) {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const {data, fetchStatus, isLoading, isPlaceholderData} = query;\n  const items = data?.pagination.data || [];\n  const isEmpty =\n    (fetchStatus === 'idle' && items.length === 0) ||\n    (!isLoading && !isPlaceholderData && items.length === 0);\n\n  return (\n    <Fragment>\n      <GlobalLoadingProgress query={query} />\n      {children}\n      {isEmpty && (\n        <DataTableEmptyStateMessage\n          isFiltering={\n            !!searchParams.get('query') || !!searchParams.get('filters')\n          }\n          className=\"mt-48\"\n          image={searchImage}\n          title={\n            <Trans message=\"Enter your query or filters to start searching\" />\n          }\n          filteringTitle={\n            <Trans message=\"No results match your query or filters\" />\n          }\n        />\n      )}\n      <DataTablePaginationFooter\n        query={query}\n        onPageChange={page =>\n          setSearchParams(prev => {\n            prev.set('page', page.toString());\n            return prev;\n          })\n        }\n        onPerPageChange={perPage =>\n          setSearchParams(prev => {\n            prev.set('perPage', perPage.toString());\n            return prev;\n          })\n        }\n      />\n    </Fragment>\n  );\n}\n","import {useSearchTickets} from '@app/agent/agent-search-page/requests/use-search-tickets';\nimport {TicketTable} from '@app/agent/agent-ticket-list-page/ticket-table/ticket-table';\nimport React, {useState} from 'react';\nimport {SearchTableLayout} from '@app/agent/agent-search-page/search-table-layout';\nimport {AnimatePresence} from 'framer-motion';\nimport {TicketTableActions} from '@app/agent/agent-ticket-list-page/ticket-table/ticket-table-actions';\n\nexport function SearchTicketsTable() {\n  const query = useSearchTickets();\n  const [selectedTickets, setSelectedTickets] = useState<number[]>([]);\n  return (\n    <SearchTableLayout query={query}>\n      <TicketTable\n        query={query}\n        selectedTickets={selectedTickets}\n        onSelectionChange={setSelectedTickets}\n      />\n      <AnimatePresence>\n        {selectedTickets.length && (\n          <TicketTableActions\n            ticketIds={selectedTickets}\n            onActionCompleted={() => setSelectedTickets([])}\n          />\n        )}\n      </AnimatePresence>\n    </SearchTableLayout>\n  );\n}\n","import {keepPreviousData, useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {PaginatedBackendResponse} from '@common/http/backend-response/pagination-response';\nimport {PaginateTicketsParams} from '@app/agent/agent-ticket-page/user-details-sidebar/requests/use-tickets';\nimport {useSearchParams} from 'react-router-dom';\nimport {User} from '@common/auth/user';\n\nexport interface PaginateUsersResponse extends PaginatedBackendResponse<User> {}\n\nexport function useSearchUsers() {\n  const [searchParams] = useSearchParams();\n  const params = {\n    query: searchParams.get('query') ?? '',\n    page: searchParams.get('page') ?? '1',\n    perPage: searchParams.get('perPage') ?? '20',\n  };\n  return useQuery({\n    queryKey: ['users', 'search', params],\n    queryFn: () => fetchUsers(params),\n    placeholderData: keepPreviousData,\n    enabled: !!params.query,\n  });\n}\n\nfunction fetchUsers(params: PaginateTicketsParams) {\n  return apiClient\n    .get<PaginateUsersResponse>('search/users', {params})\n    .then(response => response.data);\n}\n","import {Trans} from '@common/i18n/trans';\nimport React from 'react';\nimport {useSearchUsers} from '@app/agent/agent-search-page/requests/use-search-users';\nimport {ColumnConfig} from '@common/datatable/column-config';\nimport {User} from '@common/auth/user';\nimport {NameWithAvatar} from '@common/datatable/column-templates/name-with-avatar';\nimport {ChipList} from '@common/ui/forms/input-field/chip-field/chip-list';\nimport {Chip} from '@common/ui/forms/input-field/chip-field/chip';\nimport {FormattedDate} from '@common/i18n/formatted-date';\nimport {Table} from '@common/ui/tables/table';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {SearchTableLayout} from '@app/agent/agent-search-page/search-table-layout';\n\nconst columnConfig: ColumnConfig<User>[] = [\n  {\n    key: 'name',\n    allowsSorting: true,\n    sortingKey: 'email',\n    width: 'flex-3 min-w-200',\n    visibleInMode: 'all',\n    header: () => <Trans message=\"User\" />,\n    body: user => (\n      <NameWithAvatar\n        image={user.avatar}\n        label={user.display_name}\n        description={user.email}\n      />\n    ),\n  },\n  {\n    key: 'roles',\n    header: () => <Trans message=\"Roles\" />,\n    body: user => (\n      <ChipList radius=\"rounded\" size=\"xs\">\n        {user.roles?.map(role => (\n          <Chip key={role.id} selectable className=\"capitalize\">\n            <Trans message={role.name} />\n          </Chip>\n        ))}\n      </ChipList>\n    ),\n  },\n  {\n    key: 'createdAt',\n    allowsSorting: true,\n    width: 'w-96',\n    header: () => <Trans message=\"Created at\" />,\n    body: user => (\n      <time>\n        <FormattedDate date={user.created_at} />\n      </time>\n    ),\n  },\n];\n\nexport function SearchUsersTable() {\n  const navigate = useNavigate();\n  const query = useSearchUsers();\n  return (\n    <SearchTableLayout query={query}>\n      <Table\n        headerCellHeight=\"h-36\"\n        cellHeight=\"h-64\"\n        columns={columnConfig}\n        data={query.data?.pagination.data || []}\n        enableSelection={false}\n        onAction={user => navigate(`/agent/users/${user.id}`)}\n      />\n    </SearchTableLayout>\n  );\n}\n","import {Trans} from '@common/i18n/trans';\nimport React from 'react';\nimport {useSearchParams} from 'react-router-dom';\nimport {ColumnConfig} from '@common/datatable/column-config';\nimport {FormattedDate} from '@common/i18n/formatted-date';\nimport {Table} from '@common/ui/tables/table';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {Article} from '@app/help-center/articles/article';\nimport {ArticleIcon} from '@common/icons/material/Article';\nimport {useSearchArticles} from '@app/help-center/search/use-search-articles';\nimport {getArticleLink} from '@app/help-center/articles/article-link';\nimport {ArticlePath} from '@app/help-center/articles/article-path';\nimport {SearchTableLayout} from '@app/agent/agent-search-page/search-table-layout';\n\nconst columnConfig: ColumnConfig<Article>[] = [\n  {\n    key: 'name',\n    width: 'flex-3 min-w-200',\n    visibleInMode: 'all',\n    header: () => <Trans message=\"Article\" />,\n    body: article => (\n      <div className=\"flex items-center gap-12\">\n        <ArticleIcon />\n        <div className=\"min-w-0 overflow-hidden\">\n          <div className=\"overflow-hidden overflow-ellipsis\">\n            {article.title}\n          </div>\n          <ArticlePath article={article} className=\"text-xs text-muted\" />\n        </div>\n      </div>\n    ),\n  },\n  {\n    key: 'updated_at',\n    allowsSorting: true,\n    width: 'w-96',\n    header: () => <Trans message=\"Last updated\" />,\n    body: user => (\n      <time>\n        <FormattedDate date={user.updated_at} />\n      </time>\n    ),\n  },\n];\n\nexport function SearchArticlesTable() {\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const query = useSearchArticles(\n    searchParams.get('query') || '',\n    {\n      page: searchParams.get('page') ?? '1',\n      perPage: searchParams.get('perPage') ?? '20',\n      paginate: 'lengthAware',\n    },\n    {disableDebounce: true},\n  );\n  return (\n    <SearchTableLayout query={query}>\n      <Table\n        headerCellHeight=\"h-36\"\n        cellHeight=\"h-64\"\n        columns={columnConfig}\n        data={query.data?.pagination.data || []}\n        enableSelection={false}\n        onAction={article => navigate(getArticleLink(article))}\n      />\n    </SearchTableLayout>\n  );\n}\n","import {createSvgIcon} from '@common/icons/create-svg-icon';\n\nexport const AddNoteIcon = createSvgIcon(\n  <path d=\"M 5 5 L 5 6 L 5 26 L 5 27 L 6 27 L 20 27 L 20.40625 27 L 20.71875 26.71875 L 26.71875 20.71875 L 27 20.40625 L 27 20 L 27 6 L 27 5 L 26 5 L 6 5 L 5 5 z M 7 7 L 25 7 L 25 19 L 20 19 L 19 19 L 19 20 L 19 25 L 7 25 L 7 7 z M 21 21 L 23.5625 21 L 21 23.5625 L 21 21 z\" />,\n  '',\n  '0 0 32 32'\n);\n","import {createSvgIcon} from '@common/icons/create-svg-icon';\n\nexport const BackToTicketsIcon = createSvgIcon(\n  <path d=\"M 8.28125 5.28125 L 2.28125 11.28125 L 1.59375 12 L 2.28125 12.71875 L 8.28125 18.71875 L 9.71875 17.28125 L 5.4375 13 L 23 13 C 25.754545 13 28 15.245455 28 18 C 28 20.754545 25.754545 23 23 23 L 20 23 L 20 25 L 23 25 C 26.845455 25 30 21.845455 30 18 C 30 14.154545 26.845455 11 23 11 L 5.4375 11 L 9.71875 6.71875 L 8.28125 5.28125 z M 8 23 L 8 25 L 10 25 L 10 23 L 8 23 z M 12 23 L 12 25 L 14 25 L 14 23 L 12 23 z M 16 23 L 16 25 L 18 25 L 18 23 L 16 23 z\" />,\n  '',\n  '0 0 32 32'\n);\n","import {useSettings} from '@common/core/settings/use-settings';\nimport {useLocalStorage} from '@common/utils/hooks/local-storage';\nimport {useCallback} from 'react';\nimport {\n  useMailboxParams,\n  useNavigateToMailboxTicketTable,\n} from '@app/agent/use-mailbox-params';\nimport {message} from '@common/i18n/message';\nimport {apiClient} from '@common/http/query-client';\nimport {Ticket} from '@app/agent/ticket';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {getTicketPageLink} from '@app/agent/agent-ticket-page/ticket-page-link';\nimport {useParams} from 'react-router-dom';\n\nexport const AfterReplyActions = {\n  stay_on_page: message('Send and stay on page'),\n  next_active_ticket: message('Send and next ticket'),\n  back_to_folder: message('Send and back to folder'),\n};\n\nexport type AfterReplyAction = keyof typeof AfterReplyActions;\n\nexport function useAfterReplyAction() {\n  const {tagId} = useMailboxParams();\n  const {ticketId} = useParams();\n  const backToTicketTable = useNavigateToMailboxTicketTable();\n  const {replies} = useSettings();\n  const navigate = useNavigate();\n  const defaultAction: AfterReplyAction =\n    replies?.after_reply_action || 'next_active_ticket';\n  const [action, setAction] = useLocalStorage<AfterReplyAction>(\n    'after_reply_action',\n    defaultAction,\n  );\n  const perform = useCallback(async () => {\n    if (action === 'next_active_ticket') {\n      const response = await apiClient.get<{ticket: Ticket}>(\n        `tickets/${tagId}/next-active-ticket`,\n      );\n      if (response?.data.ticket) {\n        if (ticketId === `${response.data.ticket.id}`) {\n          backToTicketTable();\n        } else {\n          navigate(getTicketPageLink(response.data.ticket, {tagId}));\n        }\n      }\n    } else if (action === 'back_to_folder') {\n      backToTicketTable();\n    }\n  }, [action, backToTicketTable, tagId, navigate]);\n\n  return {action, setAction, perform};\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {Reply} from '@app/agent/reply';\nimport {useParams} from 'react-router-dom';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\n\ninterface Response {\n  reply: Reply;\n}\n\ninterface Payload {\n  body: string | null;\n  attachments?: number[];\n}\n\nexport function useCreateNote() {\n  const {ticketId} = useParams();\n  return useMutation({\n    mutationFn: (payload: Payload) => createNote(ticketId!, payload),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({\n        queryKey: ['tickets', `${ticketId}`],\n      });\n      toast(message('Note added'));\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction createNote(ticketId: number | string, payload: Payload) {\n  return apiClient\n    .post<Response>(`tickets/${ticketId}/notes`, payload)\n    .then(r => r.data);\n}\n","import {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {Trans} from '@common/i18n/trans';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {Button} from '@common/ui/buttons/button';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {ReplyEditor} from '@app/reply-editor/reply-editor';\nimport React, {useRef, useState} from 'react';\nimport {useCreateNote} from '@app/agent/agent-ticket-page/notes/use-create-note';\nimport {Editor} from '@tiptap/react';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {getReplyBody} from '@app/reply-editor/get-reply-body';\n\nexport function CreateNoteDialog() {\n  const editorRef = useRef<Editor | null>(null);\n  const {close} = useDialogContext();\n  const createNote = useCreateNote();\n  const [attachments, setAttachments] = useState<FileEntry[]>([]);\n\n  const handleSubmit = () => {\n    createNote.mutate(\n      {\n        body: getReplyBody(editorRef),\n        attachments: attachments.map(a => a.id),\n      },\n      {\n        onSuccess: () => close(),\n      },\n    );\n  };\n\n  return (\n    <Dialog size=\"lg\">\n      <DialogHeader>\n        <Trans message=\"Add a note\" />\n      </DialogHeader>\n      <DialogBody>\n        <FileUploadProvider>\n          <ReplyEditor\n            minHeight=\"min-h-[300px]\"\n            isLoading={createNote.isPending}\n            editorRef={editorRef}\n            className=\"mb-24\"\n            attachments={attachments}\n            onAttachmentsChange={attachments => setAttachments(attachments)}\n            onSubmit={() => handleSubmit()}\n          />\n        </FileUploadProvider>\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          variant=\"flat\"\n          color=\"primary\"\n          onClick={() => handleSubmit()}\n          disabled={createNote.isPending}\n        >\n          <Trans message=\"Add\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {Ticket} from '@app/agent/ticket';\nimport {Trans} from '@common/i18n/trans';\nimport {Link} from 'react-router-dom';\nimport React, {useState} from 'react';\nimport {useMailboxTicketTableLink} from '@app/agent/use-mailbox-params';\nimport {Chip} from '@common/ui/forms/input-field/chip-field/chip';\nimport {AssignTicketsButton} from '@app/agent/ticket-actions/assign-tickets-button';\nimport {ChangeTicketStatusButton} from '@app/agent/ticket-actions/change-ticket-status-button';\nimport {AddTagToTicketsButton} from '@app/agent/ticket-actions/add-tag-to-tickets-button';\nimport {AddNoteIcon} from '@app/agent/ticket-actions/icons/add-note-icon';\nimport {BackToTicketsIcon} from '@app/agent/ticket-actions/icons/back-to-tickets-icon';\nimport {TicketActionButton} from '@app/agent/ticket-actions/ticket-action-button';\nimport {useAfterReplyAction} from '@app/agent/agent-ticket-page/use-after-reply-action';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {CreateNoteDialog} from '@app/agent/agent-ticket-page/notes/create-note-dialog';\nimport {useKeybind} from '@common/utils/keybinds/use-keybind';\n\ninterface Props {\n  ticket: Ticket;\n}\nexport function TicketPageToolbar({ticket}: Props) {\n  const backLink = useMailboxTicketTableLink();\n  const {perform: afterReplyAction} = useAfterReplyAction();\n  return (\n    <div className=\"flex items-center gap-14 border-b py-4 pl-14 pr-20\">\n      <TicketActionButton\n        startIcon={<BackToTicketsIcon />}\n        isCompact={true}\n        elementType={Link}\n        to={backLink}\n      >\n        <Trans message=\"Back (b)\" />\n      </TicketActionButton>\n      <AssignTicketsButton ticketIds={[ticket.id]} isCompact />\n      <AddNoteButton />\n      <AddTagToTicketsButton ticketIds={[ticket.id]} isCompact />\n      <ChangeTicketStatusButton\n        ticketIds={[ticket.id]}\n        isCompact\n        onSuccess={() => afterReplyAction()}\n      />\n      <div className=\"ml-auto text-2xl\">#{ticket.id}</div>\n      {ticket.status && (\n        <Chip\n          size=\"sm\"\n          radius=\"rounded\"\n          className=\"font-bold capitalize\"\n          color={ticket.status === 'open' ? 'primary' : 'chip'}\n        >\n          <Trans message={ticket.status} />\n        </Chip>\n      )}\n    </div>\n  );\n}\n\nfunction AddNoteButton() {\n  const [isOpen, setIsOpen] = useState(false);\n  useKeybind('window', 'n', () => setIsOpen(true));\n  return (\n    <DialogTrigger type=\"modal\" isOpen={isOpen} onOpenChange={setIsOpen}>\n      <TicketActionButton startIcon={<AddNoteIcon />} isCompact>\n        <Trans message=\"Note (n)\" />\n      </TicketActionButton>\n      <CreateNoteDialog />\n    </DialogTrigger>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {Reply} from '@app/agent/reply';\n\ninterface Payload {\n  reply: Reply;\n}\n\nexport function useDeleteReply() {\n  return useMutation({\n    mutationFn: (payload: Payload) => deleteReply(payload),\n    onSuccess: async (_, payload) => {\n      await queryClient.invalidateQueries({\n        queryKey: ['tickets', `${payload.reply.ticket_id}`],\n      });\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction deleteReply(payload: Payload) {\n  return apiClient.delete(`replies/${payload.reply.id}`).then(r => r.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {Reply} from '@app/agent/reply';\n\ninterface Response {\n  reply: Reply;\n}\n\ninterface Payload {\n  reply: Reply;\n  body?: string | null;\n  attachments?: number[];\n}\n\nexport function useUpdateReply() {\n  return useMutation({\n    mutationFn: (payload: Payload) => updateReply(payload),\n    onSuccess: async (_, payload) => {\n      await queryClient.invalidateQueries({\n        queryKey: ['tickets', `${payload.reply.ticket_id}`, 'replies'],\n      });\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction updateReply({reply, ...payload}: Payload) {\n  return apiClient\n    .put<Response>(`replies/${reply.id}`, payload)\n    .then(r => r.data);\n}\n","import {Reply} from '@app/agent/reply';\nimport {useUpdateReply} from '@app/agent/agent-ticket-page/reply-list/requests/use-update-reply';\nimport React from 'react';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {ConfirmationDialog} from '@common/ui/overlays/dialog/confirmation-dialog';\nimport {Trans} from '@common/i18n/trans';\nimport {\n  AttachmentListLayout,\n  FileEntryAttachmentLayout,\n} from '@app/agent/ticket-layout/attachment-list-layout';\nimport {openDialog} from '@common/ui/overlays/store/dialog-store';\n\ninterface Props {\n  reply: Reply;\n}\nexport function ReplyAttachmentList({reply}: Props) {\n  if (!reply.attachments?.length) return null;\n  return (\n    <AttachmentListLayout className=\"mt-30 w-max\">\n      {reply.attachments.map((attachment, index) => (\n        <FileEntryAttachmentLayout\n          key={attachment.id}\n          attachments={reply.attachments!}\n          index={index}\n          onRemove={() => {\n            openDialog(DeleteAttachmentDialog, {reply, attachment});\n          }}\n        />\n      ))}\n    </AttachmentListLayout>\n  );\n}\n\ninterface DeleteAttachmentDialogProps {\n  reply: Reply;\n  attachment: FileEntry;\n}\nfunction DeleteAttachmentDialog({\n  reply,\n  attachment,\n}: DeleteAttachmentDialogProps) {\n  const updateReply = useUpdateReply();\n  const {close} = useDialogContext();\n  return (\n    <ConfirmationDialog\n      isDanger\n      title={<Trans message=\"Delete attachment\" />}\n      body={\n        <Trans message=\"Are you sure you want to delete this attachment?\" />\n      }\n      confirm={<Trans message=\"Delete\" />}\n      onConfirm={() => {\n        updateReply.mutate(\n          {\n            reply,\n            attachments: reply\n              .attachments!.filter(u => u.id !== attachment.id)\n              .map(u => u.id),\n          },\n          {onSuccess: close},\n        );\n      }}\n      isLoading={updateReply.isPending}\n    />\n  );\n}\n","import {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {Trans} from '@common/i18n/trans';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {Button} from '@common/ui/buttons/button';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {ReplyEditor} from '@app/reply-editor/reply-editor';\nimport React, {useRef, useState} from 'react';\nimport {Editor} from '@tiptap/react';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {getReplyBody} from '@app/reply-editor/get-reply-body';\nimport {useUpdateReply} from '@app/agent/agent-ticket-page/reply-list/requests/use-update-reply';\nimport {Reply} from '@app/agent/reply';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\n\ninterface Props {\n  reply: Reply;\n}\nexport function UpdateReplyDialog({reply}: Props) {\n  const editorRef = useRef<Editor | null>(null);\n  const {close} = useDialogContext();\n  const updateReply = useUpdateReply();\n  const [attachments, setAttachments] = useState<FileEntry[]>(\n    reply.attachments || [],\n  );\n  const title =\n    reply.type === 'notes' ? (\n      <Trans message=\"Edit note\" />\n    ) : (\n      <Trans message=\"Edit reply\" />\n    );\n\n  const handleSubmit = () => {\n    updateReply.mutate(\n      {\n        reply,\n        body: getReplyBody(editorRef),\n        attachments: attachments.map(a => a.id),\n      },\n      {\n        onSuccess: () => {\n          close();\n          toast(\n            reply.type === 'notes'\n              ? message('Updated note')\n              : message('Updated reply'),\n          );\n        },\n      },\n    );\n  };\n\n  return (\n    <Dialog size=\"lg\">\n      <DialogHeader>{title}</DialogHeader>\n      <DialogBody>\n        <FileUploadProvider>\n          <ReplyEditor\n            minHeight=\"min-h-[300px]\"\n            isLoading={updateReply.isPending}\n            initialContent={reply.body}\n            editorRef={editorRef}\n            attachments={attachments}\n            onAttachmentsChange={attachments => setAttachments(attachments)}\n            onSubmit={() => handleSubmit()}\n          />\n        </FileUploadProvider>\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          variant=\"flat\"\n          color=\"primary\"\n          onClick={() => handleSubmit()}\n          disabled={updateReply.isPending}\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\n\nexport interface OriginalReplyEmailResponse {\n  email: {\n    headers: Record<string, string>;\n    body: {\n      html: string;\n      plain: string;\n    };\n  };\n}\n\nexport function useOriginalReplyEmail(replyId: number | string) {\n  return useQuery({\n    queryKey: ['original-email', `${replyId}`],\n    queryFn: () => fetchEmail(replyId),\n    staleTime: Infinity,\n  });\n}\n\nfunction fetchEmail(replyId: string | number) {\n  return apiClient\n    .get<OriginalReplyEmailResponse>(`replies/${replyId}/original`)\n    .then(response => response.data);\n}\n","import {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {Trans} from '@common/i18n/trans';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport React, {useState} from 'react';\nimport {\n  OriginalReplyEmailResponse,\n  useOriginalReplyEmail,\n} from '@app/agent/agent-ticket-page/reply-list/requests/use-original-reply-email';\nimport {FullPageLoader} from '@common/ui/progress/full-page-loader';\nimport {UseQueryResult} from '@tanstack/react-query';\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {ErrorIcon} from '@common/icons/material/Error';\nimport {ButtonGroup} from '@common/ui/buttons/button-group';\nimport {Button} from '@common/ui/buttons/button';\nimport {useSettings} from '@common/core/settings/use-settings';\n\ntype ActiveTab = 'html' | 'plain' | 'headers';\n\ninterface Props {\n  replyId: number;\n}\nexport function OriginalEmailPreviewDialog({replyId}: Props) {\n  const {base_url} = useSettings();\n  const query = useOriginalReplyEmail(replyId);\n  const [activeTab, setActiveTab] = useState<ActiveTab>('html');\n\n  return (\n    <Dialog size=\"fullscreen\" className=\"h-dialog\">\n      <DialogHeader\n        showDivider\n        padding=\"px-24 py-12\"\n        titleFontWeight=\"font-normal\"\n        titleTextSize=\"text-base\"\n        justify=\"justify-start\"\n        actions={\n          <div>\n            <ButtonGroup\n              variant=\"outline\"\n              radius=\"rounded-md\"\n              size=\"xs\"\n              value={activeTab}\n              onChange={setActiveTab}\n            >\n              <Button value=\"html\">\n                <Trans message=\"HTML\" />\n              </Button>\n              <Button value=\"plain\">\n                <Trans message=\"Plain\" />\n              </Button>\n              <Button value=\"headers\">\n                <Trans message=\"Headers\" />\n              </Button>\n            </ButtonGroup>\n            <Button\n              className=\"ml-34\"\n              variant=\"outline\"\n              size=\"xs\"\n              elementType=\"a\"\n              download\n              href={`${base_url}/api/v1/replies/${replyId}/original/download`}\n            >\n              <Trans message=\"Download\" />\n            </Button>\n          </div>\n        }\n      >\n        <Trans message=\"Original email\" />\n      </DialogHeader>\n      <DialogBody>\n        {query.data?.email ? (\n          <Content data={query.data} activeTab={activeTab} />\n        ) : (\n          <Status query={query} />\n        )}\n      </DialogBody>\n    </Dialog>\n  );\n}\n\ninterface ContentProps {\n  data: OriginalReplyEmailResponse;\n  activeTab: ActiveTab;\n}\nfunction Content({data, activeTab}: ContentProps) {\n  if (activeTab === 'html') {\n    return <div dangerouslySetInnerHTML={{__html: data.email.body.html}} />;\n  } else if (activeTab === 'plain') {\n    return (\n      <pre className=\"whitespace-pre-wrap break-words\">\n        {data.email.body.plain}\n      </pre>\n    );\n  } else {\n    return (\n      <table>\n        <tbody>\n          {Object.entries(data.email.headers).map(([key, value]) => (\n            <tr key={key}>\n              <th className=\"whitespace-nowrap border px-20 py-10 text-left\">\n                {key}\n              </th>\n              <td className=\"whitespace-nowrap border px-20 py-10 text-left\">\n                {value}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\ninterface StatusProps {\n  query: UseQueryResult;\n}\nexport function Status({query}: StatusProps) {\n  if (query.isLoading) {\n    return <FullPageLoader className=\"absolute inset-0 m-auto\" />;\n  }\n\n  return (\n    <IllustratedMessage\n      className=\"mt-40\"\n      image={\n        <div>\n          <ErrorIcon size=\"xl\" />\n        </div>\n      }\n      imageHeight=\"h-auto\"\n      title={<Trans message=\"Original email for this reply does not exist\" />}\n    />\n  );\n}\n","import {GetTicketResponse} from '@app/agent/agent-ticket-page/requests/use-ticket';\r\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\r\nimport React from 'react';\r\nimport {useTicketPageStore} from '@app/agent/agent-ticket-page/ticket-page-store';\r\nimport {useTicketReplies} from '@app/agent/agent-ticket-page/reply-list/requests/use-ticket-replies';\r\nimport {Reply} from '@app/agent/reply';\r\nimport {Menu, MenuTrigger} from '@common/ui/navigation/menu/menu-trigger';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {MoreVertIcon} from '@common/icons/material/MoreVert';\r\nimport {Item} from '@common/ui/forms/listbox/item';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {closeDialog, openDialog} from '@common/ui/overlays/store/dialog-store';\r\nimport {useDeleteReply} from '@app/agent/agent-ticket-page/reply-list/requests/use-delete-reply';\r\nimport {ConfirmationDialog} from '@common/ui/overlays/dialog/confirmation-dialog';\r\nimport {TicketReplyLayout} from '@app/agent/ticket-layout/ticket-reply-layout';\r\nimport {ReplyAttachmentList} from '@app/agent/agent-ticket-page/reply-list/reply-attachment-list';\r\nimport {UpdateReplyDialog} from '@app/agent/agent-ticket-page/reply-list/update-reply-dialog';\r\nimport {OriginalEmailPreviewDialog} from '@app/agent/agent-ticket-page/reply-list/original-email-preview-dialog';\r\n\r\ninterface Props {\r\n  data: GetTicketResponse;\r\n}\r\nexport function AgentTicketPageReplyList({\r\n  data: {ticket, replies, draft},\r\n}: Props) {\r\n  const editorIsOpen = useTicketPageStore(s => s.editorIsOpen);\r\n  const showDraft = draft && !editorIsOpen;\r\n  const query = useTicketReplies(ticket.id, replies);\r\n\r\n  return (\r\n    <div>\r\n      {showDraft && (\r\n        <TicketReplyLayout\r\n          reply={draft}\r\n          className=\"pl-20 pr-8\"\r\n          actions={<ReplyActionsButton reply={draft} />}\r\n          ticketRequestType={ticket.ticket_request_type}\r\n        />\r\n      )}\r\n      {query.items.map(reply => {\r\n        const isInitial =\r\n          !query.hasNextPage && reply.id === query.items.at(-1)?.id;\r\n        return (\r\n          <TicketReplyLayout\r\n            className=\"pl-20 pr-8\"\r\n            key={reply.id}\r\n            reply={reply}\r\n            isInitial={isInitial}\r\n            actions={<ReplyActionsButton reply={reply} />}\r\n            attachments={<ReplyAttachmentList reply={reply} />}\r\n            ticketRequestType={ticket.ticket_request_type}\r\n          />\r\n        );\r\n      })}\r\n      <InfiniteScrollSentinel query={query} />\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface ReplyActionsButtonProps {\r\n  reply: Reply;\r\n}\r\nfunction ReplyActionsButton({reply}: ReplyActionsButtonProps) {\r\n  return (\r\n    <MenuTrigger>\r\n      <IconButton className=\"text-muted\" size=\"sm\">\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n      <Menu>\r\n        <Item\r\n          value=\"edit\"\r\n          onClick={() => openDialog(UpdateReplyDialog, {reply})}\r\n        >\r\n          <Trans message=\"Edit\" />\r\n        </Item>\r\n        {reply.type === 'replies' && (\r\n          <Item\r\n            value=\"showOriginal\"\r\n            onClick={() =>\r\n              openDialog(OriginalEmailPreviewDialog, {replyId: reply.id})\r\n            }\r\n          >\r\n            <Trans message=\"Show original\" />\r\n          </Item>\r\n        )}\r\n        <Item\r\n          value=\"delete\"\r\n          onClick={() => openDialog(ConfirmDeleteReplyDialog, {reply})}\r\n        >\r\n          <Trans message=\"Delete\" />\r\n        </Item>\r\n      </Menu>\r\n    </MenuTrigger>\r\n  );\r\n}\r\n\r\ninterface ConfirmDeleteReplyDialogProps {\r\n  reply: Reply;\r\n}\r\nfunction ConfirmDeleteReplyDialog({reply}: ConfirmDeleteReplyDialogProps) {\r\n  const deleteReply = useDeleteReply();\r\n  let title = <Trans message=\"Delete reply\" />;\r\n  let body = <Trans message=\"Are you sure you want to delete this reply?\" />;\r\n  if (reply.type === 'notes') {\r\n    title = <Trans message=\"Delete note\" />;\r\n    body = <Trans message=\"Are you sure you want to delete this note?\" />;\r\n  }\r\n  return (\r\n    <ConfirmationDialog\r\n      isDanger\r\n      title={title}\r\n      body={body}\r\n      confirm={<Trans message=\"Delete\" />}\r\n      onConfirm={() =>\r\n        deleteReply.mutate(\r\n          {reply},\r\n          {\r\n            onSuccess: () => closeDialog(),\r\n          },\r\n        )\r\n      }\r\n      isLoading={deleteReply.isPending}\r\n    />\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {updateTicketQuery} from '@app/agent/agent-ticket-page/requests/use-ticket';\n\ninterface Payload {\n  tagId: number;\n  ticketIds: number[];\n}\n\nexport function useRemoveTagFromTickets() {\n  return useMutation({\n    mutationFn: (payload: Payload) => removeTag(payload),\n    onSuccess: (_, payload) => {\n      queryClient.invalidateQueries({queryKey: ['mailbox', 'sidenav-tags']});\n      payload.ticketIds.forEach(ticketId => {\n        updateTicketQuery(ticketId, old => {\n          old.ticket.tags = old.ticket.tags?.filter(\n            tag => tag.id !== payload.tagId,\n          );\n        });\n      });\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction removeTag(payload: Payload): Promise<BackendResponse> {\n  return apiClient.post(`tickets/tags/remove`, payload).then(r => r.data);\n}\n","import {FormattedRelativeTime} from '@common/i18n/formatted-relative-time';\r\nimport {FormattedDate} from '@common/i18n/formatted-date';\r\nimport {Fragment, ReactNode} from 'react';\r\nimport {Ticket} from '@app/agent/ticket';\r\nimport TicketTypeRequestTag from './ticket-type-request-tag';\r\n\r\nconst TicketHeaderDateFormat: Intl.DateTimeFormatOptions = {\r\n  month: 'short',\r\n  day: 'numeric',\r\n};\r\n\r\ninterface Props {\r\n  ticket: Ticket;\r\n  children?: ReactNode;\r\n  actions?: ReactNode;\r\n}\r\nexport function TicketHeaderLayout({ticket, actions, children}: Props) {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"flex items-start gap-12 px-20 py-14 max-md:flex-col md:items-center\">\r\n        <div className=\"flex items-center gap-8\">\r\n          <h1 className=\"text-2xl\">{ticket.subject}</h1>\r\n          <TicketTypeRequestTag ticketRequestType={ticket.ticket_request_type} />\r\n        </div>\r\n        {children}\r\n        <div className=\"mr-24 max-md:hidden\" />\r\n        <div className=\"whitespace-nowrap text-muted md:ml-auto\">\r\n          <FormattedRelativeTime date={ticket.created_at} /> (\r\n          <FormattedDate\r\n            date={ticket.created_at}\r\n            options={TicketHeaderDateFormat}\r\n          />\r\n          )\r\n        </div>\r\n        {actions}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","import {Chip} from '@common/ui/forms/input-field/chip-field/chip';\nimport {\n  ChipList,\n  ChipListProps,\n} from '@common/ui/forms/input-field/chip-field/chip-list';\nimport {Ticket, TicketTag} from '@app/agent/ticket';\n\ninterface Props extends ChipListProps {\n  ticket: Ticket;\n  onRemoveTag?: (tag: TicketTag) => void;\n  tagType?: string;\n}\nexport function TicketTagList({\n  ticket,\n  onRemoveTag,\n  tagType,\n  size = 'xs',\n  ...chipListProps\n}: Props) {\n  if (!ticket.tags?.length) return null;\n\n  return (\n    <ChipList {...chipListProps} size={size} selectable={!!onRemoveTag}>\n      {ticket.tags\n        ?.filter(t => t.type !== 'status' && (!tagType || t.type === tagType))\n        .map(tag => (\n          <Chip\n            key={tag.id}\n            onRemove={onRemoveTag ? () => onRemoveTag(tag) : undefined}\n          >\n            {tag.display_name}\n          </Chip>\n        ))}\n    </ChipList>\n  );\n}\n","import {GetTicketResponse} from '@app/agent/agent-ticket-page/requests/use-ticket';\nimport {useRemoveTagFromTickets} from '@app/agent/ticket-actions/requests/use-remove-tag-from-tickets';\nimport {Tag} from '@common/tags/tag';\nimport {useOpenReplyEditor} from '@app/agent/agent-ticket-page/agent-reply-editor/use-open-reply-editor';\nimport {useTicketPageStore} from '@app/agent/agent-ticket-page/ticket-page-store';\nimport {TicketHeaderLayout} from '@app/agent/ticket-layout/ticket-header-layout';\nimport {TicketTagList} from '@app/agent/ticket-layout/ticket-tag-list';\nimport {useKeybind} from '@common/utils/keybinds/use-keybind';\nimport {Button} from '@common/ui/buttons/button';\nimport {Trans} from '@common/i18n/trans';\nimport {ReplyIcon} from '@common/icons/material/Reply';\n\ninterface Props {\n  data: GetTicketResponse;\n}\nexport function TicketPageHeader({data: {ticket}}: Props) {\n  const removeTags = useRemoveTagFromTickets();\n  const editorIsOpen = useTicketPageStore(s => s.editorIsOpen);\n  const openEditor = useOpenReplyEditor();\n  const handleRemoveTag = (tag: Tag) => {\n    removeTags.mutate({\n      ticketIds: [ticket.id],\n      tagId: tag.id,\n    });\n  };\n\n  useKeybind('window', 'r', () => {\n    if (!editorIsOpen) {\n      openEditor();\n    }\n  });\n\n  return (\n    <TicketHeaderLayout\n      ticket={ticket}\n      actions={\n        ticket.status !== 'locked' && (\n          <Button\n            variant=\"outline\"\n            size=\"xs\"\n            onClick={() => openEditor()}\n            startIcon={<ReplyIcon />}\n            disabled={editorIsOpen}\n          >\n            <Trans message=\"Reply\" />\n          </Button>\n        )\n      }\n    >\n      <TicketTagList ticket={ticket} onRemoveTag={handleRemoveTag} />\n    </TicketHeaderLayout>\n  );\n}\n","import {IconButton} from '@common/ui/buttons/icon-button';\nimport clsx from 'clsx';\nimport {KeyboardArrowDownIcon} from '@common/icons/material/KeyboardArrowDown';\nimport {ReactNode} from 'react';\nimport {useLocalStorage} from '@common/utils/hooks/local-storage';\n\ninterface Props {\n  label: ReactNode;\n  children: ReactNode;\n  name: string;\n  className?: string;\n}\nexport function UserDetailsSection({label, children, name, className}: Props) {\n  const [isVisible, setIsVisible] = useLocalStorage(name, true);\n  return (\n    <section className={clsx('border-b pb-14 text-sm', className)}>\n      <div className=\"flex items-center justify-between gap-14 px-14\">\n        <div className=\"font-semibold\">{label}</div>\n        <IconButton\n          onClick={() => setIsVisible(!isVisible)}\n          className={clsx('transition-transform', isVisible && 'rotate-180')}\n        >\n          <KeyboardArrowDownIcon />\n        </IconButton>\n      </div>\n      {isVisible && <div className=\"pt-8\">{children}</div>}\n    </section>\n  );\n}\n","import {PurchaseCode} from '@app/agent/purchase-code';\nimport {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {LinkStyle} from '@common/ui/buttons/external-link';\nimport {Trans} from '@common/i18n/trans';\nimport {ReactNode} from 'react';\nimport {FormattedDate} from '@common/i18n/formatted-date';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {Button} from '@common/ui/buttons/button';\nimport {useSyncEnvatoPurchases} from '@app/agent/agent-ticket-page/user-details-sidebar/requests/use-sync-envato-purchases';\n\ninterface Props {\n  purchaseCode: PurchaseCode;\n}\nexport function PurchaseCodeDetailsDialog({purchaseCode}: Props) {\n  const {close} = useDialogContext();\n  const syncPurchases = useSyncEnvatoPurchases();\n  return (\n    <Dialog size=\"md\">\n      <DialogBody>\n        <div className=\"flex items-start gap-14 text-sm\">\n          <img\n            src={purchaseCode.image}\n            alt=\"\"\n            className=\"h-80 w-80 flex-shrink-0 rounded\"\n          />\n          <div className=\"flex-auto\">\n            <a\n              href={purchaseCode.url}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              className={LinkStyle}\n            >\n              {purchaseCode.item_name}\n            </a>\n            <div className=\"mt-4 text-sm text-muted\">{purchaseCode.code}</div>\n            <div className=\"mt-12\">\n              <Detail\n                label={<Trans message=\"Customer\" />}\n                value={purchaseCode.envato_username}\n              />\n              <Detail\n                label={<Trans message=\"Purchased\" />}\n                value={<FormattedDate date={purchaseCode.purchased_at} />}\n              />\n              <Detail\n                label={<Trans message=\"Supported until\" />}\n                value={<FormattedDate date={purchaseCode.supported_until} />}\n              />\n              <Detail\n                label={<Trans message=\"Last synced\" />}\n                value={<FormattedDate date={purchaseCode.updated_at} />}\n              />\n            </div>\n          </div>\n        </div>\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          variant=\"flat\"\n          color=\"primary\"\n          disabled={syncPurchases.isPending}\n          onClick={() => syncPurchases.mutate({userId: purchaseCode.user_id})}\n        >\n          <Trans message=\"Sync purchases\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n\ninterface DetailProps {\n  label: ReactNode;\n  value: ReactNode;\n}\nfunction Detail({label, value}: DetailProps) {\n  return (\n    <div className=\"mb-6 flex items-center gap-14\">\n      <div>{label}:</div>\n      <div className=\"text-muted\">{value}</div>\n    </div>\n  );\n}\n","import {PurchaseCode} from '@app/agent/purchase-code';\nimport {Trans} from '@common/i18n/trans';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport clsx from 'clsx';\nimport {FormattedDate} from '@common/i18n/formatted-date';\nimport {PurchaseCodeDetailsDialog} from '@app/agent/agent-ticket-page/envato-purchase-list/purchase-code-details-dialog';\nimport React from 'react';\n\ninterface Props {\n  purchases: PurchaseCode[];\n  activePurchase?: PurchaseCode;\n  itemClassName?: string;\n}\nexport function EnvatoPurchaseList({\n  purchases,\n  itemClassName,\n  activePurchase,\n}: Props) {\n  return (\n    <div>\n      {purchases.map(purchase => (\n        <DialogTrigger type=\"modal\" key={purchase.id}>\n          <div\n            className={clsx(\n              'flex cursor-pointer items-center gap-8 rounded py-8 hover:bg-hover',\n              itemClassName,\n              activePurchase?.code === purchase.code && 'bg-primary-light/30',\n            )}\n          >\n            <img src={purchase.image} alt=\"\" className=\"h-30 w-30 rounded\" />\n            <div className=\"min-w-0 text-xs\">\n              <div className=\"overflow-hidden overflow-ellipsis whitespace-nowrap\">\n                {purchase.item_name}\n              </div>\n              <div\n                className={clsx(\n                  'text-muted',\n                  purchase.support_expired && 'line-through',\n                )}\n              >\n                {purchase.supported_until ? (\n                  <FormattedDate date={purchase.supported_until} />\n                ) : purchase.support_expired ? (\n                  <Trans message=\"Support expired\" />\n                ) : (\n                  '-'\n                )}\n              </div>\n            </div>\n          </div>\n          <PurchaseCodeDetailsDialog purchaseCode={purchase} />\n        </DialogTrigger>\n      ))}\n    </div>\n  );\n}\n","import {useMemo} from 'react';\nimport {PurchaseCode} from '@app/agent/purchase-code';\nimport {Trans} from '@common/i18n/trans';\nimport {PersonIcon} from '@common/icons/material/Person';\nimport {User} from '@common/auth/user';\nimport {Ticket} from '@app/agent/ticket';\nimport {UserDetailsSection} from '@app/agent/agent-ticket-page/user-details-sidebar/user-details-section';\nimport {EnvatoPurchaseList} from '@app/agent/agent-ticket-page/envato-purchase-list/envato-purchase-list';\n\ninterface Props {\n  user: User;\n  ticket: Ticket;\n}\nexport function TicketPagePurchaseList({user, ticket}: Props) {\n  const currentPurchase = useMemo(() => {\n    const category = ticket.tags?.find(tag => tag.type !== 'status')\n      ?.categories[0];\n    let bestMatch: PurchaseCode | undefined;\n    if (category) {\n      const categoryName = category.name.toLowerCase();\n      bestMatch = user.purchase_codes?.find(code => {\n        return code.item_name.toLowerCase().indexOf(categoryName) > -1;\n      });\n    }\n    return bestMatch || user.purchase_codes?.[0];\n  }, [user, ticket]);\n\n  return (\n    <UserDetailsSection\n      label={<Trans message=\"Envato\" />}\n      name=\"purchase-list-visible\"\n    >\n      <div className=\"overflow-hidden\">\n        {currentPurchase && (\n          <div className=\"mb-8 flex items-center gap-4 px-14 text-sm\">\n            <PersonIcon size=\"sm\" />\n            <a\n              href={`https://codecanyon.net/user/${currentPurchase.envato_username}`}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              {currentPurchase.envato_username}\n            </a>\n          </div>\n        )}\n        <EnvatoPurchaseList\n          purchases={user.purchase_codes || []}\n          itemClassName=\"px-14\"\n          activePurchase={currentPurchase}\n        />\n      </div>\n    </UserDetailsSection>\n  );\n}\n","import {ActivityLogItem} from '@app/agent/agent-ticket-page/user-details-sidebar/activity-log/activity-log-item';\nimport {useInfiniteData} from '@common/ui/infinite-scroll/use-infinite-data';\n\ninterface Params {\n  userId: number | string;\n}\n\nexport function useActivityLog(params: Params) {\n  return useInfiniteData<ActivityLogItem>({\n    queryKey: ['activity-log'],\n    endpoint: 'activity-log',\n    paginate: 'simple',\n    queryParams: params as any,\n  });\n}\n","import {Category, Section} from '@app/help-center/categories/category';\nimport {Tag} from '@common/tags/tag';\nimport {User} from '@common/auth/user';\n\nexport const ARTICLE_MODEL = 'article';\n\nexport interface Article {\n  id: number;\n  title: string;\n  body: string;\n  slug?: string;\n  draft: boolean;\n  visibility: 'public' | 'private';\n  views: number;\n  position: number;\n  description?: string;\n  created_at?: string;\n  updated_at?: string;\n  categories?: Category[];\n  tags?: Tag[];\n  attachments?: ArticleAttachment[];\n  feedback?: ArticleFeedback[];\n  author?: User;\n  author_id?: number;\n  path?: [Category, Section];\n  score?: number;\n  positive_votes?: number;\n  negative_votes?: number;\n  model_type: typeof ARTICLE_MODEL;\n  visible_to_role?: number;\n  managed_by_role?: number;\n  sections?: Section[];\n}\n\nexport interface ArticleAttachment {\n  id: number;\n  name: string;\n  file_size: number;\n  mime: string;\n  hash: string;\n}\n\nexport interface ArticleFeedback {\n  id: number;\n  was_helpful: boolean;\n  comment?: string;\n  article_id: number;\n  user_id?: number;\n  ip?: string;\n  created_at?: string;\n  updated_at?: string;\n  article?: Article;\n}\n","export const SEARCH_TERM_MODEL = 'search_term';\n\nexport interface SearchTerm {\n  id: number;\n  term: string;\n  user_id: number;\n  count: number;\n  term_count?: number;\n  created_at?: string;\n  updated_at?: string;\n  model_type: typeof SEARCH_TERM_MODEL;\n}\n","import {Children, cloneElement, ReactElement, ReactNode} from 'react';\nimport clsx from 'clsx';\n\ninterface TimelineProps {\n  children: ReactElement<TimelineProps>[];\n  className?: string;\n}\nexport function Timeline({children, className}: TimelineProps) {\n  const items = Children.toArray(children);\n  return (\n    <div className={className}>\n      {items.map((item, index) =>\n        cloneElement(item as any, {\n          isLast: index === items.length - 1,\n        })\n      )}\n    </div>\n  );\n}\n\ninterface TimelineItemProps {\n  children: ReactNode;\n  className?: string;\n  isLast?: boolean;\n}\nexport function TimelineItem({children, className, isLast}: TimelineItemProps) {\n  return (\n    <div className={clsx('flex gap-12', className)}>\n      <div>\n        <div className=\"mt-4 h-12 w-12 flex-shrink-0 rounded-full border-[3px]\" />\n        {!isLast && (\n          <div className=\"mx-auto mt-4 h-[calc(100%-12px)] w-1 bg-chip\"></div>\n        )}\n      </div>\n      <div className=\"flex-auto\">{children}</div>\n    </div>\n  );\n}\n","import {useActivityLog} from '@app/agent/agent-ticket-page/user-details-sidebar/activity-log/use-activity-log';\nimport {Ticket, TICKET_MODEL_TYPE} from '@app/agent/ticket';\nimport {UserDetailsSection} from '@app/agent/agent-ticket-page/user-details-sidebar/user-details-section';\nimport {Trans} from '@common/i18n/trans';\nimport {\n  ActivityLogItem,\n  TicketActivityLogItem,\n} from '@app/agent/agent-ticket-page/user-details-sidebar/activity-log/activity-log-item';\nimport {Article, ARTICLE_MODEL} from '@app/help-center/articles/article';\nimport {ArticleLink} from '@app/help-center/articles/article-link';\nimport clsx from 'clsx';\nimport {FormattedRelativeTime} from '@common/i18n/formatted-relative-time';\nimport {FormattedDate} from '@common/i18n/formatted-date';\nimport {TicketPageLink} from '@app/agent/agent-ticket-page/ticket-page-link';\nimport {\n  SEARCH_TERM_MODEL,\n  SearchTerm,\n} from '@app/agent/agent-search-page/search-term';\nimport {Link} from 'react-router-dom';\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport {Timeline, TimelineItem} from '@common/ui/timeline';\nimport {Fragment} from 'react';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\nimport {Skeleton} from '@common/ui/skeleton/skeleton';\n\nconst timePreset: Intl.DateTimeFormatOptions = {\n  hour: 'numeric',\n  minute: 'numeric',\n};\n\ninterface Props {\n  ticket: Ticket;\n}\nexport function ActivityList({ticket}: Props) {\n  const userId = ticket.user!.id;\n  const query = useActivityLog({userId});\n\n  const skeletons = (\n    <m.div key=\"skeletons\" className=\"px-14 py-6\" {...opacityAnimation}>\n      {Array.from({length: 5}).map((_, index) => (\n        <Skeleton className=\"min-h-48\" key={index} />\n      ))}\n    </m.div>\n  );\n\n  const timeline = (\n    <Fragment>\n      <m.div key=\"timeline\" {...opacityAnimation}>\n        <Timeline>\n          {query.items.map(activity => (\n            <TimelineItem\n              key={activity.id}\n              className={clsx(\n                'px-14 py-6',\n                activity.event === 'created' &&\n                  activity.subject?.id === ticket.id &&\n                  'bg-primary/8',\n              )}\n            >\n              <ListItem activity={activity} />\n              <div className=\"flex items-center gap-4 text-xs text-muted\">\n                <FormattedRelativeTime date={activity.created_at} />\n                <div>&bull;</div>\n                <FormattedDate\n                  date={activity.created_at}\n                  options={timePreset}\n                />\n              </div>\n            </TimelineItem>\n          ))}\n        </Timeline>\n      </m.div>\n      <InfiniteScrollSentinel query={query} size=\"sm\" />\n    </Fragment>\n  );\n\n  return (\n    <UserDetailsSection\n      label={<Trans message=\"Activity\" />}\n      name=\"activity-visible\"\n      className=\"mt-10\"\n    >\n      <AnimatePresence initial={false} mode=\"wait\">\n        {query.isLoading ? skeletons : timeline}\n      </AnimatePresence>\n    </UserDetailsSection>\n  );\n}\n\ninterface ListItemProps {\n  activity: ActivityLogItem;\n}\nfunction ListItem({activity}: ListItemProps) {\n  switch (activity.subject?.model_type) {\n    case ARTICLE_MODEL:\n      return (\n        <Trans\n          message=\"Viewd article: :link\"\n          values={{\n            link: (\n              <ArticleLink\n                target=\"_blank\"\n                className=\"font-semibold\"\n                article={activity.subject as Article}\n              />\n            ),\n          }}\n        />\n      );\n    case TICKET_MODEL_TYPE:\n      return <TicketListItem activity={activity as TicketActivityLogItem} />;\n    case SEARCH_TERM_MODEL:\n      const term = (activity.subject as SearchTerm).term;\n      return (\n        <Trans\n          message=\"Search for: :link\"\n          values={{\n            link: (\n              <Link\n                target=\"_blank\"\n                className=\"font-semibold\"\n                to={`/hc/search?query=${term}`}\n              >\n                {term}\n              </Link>\n            ),\n          }}\n        />\n      );\n    default:\n      return null;\n  }\n}\n\ninterface TicketListItemProps {\n  activity: TicketActivityLogItem;\n}\nfunction TicketListItem({activity}: TicketListItemProps) {\n  const link = (\n    <TicketPageLink\n      target=\"_blank\"\n      className=\"font-semibold\"\n      ticket={activity.subject as Ticket}\n    />\n  );\n  if (activity.event === 'replied') {\n    if (activity.properties?.source === 'email') {\n      return <Trans message=\"Replied via email: :link\" values={{link}} />;\n    } else {\n      return <Trans message=\"Replied via website: :link\" values={{link}} />;\n    }\n  } else if (activity.event === 'created') {\n    return <Trans message=\"Created ticket: :link\" values={{link}} />;\n  } else if (activity.event === 'articlesSuggested') {\n    return (\n      <Trans\n        message={`Suggested :count articles for \":query\"`}\n        values={{\n          count: activity.properties?.articleIds?.length || 1,\n          query: activity.properties?.query,\n        }}\n      />\n    );\n  }\n  return null;\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {useParams} from 'react-router-dom';\nimport {Ticket} from '@app/agent/ticket';\n\ninterface Response extends BackendResponse {\n  ticket: Ticket;\n}\n\ninterface Payload {\n  mergeeId: number;\n}\n\nexport function useMergeTickets() {\n  const {ticketId} = useParams();\n  return useMutation({\n    mutationFn: (payload: Payload) =>\n      mergeTickets({\n        ...payload,\n        ticketId: ticketId!,\n      }),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({queryKey: ['tickets']});\n      toast(message('Merged tickets'));\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction mergeTickets(\n  payload: Payload & {ticketId: number | string},\n): Promise<Response> {\n  return apiClient.post(`tickets/merge`, payload).then(r => r.data);\n}\n","import {\r\n  GetTicketResponse,\r\n  useTicket,\r\n} from '@app/agent/agent-ticket-page/requests/use-ticket';\r\nimport React, {Fragment} from 'react';\r\nimport {PageStatus} from '@common/http/page-status';\r\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\r\nimport {Dialog} from '@common/ui/overlays/dialog/dialog';\r\nimport {TicketHeaderLayout} from '@app/agent/ticket-layout/ticket-header-layout';\r\nimport {TicketTagList} from '@app/agent/ticket-layout/ticket-tag-list';\r\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {TicketReplyLayout} from '@app/agent/ticket-layout/ticket-reply-layout';\r\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\r\nimport {useTicketReplies} from '@app/agent/agent-ticket-page/reply-list/requests/use-ticket-replies';\r\nimport {FileEntry} from '@common/uploads/file-entry';\r\nimport {\r\n  AttachmentListLayout,\r\n  FileEntryAttachmentLayout,\r\n} from '@app/agent/ticket-layout/attachment-list-layout';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {Link} from 'react-router-dom';\r\nimport {getTicketPageLink} from '@app/agent/agent-ticket-page/ticket-page-link';\r\nimport {Ticket} from '@app/agent/ticket';\r\nimport {useMergeTickets} from '@app/agent/agent-ticket-page/user-details-sidebar/requests/use-merge-tickets';\r\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\r\nimport {ConfirmationDialog} from '@common/ui/overlays/dialog/confirmation-dialog';\r\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\r\n\r\ninterface Props {\r\n  ticketId: number;\r\n}\r\nexport function TicketPreviewDialog({ticketId}: Props) {\r\n  const query = useTicket(ticketId);\r\n  return (\r\n    <Dialog size=\"fullscreen\" className=\"h-dialog\">\r\n      <DialogHeader\r\n        showDivider\r\n        padding=\"px-24 py-12\"\r\n        titleFontWeight=\"font-normal\"\r\n        titleTextSize=\"text-base\"\r\n        justify=\"justify-start\"\r\n        actions={\r\n          query.data?.ticket ? <Actions ticket={query.data?.ticket} /> : null\r\n        }\r\n      >\r\n        <Trans message=\"Ticket preview\" />\r\n      </DialogHeader>\r\n      <DialogBody className=\"bg\" padding=\"p-0\">\r\n        {query.data ? (\r\n          <Content data={query.data} />\r\n        ) : (\r\n          <PageStatus query={query} loaderClassName=\"absolute inset-0 m-auto\" />\r\n        )}\r\n      </DialogBody>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\ninterface ActionsProps {\r\n  ticket: Ticket;\r\n}\r\nfunction Actions({ticket}: ActionsProps) {\r\n  const {close} = useDialogContext();\r\n\r\n  return (\r\n    <Fragment>\r\n      <Button\r\n        elementType={Link}\r\n        to={getTicketPageLink(ticket)}\r\n        variant=\"outline\"\r\n        size=\"xs\"\r\n      >\r\n        <Trans message=\"Open ticket\" />\r\n      </Button>\r\n      <DialogTrigger\r\n        type=\"modal\"\r\n        onClose={newTicket => {\r\n          if (newTicket) {\r\n            close();\r\n          }\r\n        }}\r\n      >\r\n        <Button variant=\"outline\" size=\"xs\" className=\"mr-48\">\r\n          <Trans message=\"Merge\" />\r\n        </Button>\r\n        <ConfirmMergeDialog ticket={ticket} />\r\n      </DialogTrigger>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface ConfirmMergeDialogProps {\r\n  ticket: Ticket;\r\n}\r\nfunction ConfirmMergeDialog({ticket}: ConfirmMergeDialogProps) {\r\n  const mergeTickets = useMergeTickets();\r\n  const {close} = useDialogContext();\r\n  return (\r\n    <ConfirmationDialog\r\n      title={<Trans message=\"Merge tickets\" />}\r\n      isLoading={mergeTickets.isPending}\r\n      onConfirm={() => {\r\n        mergeTickets.mutate(\r\n          {mergeeId: ticket.id},\r\n          {onSuccess: response => close(response.ticket)},\r\n        );\r\n      }}\r\n      body={\r\n        <div>\r\n          <Trans message=\"Please confirm you'd like to merge this ticket with the original one behind the popup.\" />\r\n          <p className=\"mt-12 font-semibold\">\r\n            <Trans message=\"Merged tickets cannot be unmerged.\" />\r\n          </p>\r\n        </div>\r\n      }\r\n      confirm={<Trans message=\"Merge\" />}\r\n    />\r\n  );\r\n}\r\n\r\ninterface ContentProps {\r\n  data: GetTicketResponse;\r\n}\r\nfunction Content({data}: ContentProps) {\r\n  return (\r\n    <div>\r\n      <TicketHeaderLayout ticket={data.ticket}>\r\n        <TicketTagList ticket={data.ticket} />\r\n      </TicketHeaderLayout>\r\n      <ReplyList data={data} />\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface ReplyListProps {\r\n  data: GetTicketResponse;\r\n}\r\nfunction ReplyList({data: {ticket, replies}}: ReplyListProps) {\r\n  const query = useTicketReplies(ticket.id, replies);\r\n  return (\r\n    <Fragment>\r\n      {query.items.map(reply => {\r\n        const isInitial =\r\n          !query.hasNextPage && reply.id === query.items.at(-1)?.id;\r\n        return (\r\n          <TicketReplyLayout\r\n            key={reply.id}\r\n            reply={reply}\r\n            isInitial={isInitial}\r\n            className=\"px-20\"\r\n            ticketRequestType={ticket.ticket_request_type}\r\n            attachments={\r\n              reply.attachments?.length ? (\r\n                <AttachmentList attachments={reply.attachments} />\r\n              ) : null\r\n            }\r\n          />\r\n        );\r\n      })}\r\n      <InfiniteScrollSentinel query={query} />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface AttachmentListProps {\r\n  attachments: FileEntry[];\r\n}\r\nfunction AttachmentList({attachments}: AttachmentListProps) {\r\n  return (\r\n    <AttachmentListLayout className=\"mt-30 w-max\">\r\n      {attachments.map((attachment, index) => (\r\n        <FileEntryAttachmentLayout\r\n          key={attachment.id}\r\n          attachments={attachments}\r\n          index={index}\r\n        />\r\n      ))}\r\n    </AttachmentListLayout>\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {UseFormReturn} from 'react-hook-form';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {Ticket} from '@app/agent/ticket';\n\ninterface Response extends BackendResponse {\n  ticket: Ticket;\n}\n\nexport interface UpdateTicketPayload {\n  user_id?: number;\n  subject?: string;\n  status?: string;\n  category_id?: number;\n}\n\nexport function useUpdateTicket(\n  ticketId: number | string,\n  form?: UseFormReturn<UpdateTicketPayload>,\n) {\n  return useMutation({\n    mutationFn: (payload: UpdateTicketPayload) =>\n      updateTicket(ticketId, payload),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({queryKey: ['tickets']});\n    },\n    onError: err =>\n      form ? onFormQueryError(err, form) : showHttpErrorToast(err),\n  });\n}\n\nfunction updateTicket(\n  ticketId: number | string,\n  payload: UpdateTicketPayload,\n): Promise<Response> {\n  return apiClient.put(`tickets/${ticketId}`, payload).then(r => r.data);\n}\n","import {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {Trans} from '@common/i18n/trans';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {Form} from '@common/ui/forms/form';\nimport {useForm} from 'react-hook-form';\nimport {\n  UpdateTicketPayload,\n  useUpdateTicket,\n} from '@app/agent/agent-ticket-page/user-details-sidebar/requests/use-update-ticket';\nimport {FormNormalizedModelField} from '@common/ui/forms/normalized-model-field';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {Button} from '@common/ui/buttons/button';\n\ninterface Props {\n  ticketId: string | number;\n}\nexport function ChangeCustomerDialog({ticketId}: Props) {\n  const {close, formId} = useDialogContext();\n  const form = useForm<UpdateTicketPayload>();\n  const updateTicket = useUpdateTicket(ticketId, form);\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Change customer\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          id={formId}\n          form={form}\n          onSubmit={values => {\n            updateTicket.mutate(values, {onSuccess: () => close()});\n          }}\n        >\n          <FormNormalizedModelField\n            required\n            name=\"user_id\"\n            endpoint=\"normalized-models/user\"\n            label={<Trans message=\"New customer\" />}\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          type=\"submit\"\n          form={formId}\n          variant=\"flat\"\n          color=\"primary\"\n          disabled={updateTicket.isPending}\n        >\n          <Trans message=\"Change\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import clsx from 'clsx';\nimport {Link} from 'react-router-dom';\nimport {getCustomerLink} from '@app/agent/customer-page/customer-link';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {SettingsIcon} from '@common/icons/material/Settings';\nimport {EmailIcon} from '@common/icons/material/Email';\nimport {useTicket} from '@app/agent/agent-ticket-page/requests/use-ticket';\nimport {TicketPagePurchaseList} from '@app/agent/agent-ticket-page/user-details-sidebar/ticket-page-purchase-list';\nimport {useTickets} from '@app/agent/agent-ticket-page/user-details-sidebar/requests/use-tickets';\nimport {Fragment} from 'react';\nimport {Ticket} from '@app/agent/ticket';\nimport {UserDetailsSection} from '@app/agent/agent-ticket-page/user-details-sidebar/user-details-section';\nimport {Trans} from '@common/i18n/trans';\nimport {ActivityList} from '@app/agent/agent-ticket-page/user-details-sidebar/activity-list';\nimport {useSettings} from '@common/core/settings/use-settings';\nimport {Skeleton} from '@common/ui/skeleton/skeleton';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\nimport {UserAvatar} from '@common/ui/images/user-avatar';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {ButtonBase} from '@common/ui/buttons/button-base';\nimport {TicketPreviewDialog} from '@app/agent/agent-ticket-page/ticket-preview-dialog';\nimport {ChipList} from '@common/ui/forms/input-field/chip-field/chip-list';\nimport {Chip} from '@common/ui/forms/input-field/chip-field/chip';\nimport {Menu, MenuTrigger} from '@common/ui/navigation/menu/menu-trigger';\nimport {Item} from '@common/ui/forms/listbox/item';\nimport {openDialog} from '@common/ui/overlays/store/dialog-store';\nimport {ChangeCustomerDialog} from '@app/agent/agent-ticket-page/user-details-sidebar/change-customer-dialog';\n\ninterface Props {\n  className?: string;\n}\nexport function UserDetailsSidebar({className}: Props) {\n  const {tickets} = useSettings();\n  const {data} = useTicket();\n  return (\n    <div\n      className={clsx(\n        className,\n        'compact-scrollbar stable-scrollbar overflow-y-auto border-l',\n      )}\n    >\n      {data?.ticket.user && (\n        <Fragment>\n          <CustomerDetails ticket={data.ticket} />\n          <OtherTickets ticket={data.ticket} />\n          {tickets?.log_activity && <ActivityList ticket={data.ticket} />}\n        </Fragment>\n      )}\n    </div>\n  );\n}\n\ninterface CustomerDetailsProps {\n  ticket: Ticket;\n}\nfunction CustomerDetails({ticket}: CustomerDetailsProps) {\n  const user = ticket.user!;\n  const {envato} = useSettings();\n  const editLink = getCustomerLink(user.id);\n  return (\n    <div className=\"py-14\">\n      <Link to={editLink} target=\"_blank\">\n        <UserAvatar user={user} size=\"xl\" circle className=\"mx-auto\" />\n      </Link>\n      <section className=\"mb-14 border-b px-14 pb-14 text-muted\">\n        <div className=\"mt-10 flex items-center justify-between gap-14 text-muted\">\n          <div>{user.display_name}</div>\n          <MenuTrigger>\n            <IconButton size=\"sm\">\n              <SettingsIcon />\n            </IconButton>\n            <Menu>\n              <Item\n                value=\"edit\"\n                elementType={Link}\n                to={editLink}\n                target=\"_blank\"\n              >\n                <Trans message=\"Edit\" />\n              </Item>\n              <Item\n                value=\"changeCustomer\"\n                onSelected={() =>\n                  openDialog(ChangeCustomerDialog, {ticketId: ticket.id})\n                }\n              >\n                <Trans message=\"Change customer\" />\n              </Item>\n            </Menu>\n          </MenuTrigger>\n        </div>\n        <div className=\"flex items-center gap-4\">\n          <EmailIcon size=\"xs\" />\n          <div className=\"text-sm\">{user.email}</div>\n        </div>\n        {!!user.tags?.length && (\n          <ChipList size=\"xs\" className=\"mt-14\">\n            {user.tags?.map(tag => (\n              <Chip key={tag.id}>{tag.display_name}</Chip>\n            ))}\n          </ChipList>\n        )}\n      </section>\n      {envato.enable && <TicketPagePurchaseList user={user} ticket={ticket} />}\n    </div>\n  );\n}\n\ninterface OtherTicketsProps {\n  ticket: Ticket;\n}\nfunction OtherTickets({ticket}: OtherTicketsProps) {\n  const user = ticket.user!;\n  const {data, isLoading} = useTickets({\n    userId: user.id,\n    perPage: 6,\n    paginate: 'simple',\n  });\n\n  const skeletons = (\n    <m.div key=\"skeletons\" {...opacityAnimation}>\n      {Array.from({length: 5}).map((_, index) => (\n        <Skeleton className=\"min-h-24\" key={index} />\n      ))}\n    </m.div>\n  );\n  const tickets = (\n    <m.div key=\"tickets\" {...opacityAnimation}>\n      {data?.pagination.data\n        .filter(t => t.id !== ticket.id)\n        .map(ticket => (\n          <DialogTrigger type=\"modal\" key={ticket.id}>\n            <ButtonBase\n              display=\"block\"\n              className={clsx(\n                'block min-w-0 max-w-full overflow-hidden text-ellipsis pb-4 text-sm hover:underline',\n                ticket.closed_at && 'text-muted',\n              )}\n            >\n              {ticket.subject}\n            </ButtonBase>\n            <TicketPreviewDialog ticketId={ticket.id} />\n          </DialogTrigger>\n        ))}\n    </m.div>\n  );\n\n  return (\n    <UserDetailsSection\n      label={<Trans message=\"Other tickets\" />}\n      name=\"other-tickets\"\n    >\n      <AnimatePresence initial={false} mode=\"wait\">\n        <div className=\"space-y-10 px-14\">\n          {isLoading ? skeletons : tickets}\n        </div>\n      </AnimatePresence>\n    </UserDetailsSection>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {Reply} from '@app/agent/reply';\nimport {\n  ActiveDraft,\n  useTicketPageStore,\n} from '@app/agent/agent-ticket-page/ticket-page-store';\nimport {useParams} from 'react-router-dom';\n\ninterface Response {\n  reply: Reply;\n}\n\ninterface Params {\n  draft: ActiveDraft;\n  type: 'background' | 'manual';\n  ticketId?: number | string;\n}\n\nexport function useSaveDraft() {\n  const urlParams = useParams();\n  const {updateActiveDraft, setEditorIsOpen} = useTicketPageStore();\n  return useMutation({\n    mutationFn: (params: Params) => {\n      updateActiveDraft({isSaving: true});\n      const ticketId = params.ticketId || urlParams.ticketId;\n      return saveDraft(params.draft, ticketId!);\n    },\n    onSuccess: async (response, params) => {\n      if (params.type !== 'background') {\n        const ticketId = params.ticketId || urlParams.ticketId;\n        await queryClient.invalidateQueries({\n          queryKey: ['tickets', `${ticketId}`],\n        });\n        setEditorIsOpen(false);\n      }\n      updateActiveDraft({\n        isDirty: false,\n        id: response.reply.id,\n      });\n    },\n    onError: err => showHttpErrorToast(err),\n    onSettled: () => {\n      updateActiveDraft({isSaving: false});\n    },\n  });\n}\n\nfunction saveDraft(\n  activeDraft: ActiveDraft,\n  ticketId: string | number,\n): Promise<Response> {\n  const payload = {\n    body: activeDraft.body,\n    attachments: activeDraft.attachments.map(u => u.id),\n  };\n  const request = activeDraft.id\n    ? apiClient.put(`replies/${activeDraft.id}`, payload)\n    : apiClient.post(`tickets/${ticketId}/drafts`, payload);\n  return request.then(r => r.data);\n}\n","import {useCallback} from 'react';\nimport {useSaveDraft} from '@app/agent/agent-ticket-page/requests/use-save-draft';\nimport {ticketPageStore} from '@app/agent/agent-ticket-page/ticket-page-store';\n\nexport function useBackgroundDraftSave() {\n  const saveDraft = useSaveDraft();\n  return useCallback(\n    (\n      type: 'background' | 'manual' = 'background',\n      ticketId?: number | string\n    ) => {\n      if (\n        ticketPageStore().activeDraft.isDirty &&\n        !ticketPageStore().activeDraft.isSaving &&\n        !ticketPageStore().ticketIsSaving\n      ) {\n        saveDraft.mutate({\n          ticketId,\n          draft: ticketPageStore().activeDraft,\n          type,\n        });\n      }\n    },\n    [saveDraft]\n  );\n}\n","import {Query, useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {Reply} from '@app/agent/reply';\nimport {useAfterReplyAction} from '@app/agent/agent-ticket-page/use-after-reply-action';\nimport {useDeleteDraft} from '@app/agent/agent-ticket-page/reply-list/requests/use-delete-draft';\nimport {\n  ticketPageStore,\n  useTicketPageStore,\n} from '@app/agent/agent-ticket-page/ticket-page-store';\nimport {useParams} from 'react-router-dom';\n\ninterface SubmitReplyResponse {\n  reply: Reply;\n}\n\ninterface Payload {\n  type: 'drafts' | 'replies' | 'notes';\n  body: string | null;\n  status?: string;\n  attachments?: number[];\n}\n\nexport function useSubmitAgentReply() {\n  const {ticketId} = useParams();\n  const {perform, action} = useAfterReplyAction();\n  const deleteDraft = useDeleteDraft({clearTicketCache: false});\n  const {setTicketIsSaving} = useTicketPageStore();\n  return useMutation({\n    mutationFn: (payload: Payload) => {\n      setTicketIsSaving(true);\n      return submitReply({\n        ticketId: ticketId!,\n        ...payload,\n      });\n    },\n    onSuccess: async () => {\n      // no need to wait for these to finish\n      queryClient.invalidateQueries({queryKey: ['mailbox', 'sidenav-tags']});\n      if (ticketPageStore().activeDraft.id) {\n        deleteDraft.mutate({id: ticketPageStore().activeDraft.id!});\n      }\n      ticketPageStore().discardActiveDraft();\n\n      await Promise.allSettled([\n        queryClient.invalidateQueries({\n          queryKey: ['tickets'],\n          predicate: q => {\n            // don't invalidate currently active ticket to avoid flickering\n            return (\n              action === 'stay_on_page' || !shouldIgnoreQuery(q, ticketId!)\n            );\n          },\n        }),\n        perform(),\n      ]);\n      toast(message('Reply submitted'));\n    },\n    onError: err => showHttpErrorToast(err),\n    onSettled: () => setTicketIsSaving(false),\n  });\n}\n\nfunction submitReply(payload: Payload & {ticketId: number | string}) {\n  return apiClient\n    .post<SubmitReplyResponse>(\n      `tickets/${payload.ticketId}/${payload.type}`,\n      payload,\n    )\n    .then(r => r.data);\n}\n\nfunction shouldIgnoreQuery(q: Query, ticketId: number | string) {\n  const isActiveTicket =\n    q.queryKey[0] === 'tickets' && q.queryKey[1] === `${ticketId}`;\n  const isOtherUserTickets =\n    q.queryKey[0] === 'tickets' &&\n    typeof q.queryKey[1] === 'object' &&\n    q.queryKey[1] &&\n    'userId' in q.queryKey[1];\n  return isActiveTicket || isOtherUserTickets;\n}\n","import React, {Fragment, useCallback} from 'react';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {CheckCircleIcon} from '@common/icons/material/CheckCircle';\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\nimport {Trans} from '@common/i18n/trans';\nimport {DeleteIcon} from '@common/icons/material/Delete';\nimport {useSaveDraft} from '@app/agent/agent-ticket-page/requests/use-save-draft';\nimport {useDeleteDraft} from '@app/agent/agent-ticket-page/reply-list/requests/use-delete-draft';\nimport {\n  ticketPageStore,\n  useTicketPageStore,\n} from '@app/agent/agent-ticket-page/ticket-page-store';\nimport {useKeybind} from '@common/utils/keybinds/use-keybind';\nimport {MenubarButtonProps} from '@common/text-editor/menubar/menubar-button-props';\n\ninterface Props {\n  size?: MenubarButtonProps['size'];\n}\nexport function AgentReplyEditorDraftButtons({size = 'sm'}: Props) {\n  const isDirty = useTicketPageStore(s => s.activeDraft.isDirty);\n  const isSaving = useTicketPageStore(s => s.activeDraft.isSaving);\n  const isEmpty = useTicketPageStore(\n    s => !s.activeDraft.body && !s.activeDraft.attachments?.length,\n  );\n  const saveDraft = useSaveDraft();\n  const deleteDraft = useDeleteDraft();\n\n  const handleDraftSave = () => {\n    saveDraft.mutate({\n      draft: ticketPageStore().activeDraft,\n      type: 'manual',\n    });\n  };\n\n  const handleDraftDelete = useCallback(() => {\n    if (ticketPageStore().activeDraft.id) {\n      deleteDraft.mutate(\n        {id: ticketPageStore().activeDraft.id!},\n        {onSuccess: () => ticketPageStore().setEditorIsOpen(false)},\n      );\n    } else {\n      ticketPageStore().setEditorIsOpen(false);\n    }\n  }, [deleteDraft]);\n\n  useKeybind('window', 'Escape', () => {\n    if (ticketPageStore().editorIsOpen) {\n      handleDraftDelete();\n    }\n  });\n\n  return (\n    <Fragment>\n      <Tooltip label={<Trans message=\"Save draft\" />}>\n        <IconButton\n          className=\"ml-auto\"\n          size={size}\n          color={!isDirty ? 'positive' : null}\n          onClick={handleDraftSave}\n          disabled={isSaving || isEmpty}\n        >\n          <CheckCircleIcon />\n        </IconButton>\n      </Tooltip>\n      <Tooltip label={<Trans message=\"Discard (Esc)\" />}>\n        <IconButton size={size} disabled={isSaving} onClick={handleDraftDelete}>\n          <DeleteIcon />\n        </IconButton>\n      </Tooltip>\n    </Fragment>\n  );\n}\n","import {keepPreviousData, useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {PaginatedBackendResponse} from '@common/http/backend-response/pagination-response';\nimport {useAuth} from '@common/auth/use-auth';\nimport {CannedReply} from '@app/agent/agent-ticket-page/canned-replies/canned-reply';\n\ninterface Response extends PaginatedBackendResponse<CannedReply> {}\n\nexport function useCannedReplies(query: string = '') {\n  const {user} = useAuth();\n  return useQuery({\n    queryKey: ['canned-replies', `${user?.id}`, query],\n    queryFn: ({signal}) => fetchCannedReplies(user!.id, query, signal),\n    placeholderData: keepPreviousData,\n  });\n}\n\nasync function fetchCannedReplies(\n  userId: number,\n  query: string,\n  signal?: AbortSignal,\n) {\n  if (query) {\n    await new Promise(resolve => setTimeout(resolve, 300));\n  }\n  return apiClient\n    .get<Response>('canned-replies', {\n      params: {userId, shared: true, perPage: 15, query},\n      signal,\n    })\n    .then(response => response.data);\n}\n","import {Menu, MenuTrigger} from '@common/ui/navigation/menu/menu-trigger';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {CommentIcon} from '@common/icons/material/Comment';\nimport {Item} from '@common/ui/forms/listbox/item';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {message} from '@common/i18n/message';\nimport {useCannedReplies} from '@app/agent/agent-ticket-page/canned-replies/requests/use-canned-replies';\nimport {Trans} from '@common/i18n/trans';\nimport {CannedReply} from '@app/agent/agent-ticket-page/canned-replies/canned-reply';\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\nimport {openDialog} from '@common/ui/overlays/store/dialog-store';\nimport {CreateCannedReplyDialog} from '@app/agent/agent-ticket-page/canned-replies/create-canned-reply-dialog';\nimport {ButtonSize} from '@common/ui/buttons/button-size';\nimport {useState} from 'react';\n\ninterface Props {\n  onSelected: (reply: CannedReply) => void;\n  size?: ButtonSize;\n}\nexport function CannedReplySelector({onSelected, size}: Props) {\n  const {trans} = useTrans();\n  const [query, setQuery] = useState('');\n  const {data, isFetching} = useCannedReplies(query);\n\n  return (\n    <MenuTrigger\n      isAsync\n      searchPlaceholder={trans(message('Search...'))}\n      isLoading={isFetching}\n      inputValue={query}\n      onInputValueChange={setQuery}\n      clearInputOnItemSelection\n      blurReferenceOnItemSelection\n      selectionMode=\"none\"\n      showSearchField\n      floatingMaxHeight={440}\n      floatingMinWidth=\"min-w-288\"\n      showEmptyMessage\n    >\n      <Tooltip label={<Trans message=\"Saved replies\" />}>\n        <IconButton size={size}>\n          <CommentIcon />\n        </IconButton>\n      </Tooltip>\n      <Menu>\n        <Item\n          value=\"saveThisReply\"\n          className=\"font-semibold\"\n          onSelected={() => openDialog(CreateCannedReplyDialog)}\n        >\n          <Trans message=\"Save this reply...\" />\n        </Item>\n        {data?.pagination.data.map(reply => (\n          <Item\n            value={reply.id}\n            key={reply.id}\n            onSelected={() => onSelected(reply)}\n          >\n            {reply.name}\n          </Item>\n        ))}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","import React, {useRef, useState} from 'react';\nimport {useSearchArticles} from '@app/help-center/search/use-search-articles';\nimport {ComboBox} from '@common/ui/forms/combobox/combobox';\nimport {SearchIcon} from '@common/icons/material/Search';\nimport {Item} from '@common/ui/forms/listbox/item';\nimport {ArticlePath} from '@app/help-center/articles/article-path';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {message} from '@common/i18n/message';\nimport {Article} from '@app/help-center/articles/article';\nimport {useKeybind} from '@common/utils/keybinds/use-keybind';\nimport {useTicketHcCategories} from '@app/agent/agent-ticket-page/requests/use-ticket';\n\ninterface Props {\n  onSelected: (article: Article) => void;\n}\nexport function TicketPageDocsSearchInput({onSelected}: Props) {\n  const hcCategories = useTicketHcCategories();\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [query, setQuery] = useState('');\n  const {data, isFetching} = useSearchArticles(query, {\n    categoryIds: hcCategories,\n  });\n  const {trans} = useTrans();\n\n  useKeybind(\n    'window',\n    'ctrl+/',\n    () => {\n      inputRef.current?.focus();\n    },\n    {allowedInputSelector: '.ProseMirror'},\n  );\n\n  return (\n    <ComboBox\n      inputValue={query}\n      onInputValueChange={setQuery}\n      isAsync\n      isLoading={isFetching}\n      items={data?.pagination.data}\n      clearInputOnItemSelection\n      hideEndAdornment\n      placeholder={trans(message('Search documentation... (ctrl+/)'))}\n      startAdornment={<SearchIcon />}\n      className=\"mb-10\"\n      selectionMode=\"none\"\n      showEmptyMessage\n      ref={inputRef}\n    >\n      {result => (\n        <Item\n          key={result.id}\n          value={result.id}\n          onSelected={() => {\n            close();\n            onSelected(result);\n          }}\n          description={<ArticlePath article={result} />}\n          textLabel={result.title}\n        >\n          {result.title}\n        </Item>\n      )}\n    </ComboBox>\n  );\n}\n","import React, {\n  Fragment,\n  MutableRefObject,\n  useCallback,\n  useEffect,\n  useRef,\n} from 'react';\nimport {Button} from '@common/ui/buttons/button';\nimport {Trans} from '@common/i18n/trans';\nimport {\n  Menu,\n  MenuItem,\n  MenuTrigger,\n} from '@common/ui/navigation/menu/menu-trigger';\nimport {useMailboxSidenavTags} from '@app/agent/use-mailbox-sidenav-tags';\nimport {KeyboardArrowDownIcon} from '@common/icons/material/KeyboardArrowDown';\nimport {\n  getFromLocalStorage,\n  useLocalStorage,\n} from '@common/utils/hooks/local-storage';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {ArrowDropDownIcon} from '@common/icons/material/ArrowDropDown';\nimport {\n  AfterReplyAction,\n  AfterReplyActions,\n  useAfterReplyAction,\n} from '@app/agent/agent-ticket-page/use-after-reply-action';\nimport {useSubmitAgentReply} from '@app/agent/agent-ticket-page/agent-reply-editor/use-submit-agent-reply';\nimport {Editor} from '@tiptap/react';\nimport {useGlobalListeners} from '@react-aria/utils';\nimport {AgentReplyEditorDraftButtons} from '@app/agent/agent-ticket-page/agent-reply-editor/agent-reply-editor-draft-buttons';\nimport {useBackgroundDraftSave} from '@app/agent/agent-ticket-page/agent-reply-editor/use-background-draft-save';\nimport {\n  ticketPageStore,\n  useTicketPageStore,\n} from '@app/agent/agent-ticket-page/ticket-page-store';\nimport {\n  ReplyEditor,\n  ReplyEditorToolbarButtonsProps,\n} from '@app/reply-editor/reply-editor';\nimport {SendReplyButton} from '@app/reply-editor/send-reply-button';\nimport {getReplyBody} from '@app/reply-editor/get-reply-body';\nimport {CannedReplySelector} from '@app/agent/agent-ticket-page/canned-replies/canned-reply-selector';\nimport {MenubarButtonProps} from '@common/text-editor/menubar/menubar-button-props';\nimport {TicketPageDocsSearchInput} from '@app/agent/agent-ticket-page/ticket-page-docs-search-input';\nimport {getArticleLink} from '@app/help-center/articles/article-link';\nimport {insertLinkIntoTextEditor} from '@common/text-editor/insert-link-into-text-editor';\n\nexport function AgentReplyEditor() {\n  const {addGlobalListener} = useGlobalListeners();\n  const submitReply = useSubmitAgentReply();\n  const attachments = useTicketPageStore(s => s.activeDraft.attachments);\n  const editorRef = useRef<Editor | null>(null);\n\n  const handleSubmit = useCallback(() => {\n    if (!editorRef.current) return;\n    submitReply.mutate(\n      {\n        type: 'replies',\n        status: getFromLocalStorage('ticket-page-status', 'pending'),\n        attachments: ticketPageStore().activeDraft.attachments.map(u => u.id),\n        body: getReplyBody(editorRef),\n      },\n      {\n        onSuccess: () => {\n          ticketPageStore().setEditorIsOpen(false);\n        },\n      },\n    );\n  }, [submitReply]);\n\n  const handleBackgroundSave = useBackgroundDraftSave();\n\n  useEffect(() => {\n    addGlobalListener(document, 'visibilitychange', () => {\n      if (document.hidden) {\n        handleBackgroundSave();\n      }\n    });\n  }, [addGlobalListener, handleBackgroundSave]);\n\n  return (\n    <div className=\"mb-24 px-20\">\n      <TicketPageDocsSearchInput\n        onSelected={article => {\n          if (editorRef.current) {\n            insertLinkIntoTextEditor(editorRef.current, {\n              href: getArticleLink(article),\n              target: '_blank',\n              text: article.title,\n            });\n          }\n        }}\n      />\n      <ReplyEditor\n        menubarButtons={<MenubarButtons editorRef={editorRef} />}\n        footerButtons={<FooterButtons />}\n        attachments={attachments}\n        onAttachmentsChange={attachments => {\n          ticketPageStore().updateActiveDraft({attachments});\n        }}\n        editorRef={editorRef}\n        onSubmit={handleSubmit}\n        isLoading={submitReply.isPending}\n        initialContent={ticketPageStore().activeDraft?.body}\n        onChange={() => {\n          if (editorRef.current) {\n            ticketPageStore().updateActiveDraft({\n              body: editorRef.current.getHTML(),\n            });\n          }\n        }}\n      />\n    </div>\n  );\n}\n\ninterface MenubarButtonsProps {\n  size?: MenubarButtonProps['size'];\n  editorRef: MutableRefObject<Editor | null>;\n}\nfunction MenubarButtons({size, editorRef}: MenubarButtonsProps) {\n  return (\n    <Fragment>\n      <CannedReplySelector\n        size={size}\n        onSelected={reply => {\n          ticketPageStore().updateActiveDraft({\n            body: reply.body,\n            attachments: reply.attachments,\n          });\n          editorRef.current?.commands.insertContent(reply.body);\n        }}\n      />\n      <AgentReplyEditorDraftButtons size={size} />\n    </Fragment>\n  );\n}\n\nfunction FooterButtons({isLoading, onSubmit}: ReplyEditorToolbarButtonsProps) {\n  return (\n    <Fragment>\n      <StatusSelector />\n      <SendReplyButton isLoading={isLoading} onSubmit={onSubmit} />\n      <AfterReplyActionSelector disabled={isLoading} />\n    </Fragment>\n  );\n}\n\ninterface AfterReplyActionSelectorProps {\n  disabled?: boolean;\n}\nfunction AfterReplyActionSelector({disabled}: AfterReplyActionSelectorProps) {\n  const {action, setAction} = useAfterReplyAction();\n  return (\n    <MenuTrigger\n      selectionMode=\"single\"\n      selectedValue={action}\n      onItemSelected={newValue => setAction(newValue as AfterReplyAction)}\n    >\n      <IconButton\n        border=\"border border-transparent border-l-primary-light/40\"\n        variant=\"flat\"\n        color=\"primary\"\n        radius=\"rounded-none\"\n        size=\"sm\"\n        disabled={disabled}\n      >\n        <ArrowDropDownIcon />\n      </IconButton>\n      <Menu>\n        {Object.entries(AfterReplyActions).map(([key, label]) => (\n          <MenuItem key={key} value={key} capitalizeFirst>\n            <Trans {...label} />\n          </MenuItem>\n        ))}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n\nfunction StatusSelector() {\n  const {data} = useMailboxSidenavTags();\n  const [selectedStatus, setSelectedStatus] = useLocalStorage(\n    'ticket-page-status',\n    'pending',\n  );\n  if (!data?.statusTags.length) return null;\n  const selectedTag = data.statusTags.find(t => t.name === selectedStatus);\n  return (\n    <MenuTrigger\n      selectionMode=\"single\"\n      selectedValue={selectedStatus}\n      onItemSelected={newValue => setSelectedStatus(newValue as string)}\n    >\n      <Button\n        radius=\"rounded-none\"\n        endIcon={<KeyboardArrowDownIcon />}\n        className=\"capitalize text-muted\"\n      >\n        <Trans message={selectedTag!.display_name} />\n      </Button>\n      <Menu>\n        {data.statusTags.map(tag => (\n          <MenuItem key={tag.id} value={tag.name} capitalizeFirst>\n            <Trans message={tag.display_name} />\n          </MenuItem>\n        ))}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","import {useTicket} from '@app/agent/agent-ticket-page/requests/use-ticket';\nimport {DashboardSidenav} from '@common/ui/layout/dashboard-sidenav';\nimport React, {Fragment, useEffect} from 'react';\nimport {PageStatus} from '@common/http/page-status';\nimport {TicketPageToolbar} from '@app/agent/agent-ticket-page/ticket-page-toolbar';\nimport {AgentTicketPageReplyList} from '@app/agent/agent-ticket-page/reply-list/agent-ticket-page-reply-list';\nimport {TicketPageHeader} from '@app/agent/agent-ticket-page/ticket-page-header';\nimport {UserDetailsSidebar} from '@app/agent/agent-ticket-page/user-details-sidebar/user-details-sidebar';\nimport {\n  defaultDraftValues,\n  ticketPageStore,\n  useTicketPageStore,\n} from '@app/agent/agent-ticket-page/ticket-page-store';\nimport {usePrevious} from '@common/utils/hooks/use-previous';\nimport {useBackgroundDraftSave} from '@app/agent/agent-ticket-page/agent-reply-editor/use-background-draft-save';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {AgentReplyEditor} from '@app/agent/agent-ticket-page/agent-reply-editor/agent-reply-editor';\nimport {AgentPageLayout} from '@app/agent/agent-page-layout';\nimport {Helmet} from '@common/seo/helmet';\nimport {useSettings} from '@common/core/settings/use-settings';\n\nexport function AgentTicketPage() {\n  return (\n    <AgentPageLayout\n      rightSidenav={\n        <DashboardSidenav position=\"right\" className=\"bg-alt\" size=\"w-264\">\n          <UserDetailsSidebar />\n        </DashboardSidenav>\n      }\n    >\n      <TicketContent />\n    </AgentPageLayout>\n  );\n}\n\nfunction TicketContent() {\n  const {branding} = useSettings();\n  const query = useTicket();\n  const previousTicketId = usePrevious(query.data?.ticket.id);\n  const saveDraft = useBackgroundDraftSave();\n\n  useEffect(() => {\n    const ticket = query.data?.ticket;\n    if (ticket) {\n      const draft = ticket.replies?.find(reply => reply.type === 'drafts');\n      if (draft && previousTicketId !== ticket.id) {\n        ticketPageStore().updateActiveDraft({\n          ...defaultDraftValues,\n          ...draft,\n          isDirty: false,\n        });\n      }\n    }\n    return () => {\n      if (previousTicketId) {\n        saveDraft('manual', previousTicketId);\n        ticketPageStore().setEditorIsOpen(false);\n      }\n    };\n  }, [previousTicketId]);\n\n  return (\n    <Fragment>\n      {query.data ? (\n        <Fragment>\n          <Helmet>\n            <title>\n              {query.data.ticket.subject} - {branding.site_name}\n            </title>\n          </Helmet>\n          <TicketPageToolbar ticket={query.data.ticket} />\n          <TicketPageHeader data={query.data} />\n          <ReplyEditor />\n          <AgentTicketPageReplyList data={query.data} />\n        </Fragment>\n      ) : (\n        <PageStatus\n          query={query}\n          loaderClassName=\"absolute inset-0 m-auto\"\n          redirectOn404=\"/agent/tickets\"\n        />\n      )}\n    </Fragment>\n  );\n}\n\nfunction ReplyEditor() {\n  const editorIsOpen = useTicketPageStore(s => s.editorIsOpen);\n  return (\n    <FileUploadProvider>\n      {editorIsOpen && <AgentReplyEditor />}\n    </FileUploadProvider>\n  );\n}\n","import React from 'react';\nimport {CannedRepliesDatatablePage} from '@app/admin/canned-replies/canned-replies-datatable-page';\nimport {useAuth} from '@common/auth/use-auth';\nimport {AgentPageLayout} from '@app/agent/agent-page-layout';\n\nexport function AgentCannedRepliesPage() {\n  const {user} = useAuth();\n  return (\n    <AgentPageLayout>\n      <CannedRepliesDatatablePage userId={user?.id} />\n    </AgentPageLayout>\n  );\n}\n","import {useForm} from 'react-hook-form';\nimport {\n  CreateTicketPayload,\n  useCreateTicket,\n} from '@app/agent/agent-new-ticket-page/use-create-ticket';\nimport {Form} from '@common/ui/forms/form';\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@common/i18n/trans';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {FormNormalizedModelField} from '@common/ui/forms/normalized-model-field';\nimport {FormSelect} from '@common/ui/forms/select/select';\nimport {Item} from '@common/ui/forms/listbox/item';\nimport {\n  GetMailboxSidenavTags,\n  useMailboxSidenavTags,\n} from '@app/agent/use-mailbox-sidenav-tags';\nimport React, {useRef, useState} from 'react';\nimport {PageStatus} from '@common/http/page-status';\nimport {AgentPageLayout} from '@app/agent/agent-page-layout';\nimport {Button} from '@common/ui/buttons/button';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {ReplyEditor} from '@app/reply-editor/reply-editor';\nimport {Editor} from '@tiptap/react';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport {getReplyBody} from '@app/reply-editor/get-reply-body';\nimport {getInputFieldClassNames} from '@common/ui/forms/input-field/get-input-field-class-names';\nimport {useSearchParams} from 'react-router-dom';\n\nexport function AgentNewTicketPage() {\n  const query = useMailboxSidenavTags();\n  return (\n    <AgentPageLayout>\n      <main className=\"container mx-auto p-12 md:p-24\">\n        <h1 className=\"mb-34 mt-14 text-3xl font-light\">\n          <Trans message=\"Create new ticket\" />\n        </h1>\n        {query.data ? (\n          <TicketForm tags={query.data} />\n        ) : (\n          <PageStatus query={query} show404={false} loaderIsScreen={false} />\n        )}\n      </main>\n    </AgentPageLayout>\n  );\n}\n\ninterface TicketFormProps {\n  tags: GetMailboxSidenavTags;\n}\nfunction TicketForm({tags: {statusTags, categoryTags}}: TicketFormProps) {\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const customerId = searchParams.get('customer_id');\n  const form = useForm<CreateTicketPayload>({\n    defaultValues: {\n      category_id: categoryTags[0]?.id,\n      status: statusTags[0]?.name,\n      user_id: customerId ? parseInt(customerId) : undefined,\n    },\n  });\n  const bodyError = form.formState.errors.body?.message;\n  const createTicket = useCreateTicket(form);\n  const editorRef = useRef<Editor | null>(null);\n  const [attachments, setAttachments] = useState<FileEntry[]>([]);\n\n  const handleSubmit = () => {\n    createTicket.mutate(\n      {\n        ...form.getValues(),\n        body: getReplyBody(editorRef) || '',\n        attachments: attachments.map(a => a.id),\n        created_by_agent: true,\n      },\n      {\n        onSuccess: () => navigate('/agent/tickets'),\n      },\n    );\n  };\n\n  const inputFieldClassNames = getInputFieldClassNames();\n\n  return (\n    <Form\n      form={form}\n      onSubmit={() => handleSubmit()}\n      onBeforeSubmit={() => form.clearErrors()}\n    >\n      <FormNormalizedModelField\n        name=\"user_id\"\n        endpoint=\"normalized-models/user\"\n        label={<Trans message=\"Customer\" />}\n        className=\"mb-24\"\n        autoFocus\n      />\n      <FormTextField\n        name=\"subject\"\n        label={<Trans message=\"Subject\" />}\n        className=\"mb-24\"\n      />\n      <FormSelect\n        name=\"category_id\"\n        label={<Trans message=\"Category\" />}\n        selectionMode=\"single\"\n        className=\"mb-24\"\n      >\n        {categoryTags.map(category => (\n          <Item key={category.id} value={category.id}>\n            {category.display_name || category.name}\n          </Item>\n        ))}\n      </FormSelect>\n      <FormSelect\n        name=\"status\"\n        label={<Trans message=\"Status\" />}\n        selectionMode=\"single\"\n        className=\"mb-24\"\n      >\n        {statusTags.map(status => (\n          <Item key={status.id} value={status.name}>\n            {status.display_name || status.name}\n          </Item>\n        ))}\n      </FormSelect>\n      <div className=\"mb-24\">\n        <div className={inputFieldClassNames.label}>\n          <Trans message=\"Reply body\" />\n        </div>\n        <FileUploadProvider>\n          <ReplyEditor\n            autoFocus={false}\n            minHeight=\"min-h-[300px]\"\n            isLoading={createTicket.isPending}\n            editorRef={editorRef}\n            attachments={attachments}\n            onAttachmentsChange={attachments => setAttachments(attachments)}\n            onSubmit={() => handleSubmit()}\n          />\n        </FileUploadProvider>\n        {bodyError && (\n          <div className={inputFieldClassNames.error}>{bodyError}</div>\n        )}\n      </div>\n      <Button\n        variant=\"flat\"\n        color=\"primary\"\n        type=\"submit\"\n        disabled={createTicket.isPending}\n      >\n        <Trans message=\"Create\" />\n      </Button>\n    </Form>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {UseFormReturn} from 'react-hook-form';\nimport {Article} from '@app/help-center/articles/article';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\n\ninterface Response extends BackendResponse {\n  article: Article;\n}\n\nexport interface UpdateUserDetailsPayload {\n  language?: string;\n  country?: string;\n  timezone?: string;\n  details?: string;\n  notes?: string;\n  emails?: {id?: number; address: string}[];\n  tags?: string[];\n}\n\nexport function useUpdateUserDetails(\n  userId: string | number,\n  form: UseFormReturn<UpdateUserDetailsPayload>,\n) {\n  return useMutation({\n    mutationFn: (payload: UpdateUserDetailsPayload) =>\n      updateDetails(userId!, payload),\n    onSuccess: async () => {\n      form.reset({}, {keepValues: true});\n      await queryClient.invalidateQueries({queryKey: ['users']});\n      toast(message('User details updated'));\n    },\n    onError: err =>\n      form ? onFormQueryError(err, form) : showHttpErrorToast(err),\n  });\n}\n\nfunction updateDetails(\n  userId: string | number,\n  payload: UpdateUserDetailsPayload,\n): Promise<Response> {\n  return apiClient.put(`users/${userId}/details`, payload).then(r => r.data);\n}\n","import {User} from '@common/auth/user';\nimport {useSettings} from '@common/core/settings/use-settings';\nimport React, {Fragment, ReactElement, ReactNode} from 'react';\nimport {Trans} from '@common/i18n/trans';\nimport {EnvatoPurchaseList} from '@app/agent/agent-ticket-page/envato-purchase-list/envato-purchase-list';\nimport {useFieldArray, useForm} from 'react-hook-form';\nimport {getLocalTimeZone} from '@internationalized/date';\nimport {useValueLists} from '@common/http/value-lists';\nimport {Form} from '@common/ui/forms/form';\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {Button} from '@common/ui/buttons/button';\nimport {TimezoneSelect} from '@common/auth/ui/account-settings/timezone-select';\nimport {InfoDialogTrigger} from '@common/ui/overlays/dialog/info-dialog-trigger/info-dialog-trigger';\nimport {FormChipField} from '@common/ui/forms/input-field/chip-field/form-chip-field';\nimport {\n  UpdateUserDetailsPayload,\n  useUpdateUserDetails,\n} from '@app/agent/customer-page/requests/use-update-user-details';\nimport {AddIcon} from '@common/icons/material/Add';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {CloseIcon} from '@common/icons/material/Close';\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\nimport {FormSelect} from '@common/ui/forms/select/select';\nimport {Option} from '@common/ui/forms/combobox/combobox';\nimport {message} from '@common/i18n/message';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {DashboardSidenavChildrenProps} from '@common/ui/layout/dashboard-sidenav';\nimport {FormattedDate} from '@common/i18n/formatted-date';\n\nconst borderColor = 'border border-fg-base/6 hover:border-divider';\n\ninterface Props extends DashboardSidenavChildrenProps {\n  user?: User;\n}\nexport function AgentCustomerPageSidebar({user, className}: Props) {\n  const {envato} = useSettings();\n\n  return (\n    <aside className={className}>\n      {user && <FormWrapper user={user} />}\n      {envato.enable && !!user?.purchase_codes && (\n        <Fragment>\n          <div className=\"mb-4 mt-24 text-lg font-semibold\">\n            <Trans message=\"Envato purchases\" />\n          </div>\n          <EnvatoPurchaseList purchases={user.purchase_codes} />\n        </Fragment>\n      )}\n    </aside>\n  );\n}\n\ninterface FormWrapperProps {\n  user: User;\n}\nfunction FormWrapper({user}: FormWrapperProps) {\n  const form = useForm<UpdateUserDetailsPayload>({\n    defaultValues: {\n      language: user.language || '',\n      country: user.country || '',\n      timezone: user.timezone || getLocalTimeZone(),\n      notes: user.details?.notes || '',\n      details: user.details?.details || '',\n      emails: user.secondary_emails,\n      tags: user.tags?.map(tag => tag.name),\n    },\n  });\n  const updateDetails = useUpdateUserDetails(user.id, form);\n\n  return (\n    <Form form={form} onSubmit={values => updateDetails.mutate(values)}>\n      <div className=\"space-y-12\">\n        <EmailsSection user={user} />\n        <LocalizationFields user={user} />\n        <Detail label={<Trans message=\"Tags\" />}>\n          <FormChipField\n            name=\"tags\"\n            size=\"sm\"\n            chipSize=\"xs\"\n            valueKey=\"name\"\n            inputBorder={borderColor}\n          />\n        </Detail>\n        <DetailsField />\n        <NotesField />\n        <Detail label={<Trans message=\"Last login\" />}>\n          {user.last_login ? (\n            <FormattedDate date={user.last_login.created_at} />\n          ) : (\n            '-'\n          )}\n        </Detail>\n        <Detail label={<Trans message=\"Created at\" />}>\n          {user.created_at ? <FormattedDate date={user.created_at} /> : '-'}\n        </Detail>\n      </div>\n      {form.formState.isDirty && (\n        <Button\n          color=\"primary\"\n          variant=\"flat\"\n          type=\"submit\"\n          size=\"sm\"\n          display=\"block\"\n          className=\"mt-14 w-full\"\n          disabled={updateDetails.isPending}\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      )}\n    </Form>\n  );\n}\n\ninterface EmailsSectionProps {\n  user: User;\n}\nfunction EmailsSection({user}: EmailsSectionProps) {\n  const {fields, append, remove} = useFieldArray<\n    UpdateUserDetailsPayload,\n    'emails',\n    'key'\n  >({\n    name: 'emails',\n    keyName: 'key',\n  });\n  return (\n    <Detail\n      label={\n        <div className=\"mt-4\">\n          <Trans message=\"Emails\" />\n        </div>\n      }\n      align=\"items-start\"\n    >\n      <div>\n        <div className=\"flex items-center justify-between gap-12\">\n          <div className=\"min-w-0 flex-auto overflow-hidden overflow-ellipsis whitespace-nowrap\">\n            {user.email}\n          </div>\n          <Tooltip label={<Trans message=\"Add email\" />}>\n            <IconButton\n              size=\"xs\"\n              iconSize=\"sm\"\n              onClick={() => append({address: ''})}\n            >\n              <AddIcon />\n            </IconButton>\n          </Tooltip>\n        </div>\n        <div className=\"space-y-4 pt-6\">\n          {fields.map((field, index) => (\n            <div key={field.key} className=\"flex items-center gap-8\">\n              <FormTextField\n                name={`emails.${index}.address`}\n                className=\"flex-auto\"\n                size=\"xs\"\n                type=\"email\"\n                inputBorder={borderColor}\n              />\n              <IconButton\n                color=\"danger\"\n                size=\"xs\"\n                iconSize=\"sm\"\n                onClick={() => remove(index)}\n              >\n                <CloseIcon />\n              </IconButton>\n            </div>\n          ))}\n        </div>\n      </div>\n    </Detail>\n  );\n}\n\ninterface LocalizationFieldsProps {\n  user: User;\n}\nfunction LocalizationFields({user}: LocalizationFieldsProps) {\n  const {trans} = useTrans();\n  const {data} = useValueLists(['timezones', 'countries', 'localizations']);\n  const countries = data?.countries || [];\n  const localizations = data?.localizations || [];\n  const timezones = data?.timezones || {};\n  return (\n    <Fragment>\n      <Detail label={<Trans message=\"Timezone\" />}>\n        <TimezoneSelect\n          name=\"timezone\"\n          timezones={timezones}\n          size=\"sm\"\n          inputBorder={borderColor}\n        />\n      </Detail>\n      <Detail label={<Trans message=\"Language\" />}>\n        <FormSelect\n          selectionMode=\"single\"\n          name=\"language\"\n          size=\"sm\"\n          inputBorder={borderColor}\n        >\n          {localizations.map(localization => (\n            <Option key={localization.language} value={localization.language}>\n              {localization.name}\n            </Option>\n          ))}\n        </FormSelect>\n      </Detail>\n      <Detail label={<Trans message=\"Country\" />}>\n        <FormSelect\n          selectionMode=\"single\"\n          size=\"sm\"\n          name=\"country\"\n          showSearchField\n          searchPlaceholder={trans(message('Search countries'))}\n          inputBorder={borderColor}\n        >\n          {countries.map(country => (\n            <Option key={country.code} value={country.code}>\n              {country.name}\n            </Option>\n          ))}\n        </FormSelect>\n      </Detail>\n    </Fragment>\n  );\n}\n\nfunction DetailsField() {\n  return (\n    <Detail\n      label={\n        <div className=\"flex items-center gap-1\">\n          <div>\n            <Trans message=\"Details\" />\n          </div>\n          <InfoDialogTrigger\n            dialogSize=\"xs\"\n            body={\n              <Trans message=\"Optional information, like address. Only visible to agents, not end users.\" />\n            }\n          />\n        </div>\n      }\n    >\n      <FormTextField\n        name=\"details\"\n        inputElementType=\"textarea\"\n        rows={1}\n        inputBorder={borderColor}\n      />\n    </Detail>\n  );\n}\n\nfunction NotesField() {\n  return (\n    <Detail\n      label={\n        <div className=\"flex items-center gap-1\">\n          <div>\n            <Trans message=\"Notes\" />\n          </div>\n          <InfoDialogTrigger\n            dialogSize=\"xs\"\n            body={\n              <Trans message=\"Optional notes. Only visible to agents, not end users.\" />\n            }\n          />\n        </div>\n      }\n    >\n      <FormTextField\n        name=\"notes\"\n        inputElementType=\"textarea\"\n        rows={1}\n        inputBorder={borderColor}\n      />\n    </Detail>\n  );\n}\n\ninterface DetailProps {\n  label: ReactElement;\n  children: ReactNode;\n  align?: string;\n}\nfunction Detail({label, children, align = 'items-center'}: DetailProps) {\n  return (\n    <div className={`flex ${align} gap-12`}>\n      <div className=\"w-80 flex-shrink-0 text-sm text-muted\">{label}</div>\n      <div className=\"flex-auto text-sm\">{children}</div>\n    </div>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\n\ninterface Payload {\n  userId: number | string;\n}\n\nexport function useDeleteUser() {\n  const navigate = useNavigate();\n  return useMutation({\n    mutationFn: deleteUser,\n    onSuccess: async () => {\n      toast(message('User deleted'));\n      await Promise.allSettled([\n        queryClient.invalidateQueries({\n          queryKey: ['users'],\n        }),\n        queryClient.invalidateQueries({\n          queryKey: ['tickets'],\n        }),\n      ]);\n      navigate('/agent/tickets');\n    },\n    onError: r => showHttpErrorToast(r),\n  });\n}\n\nfunction deleteUser(payload: Payload): Promise<BackendResponse> {\n  return apiClient\n    .delete(`users/${payload.userId}`)\n    .then(response => response.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {UseFormReturn} from 'react-hook-form';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\n\nexport interface MergeUsersPayload {\n  user_id: number | string;\n  mergee_id: number | string;\n}\n\nexport function useMergeUsers(form: UseFormReturn<MergeUsersPayload>) {\n  const navigate = useNavigate();\n  return useMutation({\n    mutationFn: mergeUsers,\n    onSuccess: async () => {\n      toast(message('Users merged'));\n      await Promise.allSettled([\n        queryClient.invalidateQueries({\n          queryKey: ['users'],\n        }),\n        queryClient.invalidateQueries({\n          queryKey: ['tickets'],\n        }),\n      ]);\n      navigate('/agent/tickets');\n    },\n    onError: r => onFormQueryError(r, form),\n  });\n}\n\nfunction mergeUsers(payload: MergeUsersPayload): Promise<BackendResponse> {\n  return apiClient.post(`merge-users`, payload).then(response => response.data);\n}\n","import {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {User} from '@common/auth/user';\nimport {Trans} from '@common/i18n/trans';\nimport {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {useForm} from 'react-hook-form';\nimport {Form} from '@common/ui/forms/form';\nimport {FormNormalizedModelField} from '@common/ui/forms/normalized-model-field';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {Button} from '@common/ui/buttons/button';\nimport {\n  MergeUsersPayload,\n  useMergeUsers,\n} from '@app/agent/customer-page/requests/use-merge-users';\nimport {message} from '@common/i18n/message';\n\ninterface Props {\n  mergee: User;\n}\n\nexport function MergeUsersDialog({mergee}: Props) {\n  const {close, formId} = useDialogContext();\n  const form = useForm<MergeUsersPayload>({\n    defaultValues: {\n      mergee_id: mergee.id,\n    },\n  });\n  const mergeUsers = useMergeUsers(form);\n  const selectedUserId = form.watch('user_id');\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans\n          message=\"Merge ':name' into another user\"\n          values={{name: mergee.display_name}}\n        />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          id={formId}\n          form={form}\n          onSubmit={values => {\n            mergeUsers.mutate(values, {onSuccess: () => close()});\n          }}\n        >\n          <FormNormalizedModelField\n            name=\"user_id\"\n            endpoint=\"normalized-models/user\"\n            label={<Trans message=\"User to merge into\" />}\n            placeholder={message('Select user')}\n            description={\n              <Trans\n                message=\"':name' will be deleted and all data belonging to them will be merged into selected user.\"\n                values={{name: mergee.display_name}}\n              />\n            }\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          type=\"submit\"\n          variant=\"flat\"\n          color=\"primary\"\n          form={formId}\n          disabled={!selectedUserId || mergeUsers.isPending}\n        >\n          <Trans message=\"Merge\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useUser} from '@common/auth/ui/use-user';\nimport {Link, Outlet, useLocation, useParams} from 'react-router-dom';\nimport {AgentNavbar} from '@app/agent/agent-navbar';\nimport React, {Fragment, useContext, useEffect, useState} from 'react';\nimport {getCustomerLink} from '@app/agent/customer-page/customer-link';\nimport {Trans} from '@common/i18n/trans';\nimport {Tabs} from '@common/ui/tabs/tabs';\nimport {TabList} from '@common/ui/tabs/tab-list';\nimport {Tab} from '@common/ui/tabs/tab';\nimport {AgentCustomerPageSidebar} from '@app/agent/customer-page/agent-customer-page-sidebar';\nimport {UserAvatar} from '@common/ui/images/user-avatar';\nimport {User} from '@common/auth/user';\nimport {Button} from '@common/ui/buttons/button';\nimport {AddIcon} from '@common/icons/material/Add';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {DashboardLayout} from '@common/ui/layout/dashboard-layout';\nimport {DashboardNavbar} from '@common/ui/layout/dashboard-navbar';\nimport {DashboardSidenav} from '@common/ui/layout/dashboard-sidenav';\nimport {DashboardContent} from '@common/ui/layout/dashboard-content';\nimport clsx from 'clsx';\nimport {prefetchValueLists} from '@common/http/value-lists';\nimport {DashboardLayoutContext} from '@common/ui/layout/dashboard-layout-context';\nimport {\n  Menu,\n  MenuItem,\n  MenuTrigger,\n} from '@common/ui/navigation/menu/menu-trigger';\nimport {MoreHorizIcon} from '@common/icons/material/MoreHoriz';\nimport {ConfirmationDialog} from '@common/ui/overlays/dialog/confirmation-dialog';\nimport {openDialog} from '@common/ui/overlays/store/dialog-store';\nimport {useDeleteUser} from '@app/agent/customer-page/requests/use-delete-user';\nimport {PageStatus} from '@common/http/page-status';\nimport {BanUserDialog} from '@common/admin/users/ban-user-dialog';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {MergeUsersDialog} from '@app/agent/customer-page/merge-users-dialog';\n\nexport function AgentCustomerPage() {\n  const {userId} = useParams();\n  const query = useUser(userId!, {\n    with: [\n      'tags',\n      'secondary_emails',\n      'details',\n      'purchase_codes',\n      'bans',\n      'lastLogin',\n    ],\n  });\n  const user = query.data?.user;\n\n  useEffect(() => {\n    prefetchValueLists(['timezones', 'countries', 'localizations']);\n  }, []);\n\n  if (!query.isLoading && !query.data) {\n    return <PageStatus query={query} />;\n  }\n\n  return (\n    <DashboardLayout name=\"agent_customer_page\">\n      <AgentNavbar element={DashboardNavbar} />\n      <LeftSidebar user={user} />\n      <DashboardContent>\n        <main\n          className={clsx(\n            'p-14 transition-opacity md:p-24',\n            !user && 'opacity-0',\n          )}\n        >\n          <Fragment>\n            <Header user={user} />\n            <Tables />\n          </Fragment>\n        </main>\n      </DashboardContent>\n    </DashboardLayout>\n  );\n}\n\ninterface PageNavbarProps {\n  user?: User;\n}\nfunction LeftSidebar({user}: PageNavbarProps) {\n  const {isMobileMode} = useContext(DashboardLayoutContext);\n  return (\n    <DashboardSidenav\n      position=\"left\"\n      size=\"w-350\"\n      className={clsx(\n        'bg',\n        isMobileMode ? 'border-r p-12' : 'mt-8 py-24 pl-24',\n      )}\n      overflow=\"overflow-y-auto overflow-x-hidden compact-scrollbar\"\n    >\n      <AgentCustomerPageSidebar user={user} />\n    </DashboardSidenav>\n  );\n}\n\ninterface HeaderProps {\n  user?: User;\n}\nfunction Header({user}: HeaderProps) {\n  if (!user) return null;\n  const banReason = user.bans?.[0]?.comment;\n  return (\n    <header className=\"mb-16 flex items-center\">\n      <div className=\"mr-auto flex items-center gap-14\">\n        <UserAvatar user={user} size=\"w-50 h-50\" circle />\n        <div>\n          <h1 className=\"text-xl font-semibold\">{user.display_name}</h1>\n          {banReason && (\n            <div className=\"text-sm text-danger\">\n              <Trans\n                message=\"Suspended: :reason\"\n                values={{reason: banReason}}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n      <Button\n        variant=\"outline\"\n        startIcon={<AddIcon />}\n        size=\"xs\"\n        className=\"mx-12\"\n        elementType={Link}\n        to={`/agent/tickets/new?customer_id=${user.id}`}\n        target=\"_blank\"\n      >\n        <Trans message=\"New ticket\" />\n      </Button>\n      <MenuTrigger>\n        <IconButton variant=\"outline\" size=\"xs\">\n          <MoreHorizIcon />\n        </IconButton>\n        <Menu>\n          <MenuItem\n            value=\"suspend\"\n            onSelected={() => openDialog(BanUserDialog, {user})}\n          >\n            <Trans message=\"Suspend\" />\n          </MenuItem>\n          <MenuItem\n            value=\"merge\"\n            onSelected={() => openDialog(MergeUsersDialog, {mergee: user})}\n          >\n            <Trans message=\"Merge into another user\" />\n          </MenuItem>\n          <MenuItem\n            value=\"delete\"\n            onSelected={() => openDialog(DeleteUserDialog, {user})}\n          >\n            <Trans message=\"Delete\" />\n          </MenuItem>\n        </Menu>\n      </MenuTrigger>\n    </header>\n  );\n}\n\ninterface DeleteUserDialogProps {\n  user: User;\n}\nfunction DeleteUserDialog({user}: DeleteUserDialogProps) {\n  const deleteUser = useDeleteUser();\n  const {close} = useDialogContext();\n  return (\n    <ConfirmationDialog\n      isDanger\n      title={<Trans message=\"Delete user\" />}\n      body={\n        <Trans message=\"Are you sure you want to delete this user? This will also delete all tickets created by this user and can't be undone.\" />\n      }\n      onConfirm={() => {\n        deleteUser.mutate(\n          {userId: user.id},\n          {\n            onSuccess: () => close(),\n          },\n        );\n      }}\n      isLoading={deleteUser.isPending}\n      confirm={<Trans message=\"Delete\" />}\n    />\n  );\n}\n\nfunction Tables() {\n  const {userId} = useParams();\n  const {pathname} = useLocation();\n  const [selectedTab, setSelectedTab] = useState(() => {\n    return pathname.endsWith('searches') ? 1 : 0;\n  });\n  return (\n    <div className=\"rounded border\">\n      <Tabs selectedTab={selectedTab} onTabChange={setSelectedTab}>\n        <TabList>\n          <Tab\n            width=\"min-w-132\"\n            elementType={Link}\n            to={getCustomerLink(userId!)}\n            replace\n          >\n            <Trans message=\"Tickets\" />\n          </Tab>\n          <Tab\n            width=\"min-w-132\"\n            elementType={Link}\n            to={getCustomerLink(userId!, {tab: 'searches'})}\n            replace\n          >\n            <Trans message=\"Searches\" />\n          </Tab>\n        </TabList>\n        <div>\n          <Outlet />\n        </div>\n      </Tabs>\n    </div>\n  );\n}\n","import {useParams, useSearchParams} from 'react-router-dom';\nimport {useTickets} from '@app/agent/agent-ticket-page/user-details-sidebar/requests/use-tickets';\nimport {TicketTable} from '@app/agent/agent-ticket-list-page/ticket-table/ticket-table';\nimport React, {useState} from 'react';\nimport {GlobalLoadingProgress} from '@app/agent/global-loading-progress';\nimport searchImage from '@app/agent/agent-search-page/search.svg';\nimport {Trans} from '@common/i18n/trans';\nimport {DataTablePaginationFooter} from '@common/datatable/data-table-pagination-footer';\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {SvgImage} from '@common/ui/images/svg-image/svg-image';\nimport {AnimatePresence} from 'framer-motion';\nimport {TicketTableActions} from '@app/agent/agent-ticket-list-page/ticket-table/ticket-table-actions';\n\nexport function AgentCustomerPageTicketTable() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const {userId} = useParams();\n  const [selectedTickets, setSelectedTickets] = useState<number[]>([]);\n  const query = useTickets({\n    userId,\n    page: searchParams.get('page') || 1,\n    perPage: searchParams.get('perPage') ?? '',\n    loader: 'ticketTable',\n  });\n\n  const {data, fetchStatus, isLoading, isPlaceholderData} = query;\n  const items = data?.pagination.data || [];\n  const isEmpty =\n    (fetchStatus === 'idle' && items.length === 0) ||\n    (!isLoading && !isPlaceholderData && items.length === 0);\n\n  return (\n    <div className=\"relative\">\n      <GlobalLoadingProgress query={query} />\n      <TicketTable\n        query={query}\n        selectedTickets={selectedTickets}\n        onSelectionChange={setSelectedTickets}\n      />\n      <AnimatePresence>\n        {selectedTickets.length && (\n          <TicketTableActions\n            ticketIds={selectedTickets}\n            onActionCompleted={() => setSelectedTickets([])}\n          />\n        )}\n      </AnimatePresence>\n      {isEmpty && (\n        <IllustratedMessage\n          className=\"mt-48\"\n          image={<SvgImage src={searchImage} />}\n          title={<Trans message=\"User has not created any tickets yet\" />}\n        />\n      )}\n      <DataTablePaginationFooter\n        query={query}\n        onPageChange={page =>\n          setSearchParams(prev => {\n            prev.set('page', page.toString());\n            return prev;\n          })\n        }\n        onPerPageChange={perPage =>\n          setSearchParams(prev => {\n            prev.set('perPage', perPage.toString());\n            return prev;\n          })\n        }\n      />\n    </div>\n  );\n}\n","import {useParams} from 'react-router-dom';\nimport React from 'react';\nimport {SearchReportTable} from '@app/admin/reports/search-report/search-report-table';\nimport {Trans} from '@common/i18n/trans';\n\nexport function CustomerSearchesTable() {\n  const {userId} = useParams();\n  return (\n    <SearchReportTable\n      description={\n        <Trans message=\"This report shows what the user searched for recently.\" />\n      }\n      userId={userId}\n      orderBy=\"last_seen\"\n    />\n  );\n}\n","import {Navigate, RouteObject, useRoutes} from 'react-router-dom';\nimport {AgentTicketListPage} from '@app/agent/agent-ticket-list-page/agent-ticket-list-page';\nimport {AgentSearchPage} from '@app/agent/agent-search-page/agent-search-page';\nimport {SearchTicketsTable} from '@app/agent/agent-search-page/search-tickets/search-tickets-table';\nimport {SearchUsersTable} from '@app/agent/agent-search-page/search-users-table';\nimport {SearchArticlesTable} from '@app/agent/agent-search-page/search-articles-table';\nimport {AgentTicketPage} from '@app/agent/agent-ticket-page/agent-ticket-page';\nimport {NotFoundPage} from '@common/ui/not-found-page/not-found-page';\nimport {AgentCannedRepliesPage} from '@app/agent/agent-canned-replies-page';\nimport {AgentNewTicketPage} from '@app/agent/agent-new-ticket-page/agent-new-ticket-page';\nimport {AgentCustomerPage} from '@app/agent/customer-page/agent-customer-page';\nimport {AgentCustomerPageTicketTable} from '@app/agent/customer-page/agent-customer-page-ticket-table';\nimport {CustomerSearchesTable} from '@app/agent/customer-page/customer-searches-table';\n\nconst RouteConfig: RouteObject[] = [\n  {\n    path: '/',\n    element: <Navigate to=\"/agent/tickets\" replace />,\n  },\n  {\n    path: '/tickets',\n    element: <AgentTicketListPage />,\n  },\n  {\n    path: '/tickets/new',\n    element: <AgentNewTicketPage />,\n  },\n  {\n    path: '/tickets/:ticketId',\n    element: <AgentTicketPage />,\n  },\n  {\n    path: '/users/:userId',\n    element: <AgentCustomerPage />,\n    children: [\n      {path: '', element: <Navigate to=\"tickets\" replace />},\n      {\n        path: 'tickets',\n        element: <AgentCustomerPageTicketTable />,\n      },\n      {\n        path: 'searches',\n        element: <CustomerSearchesTable />,\n      },\n    ],\n  },\n  {\n    path: '/search',\n    element: <AgentSearchPage />,\n    children: [\n      {\n        path: '',\n        element: <SearchTicketsTable />,\n      },\n      {\n        path: 'tickets',\n        element: <SearchTicketsTable />,\n      },\n      {\n        path: 'users',\n        element: <SearchUsersTable />,\n      },\n      {\n        path: 'articles',\n        element: <SearchArticlesTable />,\n      },\n    ],\n  },\n  {\n    path: 'saved-replies',\n    element: <AgentCannedRepliesPage />,\n  },\n  {\n    path: '*',\n    element: <NotFoundPage />,\n  },\n];\n\nexport default function AgentRoutes() {\n  return useRoutes(RouteConfig);\n}\n"],"names":["assignTickets","addTag","close","ComboBox","deleteTickets","_a","columnConfig","createNote","ReplyEditor","attachments","updateReply","Content","deleteReply","Detail","mergeTickets","updateTicket","ticket","saveDraft","submitReply","MenuItem","updateDetails","Option","mergeUsers","deleteUser"],"mappings":"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"}