{"version":3,"file":"hc-ticket-routes-ca714916.mjs","sources":["../../../resources/client/help-center/tickets/use-submit-customer-reply.ts","../../../resources/client/help-center/tickets/use-team.ts","../../../resources/client/help-center/tickets/customer-ticket-page.tsx","../../../resources/client/help-center/tickets/customer-new-ticket-page/use-customer-ticket-categories.ts","../../../resources/client/help-center/tickets/customer-new-ticket-page/use-customer-new-ticket-config.ts","../../../resources/client/help-center/tickets/customer-new-ticket-page/suggested-articles-drawer.tsx","../../../resources/client/help-center/tickets/customer-new-ticket-page/customer-new-ticket-page.tsx","../../../resources/client/help-center/tickets/hc-ticket-routes.tsx"],"sourcesContent":["import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {Reply} from '@app/agent/reply';\nimport {useParams} from 'react-router-dom';\nimport {FileEntry} from '@common/uploads/file-entry';\n\ninterface SubmitReplyResponse {\n  reply: Reply;\n}\n\ninterface Payload {\n  body: string | null;\n  attachments?: FileEntry[];\n}\n\nexport function useSubmitCustomerReply() {\n  const {ticketId} = useParams();\n  return useMutation({\n    mutationFn: (payload: Payload) =>\n      submitReply({\n        ticketId: ticketId!,\n        ...payload,\n      }),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({queryKey: ['tickets']});\n      toast(message('Reply submitted'));\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction submitReply(data: Payload & {ticketId: number | string}) {\n  const payload = {\n    body: data.body,\n    attachments: data.attachments?.map(a => a.id),\n  };\n  return apiClient\n    .post<SubmitReplyResponse>(`tickets/${data.ticketId}/replies`, payload)\n    .then(r => r.data);\n}\n","import {useQuery} from '@tanstack/react-query';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {PaginatedBackendResponse} from '@common/http/backend-response/pagination-response';\r\nimport { BackendResponse } from '@common/http/backend-response/backend-response';\r\n\r\nimport { TeamTypes } from '@common/admin/teams/teams-index-page';\r\n\r\ninterface Response extends BackendResponse {\r\n  team: TeamTypes\r\n}\r\n\r\nexport function useTeam(id:number | undefined) {\r\n  return useQuery({\r\n    queryKey: ['new-team', id],\r\n    queryFn: () => fetchTeam(id),\r\n  });\r\n}\r\n\r\nfunction fetchTeam(id:number | undefined) {\r\n  return apiClient\r\n    .get<Response>(`teams/${id}`)\r\n    .then(response => response.data)\r\n}\r\n","import {Navbar} from '@common/ui/navigation/navbar/navbar';\r\nimport {HcSearchBar} from '@app/help-center/search/hc-search-bar';\r\nimport React, {Fragment, useRef, useState} from 'react';\r\nimport {PageStatus} from '@common/http/page-status';\r\nimport {\r\n  GetTicketResponse,\r\n  useTicket,\r\n} from '@app/agent/agent-ticket-page/requests/use-ticket';\r\n/* import {TicketHeaderDateFormat} from '@app/agent/ticket-layout/ticket-header-layout'; */\r\nimport {useTicketReplies} from '@app/agent/agent-ticket-page/reply-list/requests/use-ticket-replies';\r\nimport {TicketReplyLayout} from '@app/agent/ticket-layout/ticket-reply-layout';\r\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\r\nimport {FileEntry} from '@common/uploads/file-entry';\r\nimport {\r\n  AttachmentListLayout,\r\n  FileEntryAttachmentLayout,\r\n} from '@app/agent/ticket-layout/attachment-list-layout';\r\nimport {BreadcrumbItem} from '@common/ui/breadcrumbs/breadcrumb-item';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {Breadcrumb} from '@common/ui/breadcrumbs/breadcrumb';\r\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\r\nimport {ReplyEditor} from '@app/reply-editor/reply-editor';\r\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\r\nimport {useSubmitCustomerReply} from '@app/help-center/tickets/use-submit-customer-reply';\r\nimport {FormattedRelativeTime} from '@common/i18n/formatted-relative-time';\r\nimport {FormattedDate} from '@common/i18n/formatted-date';\r\nimport {Chip} from '@common/ui/forms/input-field/chip-field/chip';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {ReplyIcon} from '@common/icons/material/Reply';\r\nimport {TicketTagList} from '@app/agent/ticket-layout/ticket-tag-list';\r\nimport {Ticket} from '@app/agent/ticket';\r\nimport {Editor} from '@tiptap/react';\r\nimport {SendReplyButton} from '@app/reply-editor/send-reply-button';\r\nimport {useKeybind} from '@common/utils/keybinds/use-keybind';\r\nimport {SectionHelper} from '@common/ui/section-helper';\r\nimport {CheckIcon} from '@common/icons/material/Check';\r\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\r\nimport {ConfirmationDialog} from '@common/ui/overlays/dialog/confirmation-dialog';\r\nimport {useChangeTicketStatus} from '@app/agent/ticket-actions/requests/use-change-ticket-status';\r\nimport {useParams} from 'react-router-dom';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {message} from '@common/i18n/message';\r\nimport TicketTypeRequest from '@app/agent/ticket-layout/ticket-type-request-tag';\r\nimport { useTeam } from './use-team';\r\n\r\nconst TicketHeaderDateFormat: Intl.DateTimeFormatOptions = {\r\n  month: 'short',\r\n  day: 'numeric',\r\n};\r\n\r\nexport function CustomerTicketPage() {\r\n  const navigate = useNavigate();\r\n  return (\r\n    <div>\r\n      <Navbar menuPosition=\"header\">\r\n        <HcSearchBar />\r\n      </Navbar>\r\n      <div className=\"container mx-auto px-12 pb-48 md:px-24\">\r\n        <Breadcrumb size=\"sm\" className=\"mb-34 mt-34 md:mb-48\">\r\n          <BreadcrumbItem onSelected={() => navigate(`/hc`)}>\r\n            <Trans message=\"Help center\" />\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem onSelected={() => navigate(`/hc/tickets`)}>\r\n            <Trans message=\"Requests\" />\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem>\r\n            <Trans message=\"Current ticket\" />\r\n          </BreadcrumbItem>\r\n        </Breadcrumb>\r\n        <main>\r\n          <Content />\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Content() {\r\n  const query = useTicket();\r\n  const [editorIsOpen, setEditorIsOpen] = useState(false);\r\n  useKeybind('window', 'r', () => setEditorIsOpen(true));\r\n\r\n  return (\r\n    <Fragment>\r\n      {query.data ? (\r\n        <Fragment>\r\n          {query.data.ticket.status === 'locked' && (\r\n            <SectionHelper\r\n              className=\"mb-44 text-center\"\r\n              color=\"danger\"\r\n              title={\r\n                <Trans message=\"This ticket was locked due to inactivity. To reply, create a new ticket.\" />\r\n              }\r\n            />\r\n          )}\r\n          <Header\r\n            ticket={query.data.ticket}\r\n            editorIsOpen={editorIsOpen}\r\n            onOpenEditor={() => setEditorIsOpen(true)}\r\n          />\r\n          <FileUploadProvider>\r\n            {editorIsOpen && (\r\n              <CustomerReplyEditor onClose={() => setEditorIsOpen(false)} />\r\n            )}\r\n          </FileUploadProvider>\r\n          <ReplyList data={query.data} />\r\n        </Fragment>\r\n      ) : (\r\n        <PageStatus query={query} loaderClassName=\"absolute inset-0 m-auto\" />\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface CustomerReplyEditorProps {\r\n  onClose: () => void;\r\n}\r\nfunction CustomerReplyEditor({onClose}: CustomerReplyEditorProps) {\r\n  const editorRef = useRef<Editor | null>(null);\r\n  const submitReply = useSubmitCustomerReply();\r\n  const [attachments, setAttachments] = useState<FileEntry[]>([]);\r\n\r\n  return (\r\n    <ReplyEditor\r\n      isLoading={submitReply.isPending}\r\n      footerButtons={<SendReplyButton />}\r\n      editorRef={editorRef}\r\n      className=\"mb-24\"\r\n      attachments={attachments}\r\n      onAttachmentsChange={attachments => setAttachments(attachments)}\r\n      onSubmit={reply =>\r\n        submitReply.mutate(reply, {\r\n          onSuccess: () => onClose(),\r\n        })\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\ninterface HeaderProps {\r\n  ticket: Ticket;\r\n  editorIsOpen: boolean;\r\n  onOpenEditor: () => void;\r\n}\r\nfunction Header({ticket, onOpenEditor, editorIsOpen}: HeaderProps) {\r\n  const {assignee} = ticket;\r\n  const teamId = assignee?.team_id;\r\n  const assignedTeam = useTeam(teamId)\r\n  return (\r\n    <div className=\"mb-44\">\r\n      <div className=\"flex items-center gap-24\">\r\n        <div className=\"whitespace-nowrap text-muted max-md:hidden\">\r\n          <FormattedRelativeTime date={ticket.created_at} /> (\r\n          <FormattedDate\r\n            date={ticket.created_at}\r\n            options={TicketHeaderDateFormat}\r\n          />\r\n          )\r\n        </div>\r\n        <div className=\"text-2xl md:ml-auto\">#{ticket.id}</div>\r\n        <Chip\r\n          size=\"sm\"\r\n          color={!ticket.closed_at ? 'primary' : undefined}\r\n          radius=\"rounded\"\r\n          className=\"min-w-60 font-bold capitalize\"\r\n        >\r\n          {ticket.status}\r\n        </Chip>\r\n      </div>\r\n      <div className=\"flex items-center gap-8\">\r\n        <h1 className=\"my-12 text-2xl\">{ticket.subject}</h1>\r\n        <TicketTypeRequest ticketRequestType={ticket.ticket_request_type} />\r\n      </div>\r\n      <div className=\"flex items-center gap-12\">\r\n        <div className=\"mr-auto font-semibold max-md:hidden flex gap-4 items-center\">\r\n          {/* <TicketTagList\r\n            ticket={ticket}\r\n            tagType=\"category\"\r\n            size=\"sm\"\r\n            radius=\"rounded\"\r\n            className=\"\"\r\n          /> */}\r\n          {teamId && assignedTeam && (\r\n            <div>\r\n              <span className=\"text-muted\">Assigned to:</span> <span className=\"font-medium\">{assignedTeam?.data?.team?.display_name}</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n        {!ticket.closed_at && <MarkAsSolvedButton />}\r\n        <Button\r\n          size=\"sm\"\r\n          variant=\"outline\"\r\n          startIcon={<ReplyIcon />}\r\n          disabled={editorIsOpen}\r\n          onClick={() => onOpenEditor()}\r\n        >\r\n          <Trans message=\"Add a reply\" />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface ReplyListProps {\r\n  data: GetTicketResponse;\r\n}\r\nfunction ReplyList({data: {ticket, replies}}: ReplyListProps) {\r\n  const query = useTicketReplies(ticket.id, replies);\r\n  return (\r\n    <Fragment>\r\n      {query.items.map(reply => {\r\n        const isInitial =\r\n          !query.hasNextPage && reply.id === query.items.at(-1)?.id;\r\n        return (\r\n          <TicketReplyLayout\r\n            className=\"px-12\"\r\n            key={reply.id}\r\n            reply={reply}\r\n            isInitial={isInitial}\r\n            ticketRequestType={ticket.ticket_request_type}\r\n            attachments={\r\n              reply.attachments?.length ? (\r\n                <AttachmentList attachments={reply.attachments} />\r\n              ) : null\r\n            }\r\n          />\r\n        );\r\n      })}\r\n      <InfiniteScrollSentinel query={query} />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface AttachmentListProps {\r\n  attachments: FileEntry[];\r\n}\r\nfunction AttachmentList({attachments}: AttachmentListProps) {\r\n  return (\r\n    <AttachmentListLayout className=\"mt-30 w-max\">\r\n      {attachments.map((attachment, index) => (\r\n        <FileEntryAttachmentLayout\r\n          key={attachment.id}\r\n          attachments={attachments}\r\n          index={index}\r\n        />\r\n      ))}\r\n    </AttachmentListLayout>\r\n  );\r\n}\r\n\r\nfunction MarkAsSolvedButton() {\r\n  const changeStatus = useChangeTicketStatus();\r\n  const {ticketId} = useParams();\r\n  const navigate = useNavigate();\r\n  return (\r\n    <DialogTrigger type=\"modal\">\r\n      <Button size=\"sm\" variant=\"outline\" startIcon={<CheckIcon />}>\r\n        <Trans message=\"Mark as solved\" />\r\n      </Button>\r\n      {({close}) => (\r\n        <ConfirmationDialog\r\n          onConfirm={() => {\r\n            changeStatus.mutate(\r\n              {\r\n                ids: [ticketId!],\r\n                status: 'closed',\r\n              },\r\n              {\r\n                onSuccess: () => {\r\n                  close();\r\n                  toast(message('Ticked marked as solved'));\r\n                  navigate(`/hc/tickets`);\r\n                },\r\n              },\r\n            );\r\n          }}\r\n          isLoading={changeStatus.isPending}\r\n          title={<Trans message=\"Mark as solved\" />}\r\n          body={\r\n            <Trans message=\"Are you sure you want to mark this ticket as solved?\" />\r\n          }\r\n          confirm={<Trans message=\"Confirm\" />}\r\n        />\r\n      )}\r\n    </DialogTrigger>\r\n  );\r\n}\r\n","import {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {TicketTag} from '@app/agent/ticket';\nimport {PaginatedBackendResponse} from '@common/http/backend-response/pagination-response';\n\ninterface Response extends PaginatedBackendResponse<TicketTag> {}\n\nexport function useCustomerTicketCategories() {\n  return useQuery({\n    queryKey: ['new-ticket-categories'],\n    queryFn: () => fetchCategories(),\n  });\n}\n\nfunction fetchCategories() {\n  return apiClient\n    .get<Response>(`ticket-categories`, {\n      params: {\n        perPage: 25,\n        with: 'categories',\n        orderBy: 'name',\n        orderDir: 'asc',\n        filterByPurchases: true,\n        paginate: 'simple',\n      },\n    })\n    .then(response => response.data);\n}\n","import {useSettings} from '@common/core/settings/use-settings';\nimport {CustomerNewTicketPageConfig} from '@app/help-center/tickets/customer-new-ticket-page/customer-new-ticket-page-config';\n\nexport function useCustomerNewTicketConfig() {\n  const settings = useSettings();\n  return (settings.hc?.newTicket?.appearance ||\n    {}) as CustomerNewTicketPageConfig;\n}\n","import {\n  SearchArticlesResponse,\n  useSearchArticles,\n} from '@app/help-center/search/use-search-articles';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {Trans} from '@common/i18n/trans';\nimport {ArticleLink} from '@app/help-center/articles/article-link';\nimport {AccordionAnimation} from '@common/ui/accordion/accordtion-animation';\nimport {MutableRefObject} from 'react';\nimport {SearchSessionItem} from '@app/help-center/search/use-search-term-logger';\nimport {useCurrentDateTime} from '@common/i18n/use-current-date-time';\n\ninterface Props {\n  query: string;\n  suggestionLog: MutableRefObject<SearchSessionItem[]>;\n  hcCategoryIds?: number[];\n}\nexport function SuggestedArticlesDrawer({\n  query,\n  suggestionLog,\n  hcCategoryIds,\n}: Props) {\n  const now = useCurrentDateTime();\n  const handleSearch = (r: SearchArticlesResponse) => {\n    if (r.pagination.data.length) {\n      suggestionLog.current.push({\n        term: r.query,\n        results: r.pagination.data.map(a => a.id),\n        date: now.toAbsoluteString(),\n      });\n    }\n  };\n\n  const {data} = useSearchArticles(\n    query,\n    {perPage: 5, categoryIds: hcCategoryIds},\n    {onSearch: handleSearch},\n  );\n  const results = data?.pagination.data;\n  const isVisible = !!results?.length;\n\n  return (\n    <AnimatePresence>\n      <m.div\n        key=\"drawer\"\n        variants={AccordionAnimation.variants}\n        transition={AccordionAnimation.transition}\n        initial={false}\n        animate={isVisible ? 'open' : 'closed'}\n      >\n        <div className=\"mb-10 mt-24 text-xl font-semibold\">\n          <Trans message=\"Were you looking for\" />:\n        </div>\n        {results?.map(article => (\n          <ArticleLink\n            key={article.id}\n            article={article}\n            className=\"block py-10 text-sm text-primary\"\n            target=\"_blank\"\n          />\n        ))}\n      </m.div>\n    </AnimatePresence>\n  );\n}\n","import {Navbar} from '@common/ui/navigation/navbar/navbar';\r\nimport {HcSearchBar} from '@app/help-center/search/hc-search-bar';\r\nimport React, {ReactNode, useRef, useState} from 'react';\r\nimport {BreadcrumbItem} from '@common/ui/breadcrumbs/breadcrumb-item';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {Breadcrumb} from '@common/ui/breadcrumbs/breadcrumb';\r\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\r\nimport {useCustomerTicketCategories} from '@app/help-center/tickets/customer-new-ticket-page/use-customer-ticket-categories';\r\nimport {useCustomerTicketRequestTypes} from '@app/help-center/tickets/customer-new-ticket-page/use-customer-ticket-request-types';\r\nimport {useForm} from 'react-hook-form';\r\nimport {\r\n  CreateTicketPayload,\r\n  useCreateTicket,\r\n} from '@app/agent/agent-new-ticket-page/use-create-ticket';\r\nimport {Editor} from '@tiptap/react';\r\nimport {FileEntry} from '@common/uploads/file-entry';\r\nimport {getReplyBody} from '@app/reply-editor/get-reply-body';\r\nimport {getInputFieldClassNames} from '@common/ui/forms/input-field/get-input-field-class-names';\r\nimport {Form} from '@common/ui/forms/form';\r\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\r\nimport {FormSelect} from '@common/ui/forms/select/select';\r\nimport {Item} from '@common/ui/forms/listbox/item';\r\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\r\nimport {ReplyEditor} from '@app/reply-editor/reply-editor';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {TicketTag} from '@app/agent/ticket';\r\nimport {TicketRequestType, TicketRequestTypeTag} from '@app/agent/ticket-request-type';\r\nimport {useCustomerNewTicketConfig} from '@app/help-center/tickets/customer-new-ticket-page/use-customer-new-ticket-config';\r\nimport {SuggestedArticlesDrawer} from '@app/help-center/tickets/customer-new-ticket-page/suggested-articles-drawer';\r\nimport {\r\n  SearchSessionItem,\r\n  useSearchTermLogger,\r\n} from '@app/help-center/search/use-search-term-logger';\r\nimport {useSettings} from '@common/core/settings/use-settings';\r\n\r\nexport function CustomerNewTicketPage() {\r\n  const navigate = useNavigate();\r\n  const config = useCustomerNewTicketConfig();\r\n  const query = useCustomerTicketCategories();\r\n  /* console.log('query', query); */\r\n  const queryRequestType = useCustomerTicketRequestTypes();\r\n  const {envato} = useSettings();\r\n  return (\r\n    <div>\r\n      <Navbar menuPosition=\"header\">\r\n        <HcSearchBar />\r\n      </Navbar>\r\n      <div className=\"container mx-auto px-12 pb-48 md:px-24\">\r\n        <Breadcrumb size=\"sm\" className=\"mb-34 mt-34 md:mb-48\">\r\n          <BreadcrumbItem onSelected={() => navigate(`/hc`)}>\r\n            <Trans message=\"Help center\" />\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem onSelected={() => navigate(`/hc/tickets`)}>\r\n            <Trans message=\"Requests\" />\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem>\r\n            <Trans message=\"New request\" />\r\n          </BreadcrumbItem>\r\n        </Breadcrumb>\r\n        <div className=\"flex items-stretch gap-44\">\r\n          <main className=\"flex-auto\">\r\n            <h1 className=\"mb-34 mt-14 text-3xl font-light\">\r\n              <Trans message={config!.title} />\r\n            </h1>\r\n            {query.error && envato.enable && envato.require_purchase_code && (\r\n              <EnvatoError />\r\n            )}\r\n            {query.data && queryRequestType.data ? (\r\n              <TicketForm\r\n                ticketCategories={query.data.pagination.data}\r\n                ticketRequestTypes={queryRequestType.data.pagination.data}\r\n              />\r\n            ) : null}\r\n          </main>\r\n          <Sidebar />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface TicketFormProps {\r\n  ticketCategories: TicketTag[];\r\n  ticketRequestTypes: TicketRequestType[];\r\n}\r\nfunction TicketForm({ticketCategories, ticketRequestTypes}: TicketFormProps) {\r\n  console.log('ticketCategories', ticketCategories);\r\n  const config = useCustomerNewTicketConfig();\r\n  const navigate = useNavigate();\r\n  const form = useForm<CreateTicketPayload>({\r\n    defaultValues: {\r\n      category_id: ticketCategories[0]?.id,\r\n      ticket_request_type: ticketRequestTypes[0]?.id,\r\n    },\r\n  });\r\n  const bodyError = form.formState.errors.body?.message;\r\n  const createTicket = useCreateTicket(form);\r\n  const editorRef = useRef<Editor | null>(null);\r\n  const [attachments, setAttachments] = useState<FileEntry[]>([]);\r\n  const searchQuery = form.watch('subject');\r\n  const hcCategoryIds = ticketCategories\r\n    .find(tc => form.watch('category_id') == tc.id)\r\n    ?.categories.map(hc => hc.id);\r\n  const searchTermLogger = useSearchTermLogger();\r\n  const suggestionLog = useRef<SearchSessionItem[]>([]);\r\n\r\n  const selectedCategoryId = form.watch('category_id');\r\n  const selectedCategory = ticketCategories.find(\r\n    c => c.id == selectedCategoryId,\r\n  );\r\n  const types : TicketRequestTypeTag[] = selectedCategory?.ticket_request_type;\r\n  \r\n\r\n  const handleSubmit = () => {\r\n    console.log('form.getValues()', form.getValues());\r\n    createTicket.mutate(\r\n      {\r\n        ...form.getValues(),\r\n        body: getReplyBody(editorRef) || '',\r\n        attachments: attachments.map(a => a.id),\r\n        suggestionLog: suggestionLog.current,\r\n      },\r\n      {\r\n        onSuccess: () => {\r\n          searchTermLogger.updateLastSearch({createdTicket: true});\r\n          navigate('/hc/tickets');\r\n        },\r\n      },\r\n    );\r\n  };\r\n\r\n  const inputFieldClassNames = getInputFieldClassNames();\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      onSubmit={() => handleSubmit()}\r\n      onBeforeSubmit={() => form.clearErrors()}\r\n    >\r\n      <FormSelect\r\n        name=\"category_id\"\r\n        label={<Trans message={config!.categoryLabel} />}\r\n        selectionMode=\"single\"\r\n        className=\"mb-24\"\r\n        errorMessage={\r\n          selectedCategory &&\r\n          selectedCategory.support_expired && (\r\n            <Trans\r\n              message=\"Your support for this item has expired. <a>Click here to renew</a>\"\r\n              values={{\r\n                a: content => (\r\n                  <a\r\n                    href=\"https://codecanyon.net/downloads\"\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                    className=\"font-bold underline\"\r\n                  >\r\n                    {content}\r\n                  </a>\r\n                ),\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      >\r\n        {ticketCategories.map(category => (\r\n          <Item key={category.id} value={category.id}>\r\n            {category.display_name || category.name}\r\n          </Item>\r\n        ))}\r\n      </FormSelect>\r\n      {\r\n        types?.length > 0 && \r\n        <FormSelect\r\n          name=\"ticket_request_type\"\r\n          label={<Trans message=\"Request Type\" />}\r\n          selectionMode=\"single\"\r\n          className=\"mb-24\"\r\n        >\r\n          {types.map((request_type) => (\r\n            <Item key={request_type.id} value={request_type.id}>\r\n              {request_type.display_name || request_type.name}\r\n            </Item>\r\n          ))}\r\n        </FormSelect>\r\n      }\r\n      <FormTextField\r\n        name=\"subject\"\r\n        label={<Trans message={config!.subjectLabel} />}\r\n      />\r\n      <SuggestedArticlesDrawer\r\n        query={searchQuery}\r\n        suggestionLog={suggestionLog}\r\n        hcCategoryIds={hcCategoryIds}\r\n      />\r\n      <div className=\"my-24\">\r\n        <div className={inputFieldClassNames.label}>\r\n          <Trans message={config!.descriptionLabel} />\r\n        </div>\r\n          \r\n        {selectedCategory?.description_ticket_page && (\r\n          <div className={`[&_a]:underline ${inputFieldClassNames.label}`}>\r\n            <div dangerouslySetInnerHTML={{ __html: selectedCategory.description_ticket_page }} />\r\n          </div>\r\n        )}\r\n        <FileUploadProvider>\r\n          <ReplyEditor\r\n            autoFocus={false}\r\n            minHeight=\"min-h-[300px]\"\r\n            isLoading={createTicket.isPending}\r\n            editorRef={editorRef}\r\n            attachments={attachments}\r\n            onAttachmentsChange={attachments => setAttachments(attachments)}\r\n            onSubmit={() => handleSubmit()}\r\n          />\r\n        </FileUploadProvider>\r\n        {bodyError && (\r\n          <div className={inputFieldClassNames.error}>{bodyError}</div>\r\n        )}\r\n      </div>\r\n      <Button\r\n        variant=\"flat\"\r\n        color=\"primary\"\r\n        type=\"submit\"\r\n        disabled={createTicket.isPending}\r\n      >\r\n        <Trans message={config!.submitButtonText} />\r\n      </Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nfunction Sidebar() {\r\n  const config = useCustomerNewTicketConfig();\r\n  return (\r\n    <aside className=\"w-500 border-l px-40 max-md:hidden\">\r\n      <h2 className=\"mb-34 text-xl font-medium\">\r\n        <Trans message={config.sidebarTitle} />\r\n      </h2>\r\n      {config.sidebarTips?.map((tip, index) => (\r\n        <SidebarTip key={index} title={<Trans message={tip.title} />}>\r\n          <Trans message={tip.content} />\r\n        </SidebarTip>\r\n      ))}\r\n    </aside>\r\n  );\r\n}\r\n\r\ninterface SidebarTipProps {\r\n  title: ReactNode;\r\n  children: ReactNode;\r\n}\r\nfunction SidebarTip({title, children}: SidebarTipProps) {\r\n  return (\r\n    <div className=\"mb-30\">\r\n      <h3 className=\"text-lg font-medium\">{title}</h3>\r\n      <p>{children}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction EnvatoError() {\r\n  return (\r\n    <div className=\"text-sm text-danger\">\r\n      <Trans message=\"There was an issue fetching your purchase codes from envato. Try to logout and use 'login with envato' button.\" />\r\n    </div>\r\n  );\r\n}\r\n","import {RouteObject, useRoutes} from 'react-router-dom';\nimport {NotFoundPage} from '@common/ui/not-found-page/not-found-page';\nimport React from 'react';\nimport {CustomerTicketListPage} from '@app/help-center/tickets/customer-ticket-list-page/customer-ticket-list-page';\nimport {CustomerTicketPage} from '@app/help-center/tickets/customer-ticket-page';\nimport {CustomerNewTicketPage} from '@app/help-center/tickets/customer-new-ticket-page/customer-new-ticket-page';\n\nconst RouteConfig: RouteObject[] = [\n  {\n    path: '/',\n    element: <CustomerTicketListPage />,\n  },\n  {\n    path: '/new',\n    element: <CustomerNewTicketPage />,\n  },\n  {\n    path: ':ticketId',\n    element: <CustomerTicketPage />,\n  },\n  {\n    path: '*',\n    element: <NotFoundPage />,\n  },\n];\n\nexport default function HcTicketRoutes() {\n  return useRoutes(RouteConfig);\n}\n"],"names":["submitReply","attachments","TicketTypeRequest"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBO,SAAS,yBAAyB;AACjC,QAAA,EAAC,aAAY;AACnB,SAAO,YAAY;AAAA,IACjB,YAAY,CAAC,YACX,YAAY;AAAA,MACV;AAAA,MACA,GAAG;AAAA,IAAA,CACJ;AAAA,IACH,WAAW,YAAY;AACrB,YAAM,YAAY,kBAAkB,EAAC,UAAU,CAAC,SAAS,GAAE;AACrD,YAAA,QAAQ,iBAAiB,CAAC;AAAA,IAClC;AAAA,IACA,SAAS,CAAO,QAAA,mBAAmB,GAAG;AAAA,EAAA,CACvC;AACH;AAEA,SAAS,YAAY,MAA6C;;AAChE,QAAM,UAAU;AAAA,IACd,MAAM,KAAK;AAAA,IACX,cAAa,UAAK,gBAAL,mBAAkB,IAAI,CAAA,MAAK,EAAE;AAAA,EAAE;AAEvC,SAAA,UACJ,KAA0B,WAAW,KAAK,QAAQ,YAAY,OAAO,EACrE,KAAK,CAAK,MAAA,EAAE,IAAI;AACrB;AC/BO,SAAS,QAAQ,IAAuB;AAC7C,SAAO,SAAS;AAAA,IACd,UAAU,CAAC,YAAY,EAAE;AAAA,IACzB,SAAS,MAAM,UAAU,EAAE;AAAA,EAAA,CAC5B;AACH;AAEA,SAAS,UAAU,IAAuB;AACjC,SAAA,UACJ,IAAc,SAAS,EAAE,EAAE,EAC3B,KAAK,CAAY,aAAA,SAAS,IAAI;AACnC;ACuBA,MAAM,yBAAqD;AAAA,EACzD,OAAO;AAAA,EACP,KAAK;AACP;AAEO,SAAS,qBAAqB;AACnC,QAAM,WAAW;AACjB,8BACG,OACC,EAAA,UAAA;AAAA,IAAA,oBAAC,QAAO,EAAA,cAAa,UACnB,UAAA,oBAAC,cAAY,CAAA,GACf;AAAA,IACA,qBAAC,OAAI,EAAA,WAAU,0CACb,UAAA;AAAA,MAAA,qBAAC,YAAW,EAAA,MAAK,MAAK,WAAU,wBAC9B,UAAA;AAAA,QAAC,oBAAA,gBAAA,EAAe,YAAY,MAAM,SAAS,KAAK,GAC9C,UAAC,oBAAA,OAAA,EAAM,SAAQ,cAAA,CAAc,EAC/B,CAAA;AAAA,QACA,oBAAC,gBAAe,EAAA,YAAY,MAAM,SAAS,aAAa,GACtD,UAAC,oBAAA,OAAA,EAAM,SAAQ,WAAA,CAAW,EAC5B,CAAA;AAAA,4BACC,gBACC,EAAA,UAAA,oBAAC,OAAM,EAAA,SAAQ,iBAAiB,CAAA,GAClC;AAAA,MAAA,GACF;AAAA,MACC,oBAAA,QAAA,EACC,UAAC,oBAAA,SAAA,CAAQ,CAAA,GACX;AAAA,IAAA,GACF;AAAA,EACF,EAAA,CAAA;AAEJ;AAEA,SAAS,UAAU;AACjB,QAAM,QAAQ;AACd,QAAM,CAAC,cAAc,eAAe,IAAI,SAAS,KAAK;AACtD,aAAW,UAAU,KAAK,MAAM,gBAAgB,IAAI,CAAC;AAErD,SACG,oBAAA,UAAA,EACE,UAAM,MAAA,4BACJ,UACE,EAAA,UAAA;AAAA,IAAM,MAAA,KAAK,OAAO,WAAW,YAC5B;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,WAAU;AAAA,QACV,OAAM;AAAA,QACN,OACE,oBAAC,OAAM,EAAA,SAAQ,2EAA2E,CAAA;AAAA,MAAA;AAAA,IAE9F;AAAA,IAEF;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,QAAQ,MAAM,KAAK;AAAA,QACnB;AAAA,QACA,cAAc,MAAM,gBAAgB,IAAI;AAAA,MAAA;AAAA,IAC1C;AAAA,IACA,oBAAC,oBACE,EAAA,UAAA,gBACE,oBAAA,qBAAA,EAAoB,SAAS,MAAM,gBAAgB,KAAK,EAAA,CAAG,EAEhE,CAAA;AAAA,IACC,oBAAA,WAAA,EAAU,MAAM,MAAM,KAAM,CAAA;AAAA,EAAA,GAC/B,IAEC,oBAAA,YAAA,EAAW,OAAc,iBAAgB,2BAA0B,EAExE,CAAA;AAEJ;AAKA,SAAS,oBAAoB,EAAC,WAAoC;AAC1D,QAAA,YAAY,OAAsB,IAAI;AAC5C,QAAMA,eAAc;AACpB,QAAM,CAAC,aAAa,cAAc,IAAI,SAAsB,CAAE,CAAA;AAG5D,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,WAAWA,aAAY;AAAA,MACvB,mCAAgB,iBAAgB,EAAA;AAAA,MAChC;AAAA,MACA,WAAU;AAAA,MACV;AAAA,MACA,qBAAqB,CAAAC,iBAAe,eAAeA,YAAW;AAAA,MAC9D,UAAU,CAAA,UACRD,aAAY,OAAO,OAAO;AAAA,QACxB,WAAW,MAAM,QAAQ;AAAA,MAAA,CAC1B;AAAA,IAAA;AAAA,EAAA;AAIT;AAOA,SAAS,OAAO,EAAC,QAAQ,cAAc,gBAA4B;;AAC3D,QAAA,EAAC,SAAY,IAAA;AACnB,QAAM,SAAS,qCAAU;AACnB,QAAA,eAAe,QAAQ,MAAM;AAEjC,SAAA,qBAAC,OAAI,EAAA,WAAU,SACb,UAAA;AAAA,IAAC,qBAAA,OAAA,EAAI,WAAU,4BACb,UAAA;AAAA,MAAC,qBAAA,OAAA,EAAI,WAAU,8CACb,UAAA;AAAA,QAAC,oBAAA,uBAAA,EAAsB,MAAM,OAAO,WAAY,CAAA;AAAA,QAAE;AAAA,QAClD;AAAA,UAAC;AAAA,UAAA;AAAA,YACC,MAAM,OAAO;AAAA,YACb,SAAS;AAAA,UAAA;AAAA,QACX;AAAA,QAAE;AAAA,MAAA,GAEJ;AAAA,MACA,qBAAC,OAAI,EAAA,WAAU,uBAAsB,UAAA;AAAA,QAAA;AAAA,QAAE,OAAO;AAAA,MAAA,GAAG;AAAA,MACjD;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,MAAK;AAAA,UACL,OAAO,CAAC,OAAO,YAAY,YAAY;AAAA,UACvC,QAAO;AAAA,UACP,WAAU;AAAA,UAET,UAAO,OAAA;AAAA,QAAA;AAAA,MACV;AAAA,IAAA,GACF;AAAA,IACA,qBAAC,OAAI,EAAA,WAAU,2BACb,UAAA;AAAA,MAAA,oBAAC,MAAG,EAAA,WAAU,kBAAkB,UAAA,OAAO,SAAQ;AAAA,MAC9C,oBAAAE,sBAAA,EAAkB,mBAAmB,OAAO,oBAAqB,CAAA;AAAA,IAAA,GACpE;AAAA,IACA,qBAAC,OAAI,EAAA,WAAU,4BACb,UAAA;AAAA,MAAA,oBAAC,SAAI,WAAU,+DAQZ,UAAU,UAAA,qCACR,OACC,EAAA,UAAA;AAAA,QAAC,oBAAA,QAAA,EAAK,WAAU,cAAa,UAAY,gBAAA;AAAA,QAAO;AAAA,4BAAE,QAAK,EAAA,WAAU,eAAe,WAAc,wDAAA,SAAA,mBAAM,SAAN,mBAAY,cAAa;AAAA,MAAA,EAAA,CACzH,EAEJ,CAAA;AAAA,MACC,CAAC,OAAO,aAAa,oBAAC,oBAAmB,CAAA,CAAA;AAAA,MAC1C;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,MAAK;AAAA,UACL,SAAQ;AAAA,UACR,+BAAY,WAAU,EAAA;AAAA,UACtB,UAAU;AAAA,UACV,SAAS,MAAM,aAAa;AAAA,UAE5B,UAAA,oBAAC,OAAM,EAAA,SAAQ,cAAc,CAAA;AAAA,QAAA;AAAA,MAC/B;AAAA,IAAA,GACF;AAAA,EACF,EAAA,CAAA;AAEJ;AAKA,SAAS,UAAU,EAAC,MAAM,EAAC,QAAQ,aAA2B;AAC5D,QAAM,QAAQ,iBAAiB,OAAO,IAAI,OAAO;AACjD,8BACG,UACE,EAAA,UAAA;AAAA,IAAM,MAAA,MAAM,IAAI,CAAS,UAAA;;AAClB,YAAA,YACJ,CAAC,MAAM,eAAe,MAAM,SAAO,WAAM,MAAM,GAAG,EAAE,MAAjB,mBAAoB;AAEvD,aAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,WAAU;AAAA,UAEV;AAAA,UACA;AAAA,UACA,mBAAmB,OAAO;AAAA,UAC1B,eACE,WAAM,gBAAN,mBAAmB,8BAChB,gBAAe,EAAA,aAAa,MAAM,YAAA,CAAa,IAC9C;AAAA,QAAA;AAAA,QAPD,MAAM;AAAA,MAAA;AAAA,IASb,CAEH;AAAA,IACD,oBAAC,0BAAuB,OAAc;AAAA,EACxC,EAAA,CAAA;AAEJ;AAKA,SAAS,eAAe,EAAC,eAAmC;AAExD,SAAA,oBAAC,wBAAqB,WAAU,eAC7B,sBAAY,IAAI,CAAC,YAAY,UAC5B;AAAA,IAAC;AAAA,IAAA;AAAA,MAEC;AAAA,MACA;AAAA,IAAA;AAAA,IAFK,WAAW;AAAA,EAInB,CAAA,EACH,CAAA;AAEJ;AAEA,SAAS,qBAAqB;AAC5B,QAAM,eAAe;AACf,QAAA,EAAC,aAAY;AACnB,QAAM,WAAW;AAEf,SAAA,qBAAC,eAAc,EAAA,MAAK,SAClB,UAAA;AAAA,IAAA,oBAAC,QAAO,EAAA,MAAK,MAAK,SAAQ,WAAU,WAAY,oBAAA,WAAA,EAAU,GACxD,UAAA,oBAAC,OAAM,EAAA,SAAQ,iBAAiB,CAAA,GAClC;AAAA,IACC,CAAC,EAAC,MAAA,MACD;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,WAAW,MAAM;AACF,uBAAA;AAAA,YACX;AAAA,cACE,KAAK,CAAC,QAAS;AAAA,cACf,QAAQ;AAAA,YACV;AAAA,YACA;AAAA,cACE,WAAW,MAAM;AACT;AACA,sBAAA,QAAQ,yBAAyB,CAAC;AACxC,yBAAS,aAAa;AAAA,cACxB;AAAA,YACF;AAAA,UAAA;AAAA,QAEJ;AAAA,QACA,WAAW,aAAa;AAAA,QACxB,OAAO,oBAAC,OAAM,EAAA,SAAQ,iBAAiB,CAAA;AAAA,QACvC,MACE,oBAAC,OAAM,EAAA,SAAQ,uDAAuD,CAAA;AAAA,QAExE,SAAS,oBAAC,OAAM,EAAA,SAAQ,UAAU,CAAA;AAAA,MAAA;AAAA,IACpC;AAAA,EAEJ,EAAA,CAAA;AAEJ;ACvRO,SAAS,8BAA8B;AAC5C,SAAO,SAAS;AAAA,IACd,UAAU,CAAC,uBAAuB;AAAA,IAClC,SAAS,MAAM,gBAAgB;AAAA,EAAA,CAChC;AACH;AAEA,SAAS,kBAAkB;AAClB,SAAA,UACJ,IAAc,qBAAqB;AAAA,IAClC,QAAQ;AAAA,MACN,SAAS;AAAA,MACT,MAAM;AAAA,MACN,SAAS;AAAA,MACT,UAAU;AAAA,MACV,mBAAmB;AAAA,MACnB,UAAU;AAAA,IACZ;AAAA,EACD,CAAA,EACA,KAAK,CAAA,aAAY,SAAS,IAAI;AACnC;ACxBO,SAAS,6BAA6B;;AAC3C,QAAM,WAAW;AACjB,WAAQ,oBAAS,OAAT,mBAAa,cAAb,mBAAwB,eAC9B,CAAA;AACJ;ACUO,SAAS,wBAAwB;AAAA,EACtC;AAAA,EACA;AAAA,EACA;AACF,GAAU;AACR,QAAM,MAAM;AACN,QAAA,eAAe,CAAC,MAA8B;AAC9C,QAAA,EAAE,WAAW,KAAK,QAAQ;AAC5B,oBAAc,QAAQ,KAAK;AAAA,QACzB,MAAM,EAAE;AAAA,QACR,SAAS,EAAE,WAAW,KAAK,IAAI,CAAA,MAAK,EAAE,EAAE;AAAA,QACxC,MAAM,IAAI,iBAAiB;AAAA,MAAA,CAC5B;AAAA,IACH;AAAA,EAAA;AAGI,QAAA,EAAC,SAAQ;AAAA,IACb;AAAA,IACA,EAAC,SAAS,GAAG,aAAa,cAAa;AAAA,IACvC,EAAC,UAAU,aAAY;AAAA,EAAA;AAEnB,QAAA,UAAU,6BAAM,WAAW;AAC3B,QAAA,YAAY,CAAC,EAAC,mCAAS;AAE7B,6BACG,iBACC,EAAA,UAAA;AAAA,IAAC,EAAE;AAAA,IAAF;AAAA,MAEC,UAAU,mBAAmB;AAAA,MAC7B,YAAY,mBAAmB;AAAA,MAC/B,SAAS;AAAA,MACT,SAAS,YAAY,SAAS;AAAA,MAE9B,UAAA;AAAA,QAAC,qBAAA,OAAA,EAAI,WAAU,qCACb,UAAA;AAAA,UAAC,oBAAA,OAAA,EAAM,SAAQ,uBAAuB,CAAA;AAAA,UAAE;AAAA,QAAA,GAC1C;AAAA,QACC,mCAAS,IAAI,CACZ,YAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YAEC;AAAA,YACA,WAAU;AAAA,YACV,QAAO;AAAA,UAAA;AAAA,UAHF,QAAQ;AAAA,QAAA;AAAA,MAKhB;AAAA,IAAA;AAAA,IAhBG;AAAA,EAkBR,EAAA,CAAA;AAEJ;AC7BO,SAAS,wBAAwB;AACtC,QAAM,WAAW;AACjB,QAAM,SAAS;AACf,QAAM,QAAQ;AAEd,QAAM,mBAAmB;AACnB,QAAA,EAAC,WAAU;AACjB,8BACG,OACC,EAAA,UAAA;AAAA,IAAA,oBAAC,QAAO,EAAA,cAAa,UACnB,UAAA,oBAAC,cAAY,CAAA,GACf;AAAA,IACA,qBAAC,OAAI,EAAA,WAAU,0CACb,UAAA;AAAA,MAAA,qBAAC,YAAW,EAAA,MAAK,MAAK,WAAU,wBAC9B,UAAA;AAAA,QAAC,oBAAA,gBAAA,EAAe,YAAY,MAAM,SAAS,KAAK,GAC9C,UAAC,oBAAA,OAAA,EAAM,SAAQ,cAAA,CAAc,EAC/B,CAAA;AAAA,QACA,oBAAC,gBAAe,EAAA,YAAY,MAAM,SAAS,aAAa,GACtD,UAAC,oBAAA,OAAA,EAAM,SAAQ,WAAA,CAAW,EAC5B,CAAA;AAAA,4BACC,gBACC,EAAA,UAAA,oBAAC,OAAM,EAAA,SAAQ,cAAc,CAAA,GAC/B;AAAA,MAAA,GACF;AAAA,MACA,qBAAC,OAAI,EAAA,WAAU,6BACb,UAAA;AAAA,QAAC,qBAAA,QAAA,EAAK,WAAU,aACd,UAAA;AAAA,UAAC,oBAAA,MAAA,EAAG,WAAU,mCACZ,UAAA,oBAAC,SAAM,SAAS,OAAQ,OAAO,EACjC,CAAA;AAAA,UACC,MAAM,SAAS,OAAO,UAAU,OAAO,6CACrC,aAAY,EAAA;AAAA,UAEd,MAAM,QAAQ,iBAAiB,OAC9B;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,kBAAkB,MAAM,KAAK,WAAW;AAAA,cACxC,oBAAoB,iBAAiB,KAAK,WAAW;AAAA,YAAA;AAAA,UAAA,IAErD;AAAA,QAAA,GACN;AAAA,4BACC,SAAQ,EAAA;AAAA,MAAA,GACX;AAAA,IAAA,GACF;AAAA,EACF,EAAA,CAAA;AAEJ;AAMA,SAAS,WAAW,EAAC,kBAAkB,sBAAsC;;AACnE,UAAA,IAAI,oBAAoB,gBAAgB;AAChD,QAAM,SAAS;AACf,QAAM,WAAW;AACjB,QAAM,OAAO,QAA6B;AAAA,IACxC,eAAe;AAAA,MACb,cAAa,sBAAiB,CAAC,MAAlB,mBAAqB;AAAA,MAClC,sBAAqB,wBAAmB,CAAC,MAApB,mBAAuB;AAAA,IAC9C;AAAA,EAAA,CACD;AACD,QAAM,aAAY,UAAK,UAAU,OAAO,SAAtB,mBAA4B;AACxC,QAAA,eAAe,gBAAgB,IAAI;AACnC,QAAA,YAAY,OAAsB,IAAI;AAC5C,QAAM,CAAC,aAAa,cAAc,IAAI,SAAsB,CAAE,CAAA;AACxD,QAAA,cAAc,KAAK,MAAM,SAAS;AACxC,QAAM,iBAAgB,sBACnB,KAAK,CAAA,OAAM,KAAK,MAAM,aAAa,KAAK,GAAG,EAAE,MAD1B,mBAElB,WAAW,IAAI,CAAA,OAAM,GAAG;AAC5B,QAAM,mBAAmB;AACnB,QAAA,gBAAgB,OAA4B,CAAA,CAAE;AAE9C,QAAA,qBAAqB,KAAK,MAAM,aAAa;AACnD,QAAM,mBAAmB,iBAAiB;AAAA,IACxC,CAAA,MAAK,EAAE,MAAM;AAAA,EAAA;AAEf,QAAM,QAAiC,qDAAkB;AAGzD,QAAM,eAAe,MAAM;AACzB,YAAQ,IAAI,oBAAoB,KAAK,UAAW,CAAA;AACnC,iBAAA;AAAA,MACX;AAAA,QACE,GAAG,KAAK,UAAU;AAAA,QAClB,MAAM,aAAa,SAAS,KAAK;AAAA,QACjC,aAAa,YAAY,IAAI,CAAA,MAAK,EAAE,EAAE;AAAA,QACtC,eAAe,cAAc;AAAA,MAC/B;AAAA,MACA;AAAA,QACE,WAAW,MAAM;AACf,2BAAiB,iBAAiB,EAAC,eAAe,KAAK,CAAA;AACvD,mBAAS,aAAa;AAAA,QACxB;AAAA,MACF;AAAA,IAAA;AAAA,EACF;AAGF,QAAM,uBAAuB;AAG3B,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC;AAAA,MACA,UAAU,MAAM,aAAa;AAAA,MAC7B,gBAAgB,MAAM,KAAK,YAAY;AAAA,MAEvC,UAAA;AAAA,QAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACC,MAAK;AAAA,YACL,OAAO,oBAAC,OAAM,EAAA,SAAS,OAAQ,eAAe;AAAA,YAC9C,eAAc;AAAA,YACd,WAAU;AAAA,YACV,cACE,oBACA,iBAAiB,mBACf;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,SAAQ;AAAA,gBACR,QAAQ;AAAA,kBACN,GAAG,CACD,YAAA;AAAA,oBAAC;AAAA,oBAAA;AAAA,sBACC,MAAK;AAAA,sBACL,QAAO;AAAA,sBACP,KAAI;AAAA,sBACJ,WAAU;AAAA,sBAET,UAAA;AAAA,oBAAA;AAAA,kBACH;AAAA,gBAEJ;AAAA,cAAA;AAAA,YACF;AAAA,YAIH,UAAiB,iBAAA,IAAI,CACpB,aAAA,oBAAC,QAAuB,OAAO,SAAS,IACrC,UAAA,SAAS,gBAAgB,SAAS,QAD1B,SAAS,EAEpB,CACD;AAAA,UAAA;AAAA,QACH;AAAA,SAEE,+BAAO,UAAS,KAChB;AAAA,UAAC;AAAA,UAAA;AAAA,YACC,MAAK;AAAA,YACL,OAAO,oBAAC,OAAM,EAAA,SAAQ,eAAe,CAAA;AAAA,YACrC,eAAc;AAAA,YACd,WAAU;AAAA,YAET,UAAM,MAAA,IAAI,CAAC,qCACT,MAA2B,EAAA,OAAO,aAAa,IAC7C,uBAAa,gBAAgB,aAAa,QADlC,aAAa,EAExB,CACD;AAAA,UAAA;AAAA,QACH;AAAA,QAEF;AAAA,UAAC;AAAA,UAAA;AAAA,YACC,MAAK;AAAA,YACL,OAAO,oBAAC,OAAM,EAAA,SAAS,OAAQ,cAAc;AAAA,UAAA;AAAA,QAC/C;AAAA,QACA;AAAA,UAAC;AAAA,UAAA;AAAA,YACC,OAAO;AAAA,YACP;AAAA,YACA;AAAA,UAAA;AAAA,QACF;AAAA,QACA,qBAAC,OAAI,EAAA,WAAU,SACb,UAAA;AAAA,UAAC,oBAAA,OAAA,EAAI,WAAW,qBAAqB,OACnC,8BAAC,OAAM,EAAA,SAAS,OAAQ,iBAAA,CAAkB,EAC5C,CAAA;AAAA,WAEC,qDAAkB,4BACjB,oBAAC,OAAI,EAAA,WAAW,mBAAmB,qBAAqB,KAAK,IAC3D,UAAA,oBAAC,SAAI,yBAAyB,EAAE,QAAQ,iBAAiB,0BAA2B,CAAA,GACtF;AAAA,8BAED,oBACC,EAAA,UAAA;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,WAAW;AAAA,cACX,WAAU;AAAA,cACV,WAAW,aAAa;AAAA,cACxB;AAAA,cACA;AAAA,cACA,qBAAqB,CAAAD,iBAAe,eAAeA,YAAW;AAAA,cAC9D,UAAU,MAAM,aAAa;AAAA,YAAA;AAAA,UAAA,GAEjC;AAAA,UACC,aACE,oBAAA,OAAA,EAAI,WAAW,qBAAqB,OAAQ,UAAU,WAAA;AAAA,QAAA,GAE3D;AAAA,QACA;AAAA,UAAC;AAAA,UAAA;AAAA,YACC,SAAQ;AAAA,YACR,OAAM;AAAA,YACN,MAAK;AAAA,YACL,UAAU,aAAa;AAAA,YAEvB,UAAC,oBAAA,OAAA,EAAM,SAAS,OAAQ,kBAAkB;AAAA,UAAA;AAAA,QAC5C;AAAA,MAAA;AAAA,IAAA;AAAA,EAAA;AAGN;AAEA,SAAS,UAAU;;AACjB,QAAM,SAAS;AAEb,SAAA,qBAAC,SAAM,EAAA,WAAU,sCACf,UAAA;AAAA,IAAC,oBAAA,MAAA,EAAG,WAAU,6BACZ,UAAA,oBAAC,SAAM,SAAS,OAAO,cAAc,EACvC,CAAA;AAAA,KACC,YAAO,gBAAP,mBAAoB,IAAI,CAAC,KAAK,UAC7B,oBAAC,YAAuB,EAAA,OAAQ,oBAAA,OAAA,EAAM,SAAS,IAAI,MAAO,CAAA,GACxD,UAAC,oBAAA,OAAA,EAAM,SAAS,IAAI,QAAA,CAAS,EADd,GAAA,KAEjB;AAAA,EAEJ,EAAA,CAAA;AAEJ;AAMA,SAAS,WAAW,EAAC,OAAO,YAA4B;AAEpD,SAAA,qBAAC,OAAI,EAAA,WAAU,SACb,UAAA;AAAA,IAAC,oBAAA,MAAA,EAAG,WAAU,uBAAuB,UAAM,OAAA;AAAA,IAC3C,oBAAC,OAAG,UAAS;AAAA,EACf,EAAA,CAAA;AAEJ;AAEA,SAAS,cAAc;AAEnB,SAAA,oBAAC,SAAI,WAAU,uBACb,8BAAC,OAAM,EAAA,SAAQ,iHAAiH,CAAA,EAClI,CAAA;AAEJ;ACpQA,MAAM,cAA6B;AAAA,EACjC;AAAA,IACE,MAAM;AAAA,IACN,6BAAU,wBAAuB,EAAA;AAAA,EACnC;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,6BAAU,uBAAsB,EAAA;AAAA,EAClC;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,6BAAU,oBAAmB,EAAA;AAAA,EAC/B;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,6BAAU,cAAa,EAAA;AAAA,EACzB;AACF;AAEA,SAAwB,iBAAiB;AACvC,SAAO,UAAU,WAAW;AAC9B;"}