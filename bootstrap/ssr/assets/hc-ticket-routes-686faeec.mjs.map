{"version":3,"file":"hc-ticket-routes-686faeec.mjs","sources":["../../../resources/client/help-center/tickets/customer-ticket-list-page/customer-ticket-table-columns.tsx","../../../resources/client/help-center/tickets/customer-ticket-list-page/customer-ticket-list-page.tsx","../../../resources/client/help-center/tickets/use-submit-customer-reply.ts","../../../resources/client/help-center/tickets/customer-ticket-page.tsx","../../../resources/client/help-center/tickets/customer-new-ticket-page/use-customer-ticket-categories.ts","../../../resources/client/help-center/tickets/customer-new-ticket-page/use-customer-new-ticket-config.ts","../../../resources/client/help-center/tickets/customer-new-ticket-page/suggested-articles-drawer.tsx","../../../resources/client/help-center/tickets/customer-new-ticket-page/customer-new-ticket-page.tsx","../../../resources/client/help-center/tickets/hc-ticket-routes.tsx"],"sourcesContent":["import {ColumnConfig} from '@common/datatable/column-config';\nimport {Ticket} from '@app/agent/ticket';\nimport {Trans} from '@common/i18n/trans';\nimport {FormattedRelativeTime} from '@common/i18n/formatted-relative-time';\nimport {Chip} from '@common/ui/forms/input-field/chip-field/chip';\nimport React from 'react';\n\nexport const CustomerTicketTableColumns: ColumnConfig<Ticket>[] = [\n  {\n    key: 'subject',\n    visibleInMode: 'all',\n    header: () => <Trans message=\"Subject\" />,\n    body: ticket => ticket.subject,\n    width: 'flex-3 min-w-200',\n  },\n  {\n    key: 'id',\n    allowsSorting: true,\n    header: () => <Trans message=\"Id\" />,\n    width: 'w-90',\n    body: ticket => `#${ticket.id}`,\n  },\n  {\n    key: 'Created',\n    allowsSorting: true,\n    header: () => <Trans message=\"Created\" />,\n    width: 'w-144',\n    body: ticket => <FormattedRelativeTime date={ticket.created_at} />,\n  },\n  {\n    key: 'updated_at',\n    allowsSorting: true,\n    header: () => <Trans message=\"Last updated\" />,\n    width: 'w-144',\n    body: ticket => <FormattedRelativeTime date={ticket.updated_at} />,\n  },\n  {\n    key: 'status',\n    header: () => <Trans message=\"Status\" />,\n    visibleInMode: 'all',\n    width: 'w-80',\n    body: ticket => (\n      <div className=\"w-max\">\n        <Chip\n          size=\"sm\"\n          color={!ticket.closed_at ? 'primary' : undefined}\n          radius=\"rounded-md\"\n          className=\"font-medium capitalize\"\n        >\n          <Trans message={ticket.status} />\n        </Chip>\n      </div>\n    ),\n  },\n];\n","import {HcSearchBar} from '@app/help-center/search/hc-search-bar';\nimport React, {Fragment, useRef} from 'react';\nimport {Navbar} from '@common/ui/navigation/navbar/navbar';\nimport {Trans} from '@common/i18n/trans';\nimport {useTickets} from '@app/agent/agent-ticket-page/user-details-sidebar/requests/use-tickets';\nimport {useAuth} from '@common/auth/use-auth';\nimport {Table} from '@common/ui/tables/table';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {TextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {message} from '@common/i18n/message';\nimport {SearchIcon} from '@common/icons/material/Search';\nimport {Link, useSearchParams} from 'react-router-dom';\nimport {Select} from '@common/ui/forms/select/select';\nimport {Item} from '@common/ui/forms/listbox/item';\nimport {DataTableEmptyStateMessage} from '@common/datatable/page/data-table-emty-state-message';\nimport searchImage from '@app/agent/agent-search-page/search.svg';\nimport {Skeleton} from '@common/ui/skeleton/skeleton';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\nimport {DataTablePaginationFooter} from '@common/datatable/data-table-pagination-footer';\nimport {Button} from '@common/ui/buttons/button';\nimport {CustomerTicketTableColumns} from '@app/help-center/tickets/customer-ticket-list-page/customer-ticket-table-columns';\nimport {BreadcrumbItem} from '@common/ui/breadcrumbs/breadcrumb-item';\nimport {Breadcrumb} from '@common/ui/breadcrumbs/breadcrumb';\n\nconst defaultPage = '1';\nconst defaultPerPage = '20';\n\nexport function CustomerTicketListPage() {\n  const navigate = useNavigate();\n  return (\n    <div>\n      <Navbar menuPosition=\"header\">\n        <HcSearchBar />\n      </Navbar>\n      <main className=\"container mx-auto px-24 pb-48\">\n        <Breadcrumb size=\"sm\" className=\"mb-48 mt-34\">\n          <BreadcrumbItem onSelected={() => navigate(`/hc`)}>\n            <Trans message=\"Help center\" />\n          </BreadcrumbItem>\n          <BreadcrumbItem onSelected={() => navigate(`/hc/tickets`)}>\n            <Trans message=\"Requests\" />\n          </BreadcrumbItem>\n        </Breadcrumb>\n        <div className=\"mb-34 flex items-start justify-between gap-12\">\n          <h1 className=\"text-3xl font-semibold\">\n            <Trans message=\"My requests\" />\n          </h1>\n          <Button\n            elementType={Link}\n            to=\"/hc/tickets/new\"\n            size=\"sm\"\n            variant=\"outline\"\n          >\n            <Trans message=\"New request\" />\n          </Button>\n        </div>\n        <TicketTable />\n      </main>\n    </div>\n  );\n}\n\nfunction TicketTable() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const {trans} = useTrans();\n  const inputRef = useRef<HTMLInputElement>(null);\n  const navigate = useNavigate();\n  const {user} = useAuth();\n  const query = useTickets({\n    userId: user!.id,\n    query: searchParams.get('query'),\n    tagId: searchParams.get('tagId'),\n    page: searchParams.get('page') || defaultPage,\n    perPage: searchParams.get('perPage') || defaultPerPage,\n  });\n  const data = query.data?.pagination?.data || [];\n  const isFiltering =\n    !!searchParams.get('query') || !!searchParams.get('tagId');\n\n  const setSearchQuery = () => {\n    setSearchParams(prev => {\n      if (inputRef.current?.value) {\n        prev.set('query', inputRef.current.value);\n      } else {\n        prev.delete('query');\n      }\n      return prev;\n    });\n  };\n\n  const content = !data.length ? (\n    <StateMessage isFiltering={isFiltering} />\n  ) : (\n    <Fragment>\n      <Table\n        columns={CustomerTicketTableColumns}\n        data={data}\n        enableSelection={false}\n        onAction={item => navigate(`/hc/tickets/${item.id}`)}\n        cellHeight=\"h-60\"\n      />\n      <DataTablePaginationFooter\n        className=\"mt-12\"\n        query={query}\n        onPageChange={page =>\n          setSearchParams(prev => {\n            prev.set('page', page.toString());\n            return prev;\n          })\n        }\n      />\n    </Fragment>\n  );\n\n  return (\n    <Fragment>\n      <form\n        className=\"mb-34 items-end justify-between gap-24 md:flex\"\n        onSubmit={e => {\n          e.preventDefault();\n          setSearchQuery();\n        }}\n      >\n        <TextField\n          className=\"flex-auto max-md:mb-24\"\n          inputRef={inputRef}\n          defaultValue={searchParams.get('query') || ''}\n          onBlur={() => setSearchQuery()}\n          placeholder={trans(message('Search requests'))}\n          startAdornment={<SearchIcon />}\n        />\n        <StatusSelect />\n      </form>\n      <AnimatePresence initial={false} mode=\"wait\">\n        {query.isLoading ? <Skeletons /> : content}\n      </AnimatePresence>\n    </Fragment>\n  );\n}\n\ninterface StateMessageProps {\n  isFiltering: boolean;\n}\nfunction StateMessage({isFiltering}: StateMessageProps) {\n  return (\n    <DataTableEmptyStateMessage\n      isFiltering={isFiltering}\n      size=\"sm\"\n      className=\"mt-48\"\n      image={searchImage}\n      title={<Trans message=\"You have not created any requests yet\" />}\n      filteringTitle={\n        <Trans message=\"No requests match your search query or filters\" />\n      }\n    />\n  );\n}\n\nfunction StatusSelect() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  return (\n    <Select\n      className=\"flex-shrink-0 md:min-w-172\"\n      selectionMode=\"single\"\n      selectedValue={searchParams.get('tagId') || ''}\n      onSelectionChange={newValue => {\n        setSearchParams(prev => {\n          if (newValue) {\n            prev.set('tagId', `${newValue}`);\n          } else {\n            prev.delete('tagId');\n          }\n          return prev;\n        });\n      }}\n    >\n      <Item value=\"\">\n        <Trans message=\"All requests\" />\n      </Item>\n      <Item value=\"open\">\n        <Trans message=\"Open requests\" />\n      </Item>\n      <Item value=\"closed\">\n        <Trans message=\"Closed requests\" />\n      </Item>\n      <Item value=\"pending\">\n        <Trans message=\"Awaiting your reply\" />\n      </Item>\n    </Select>\n  );\n}\n\nfunction Skeletons() {\n  return (\n    <m.div key=\"skeletons\" {...opacityAnimation}>\n      <Skeleton size=\"h-36\" variant=\"rect\" className=\"mb-12\" />\n      <Skeleton size=\"h-54\" variant=\"rect\" className=\"mb-12\" />\n      <Skeleton size=\"h-54\" variant=\"rect\" />\n    </m.div>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {Reply} from '@app/agent/reply';\nimport {useParams} from 'react-router-dom';\nimport {FileEntry} from '@common/uploads/file-entry';\n\ninterface SubmitReplyResponse {\n  reply: Reply;\n}\n\ninterface Payload {\n  body: string | null;\n  attachments?: FileEntry[];\n}\n\nexport function useSubmitCustomerReply() {\n  const {ticketId} = useParams();\n  return useMutation({\n    mutationFn: (payload: Payload) =>\n      submitReply({\n        ticketId: ticketId!,\n        ...payload,\n      }),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({queryKey: ['tickets']});\n      toast(message('Reply submitted'));\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction submitReply(data: Payload & {ticketId: number | string}) {\n  const payload = {\n    body: data.body,\n    attachments: data.attachments?.map(a => a.id),\n  };\n  return apiClient\n    .post<SubmitReplyResponse>(`tickets/${data.ticketId}/replies`, payload)\n    .then(r => r.data);\n}\n","import {Navbar} from '@common/ui/navigation/navbar/navbar';\nimport {HcSearchBar} from '@app/help-center/search/hc-search-bar';\nimport React, {Fragment, useRef, useState} from 'react';\nimport {PageStatus} from '@common/http/page-status';\nimport {\n  GetTicketResponse,\n  useTicket,\n} from '@app/agent/agent-ticket-page/requests/use-ticket';\nimport {TicketHeaderDateFormat} from '@app/agent/ticket-layout/ticket-header-layout';\nimport {useTicketReplies} from '@app/agent/agent-ticket-page/reply-list/requests/use-ticket-replies';\nimport {TicketReplyLayout} from '@app/agent/ticket-layout/ticket-reply-layout';\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport {\n  AttachmentListLayout,\n  FileEntryAttachmentLayout,\n} from '@app/agent/ticket-layout/attachment-list-layout';\nimport {BreadcrumbItem} from '@common/ui/breadcrumbs/breadcrumb-item';\nimport {Trans} from '@common/i18n/trans';\nimport {Breadcrumb} from '@common/ui/breadcrumbs/breadcrumb';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {ReplyEditor} from '@app/reply-editor/reply-editor';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {useSubmitCustomerReply} from '@app/help-center/tickets/use-submit-customer-reply';\nimport {FormattedRelativeTime} from '@common/i18n/formatted-relative-time';\nimport {FormattedDate} from '@common/i18n/formatted-date';\nimport {Chip} from '@common/ui/forms/input-field/chip-field/chip';\nimport {Button} from '@common/ui/buttons/button';\nimport {ReplyIcon} from '@common/icons/material/Reply';\nimport {TicketTagList} from '@app/agent/ticket-layout/ticket-tag-list';\nimport {Ticket} from '@app/agent/ticket';\nimport {Editor} from '@tiptap/react';\nimport {SendReplyButton} from '@app/reply-editor/send-reply-button';\nimport {useKeybind} from '@common/utils/keybinds/use-keybind';\nimport {SectionHelper} from '@common/ui/section-helper';\nimport {CheckIcon} from '@common/icons/material/Check';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {ConfirmationDialog} from '@common/ui/overlays/dialog/confirmation-dialog';\nimport {useChangeTicketStatus} from '@app/agent/ticket-actions/requests/use-change-ticket-status';\nimport {useParams} from 'react-router-dom';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\n\nexport function CustomerTicketPage() {\n  const navigate = useNavigate();\n  return (\n    <div>\n      <Navbar menuPosition=\"header\">\n        <HcSearchBar />\n      </Navbar>\n      <div className=\"container mx-auto px-12 pb-48 md:px-24\">\n        <Breadcrumb size=\"sm\" className=\"mb-34 mt-34 md:mb-48\">\n          <BreadcrumbItem onSelected={() => navigate(`/hc`)}>\n            <Trans message=\"Help center\" />\n          </BreadcrumbItem>\n          <BreadcrumbItem onSelected={() => navigate(`/hc/tickets`)}>\n            <Trans message=\"Requests\" />\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Trans message=\"Current ticket\" />\n          </BreadcrumbItem>\n        </Breadcrumb>\n        <main>\n          <Content />\n        </main>\n      </div>\n    </div>\n  );\n}\n\nfunction Content() {\n  const query = useTicket();\n  const [editorIsOpen, setEditorIsOpen] = useState(false);\n  useKeybind('window', 'r', () => setEditorIsOpen(true));\n\n  return (\n    <Fragment>\n      {query.data ? (\n        <Fragment>\n          {query.data.ticket.status === 'locked' && (\n            <SectionHelper\n              className=\"mb-44 text-center\"\n              color=\"danger\"\n              title={\n                <Trans message=\"This ticket was locked due to inactivity. To reply, create a new ticket.\" />\n              }\n            />\n          )}\n          <Header\n            ticket={query.data.ticket}\n            editorIsOpen={editorIsOpen}\n            onOpenEditor={() => setEditorIsOpen(true)}\n          />\n          <FileUploadProvider>\n            {editorIsOpen && (\n              <CustomerReplyEditor onClose={() => setEditorIsOpen(false)} />\n            )}\n          </FileUploadProvider>\n          <ReplyList data={query.data} />\n        </Fragment>\n      ) : (\n        <PageStatus query={query} loaderClassName=\"absolute inset-0 m-auto\" />\n      )}\n    </Fragment>\n  );\n}\n\ninterface CustomerReplyEditorProps {\n  onClose: () => void;\n}\nfunction CustomerReplyEditor({onClose}: CustomerReplyEditorProps) {\n  const editorRef = useRef<Editor | null>(null);\n  const submitReply = useSubmitCustomerReply();\n  const [attachments, setAttachments] = useState<FileEntry[]>([]);\n\n  return (\n    <ReplyEditor\n      isLoading={submitReply.isPending}\n      footerButtons={<SendReplyButton />}\n      editorRef={editorRef}\n      className=\"mb-24\"\n      attachments={attachments}\n      onAttachmentsChange={attachments => setAttachments(attachments)}\n      onSubmit={reply =>\n        submitReply.mutate(reply, {\n          onSuccess: () => onClose(),\n        })\n      }\n    />\n  );\n}\n\ninterface HeaderProps {\n  ticket: Ticket;\n  editorIsOpen: boolean;\n  onOpenEditor: () => void;\n}\nfunction Header({ticket, onOpenEditor, editorIsOpen}: HeaderProps) {\n  return (\n    <div className=\"mb-44\">\n      <div className=\"flex items-center gap-24\">\n        <div className=\"whitespace-nowrap text-muted max-md:hidden\">\n          <FormattedRelativeTime date={ticket.created_at} /> (\n          <FormattedDate\n            date={ticket.created_at}\n            options={TicketHeaderDateFormat}\n          />\n          )\n        </div>\n        <div className=\"text-2xl md:ml-auto\">#{ticket.id}</div>\n        <Chip\n          size=\"sm\"\n          color={!ticket.closed_at ? 'primary' : undefined}\n          radius=\"rounded\"\n          className=\"min-w-60 font-bold capitalize\"\n        >\n          {ticket.status}\n        </Chip>\n      </div>\n      <h1 className=\"my-12 text-2xl\">{ticket.subject}</h1>\n      <div className=\"flex items-center gap-12\">\n        <TicketTagList\n          ticket={ticket}\n          tagType=\"category\"\n          size=\"sm\"\n          radius=\"rounded\"\n          className=\"mr-auto font-semibold max-md:hidden\"\n        />\n        {!ticket.closed_at && <MarkAsSolvedButton />}\n        <Button\n          size=\"sm\"\n          variant=\"outline\"\n          startIcon={<ReplyIcon />}\n          disabled={editorIsOpen}\n          onClick={() => onOpenEditor()}\n        >\n          <Trans message=\"Add a reply\" />\n        </Button>\n      </div>\n    </div>\n  );\n}\n\ninterface ReplyListProps {\n  data: GetTicketResponse;\n}\nfunction ReplyList({data: {ticket, replies}}: ReplyListProps) {\n  const query = useTicketReplies(ticket.id, replies);\n  return (\n    <Fragment>\n      {query.items.map(reply => {\n        const isInitial =\n          !query.hasNextPage && reply.id === query.items.at(-1)?.id;\n        return (\n          <TicketReplyLayout\n            className=\"px-12\"\n            key={reply.id}\n            reply={reply}\n            isInitial={isInitial}\n            attachments={\n              reply.attachments?.length ? (\n                <AttachmentList attachments={reply.attachments} />\n              ) : null\n            }\n          />\n        );\n      })}\n      <InfiniteScrollSentinel query={query} />\n    </Fragment>\n  );\n}\n\ninterface AttachmentListProps {\n  attachments: FileEntry[];\n}\nfunction AttachmentList({attachments}: AttachmentListProps) {\n  return (\n    <AttachmentListLayout className=\"mt-30 w-max\">\n      {attachments.map((attachment, index) => (\n        <FileEntryAttachmentLayout\n          key={attachment.id}\n          attachments={attachments}\n          index={index}\n        />\n      ))}\n    </AttachmentListLayout>\n  );\n}\n\nfunction MarkAsSolvedButton() {\n  const changeStatus = useChangeTicketStatus();\n  const {ticketId} = useParams();\n  const navigate = useNavigate();\n  return (\n    <DialogTrigger type=\"modal\">\n      <Button size=\"sm\" variant=\"outline\" startIcon={<CheckIcon />}>\n        <Trans message=\"Mark as solved\" />\n      </Button>\n      {({close}) => (\n        <ConfirmationDialog\n          onConfirm={() => {\n            changeStatus.mutate(\n              {\n                ids: [ticketId!],\n                status: 'closed',\n              },\n              {\n                onSuccess: () => {\n                  close();\n                  toast(message('Ticked marked as solved'));\n                  navigate(`/hc/tickets`);\n                },\n              },\n            );\n          }}\n          isLoading={changeStatus.isPending}\n          title={<Trans message=\"Mark as solved\" />}\n          body={\n            <Trans message=\"Are you sure you want to mark this ticket as solved?\" />\n          }\n          confirm={<Trans message=\"Confirm\" />}\n        />\n      )}\n    </DialogTrigger>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {TicketTag} from '@app/agent/ticket';\nimport {PaginatedBackendResponse} from '@common/http/backend-response/pagination-response';\n\ninterface Response extends PaginatedBackendResponse<TicketTag> {}\n\nexport function useCustomerTicketCategories() {\n  return useQuery({\n    queryKey: ['new-ticket-categories'],\n    queryFn: () => fetchCategories(),\n  });\n}\n\nfunction fetchCategories() {\n  return apiClient\n    .get<Response>(`ticket-categories`, {\n      params: {\n        perPage: 25,\n        with: 'categories',\n        orderBy: 'name',\n        orderDir: 'asc',\n        filterByPurchases: true,\n        paginate: 'simple',\n      },\n    })\n    .then(response => response.data);\n}\n","import {useSettings} from '@common/core/settings/use-settings';\nimport {CustomerNewTicketPageConfig} from '@app/help-center/tickets/customer-new-ticket-page/customer-new-ticket-page-config';\n\nexport function useCustomerNewTicketConfig() {\n  const settings = useSettings();\n  return (settings.hc?.newTicket?.appearance ||\n    {}) as CustomerNewTicketPageConfig;\n}\n","import {\n  SearchArticlesResponse,\n  useSearchArticles,\n} from '@app/help-center/search/use-search-articles';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {Trans} from '@common/i18n/trans';\nimport {ArticleLink} from '@app/help-center/articles/article-link';\nimport {AccordionAnimation} from '@common/ui/accordion/accordtion-animation';\nimport {MutableRefObject} from 'react';\nimport {SearchSessionItem} from '@app/help-center/search/use-search-term-logger';\nimport {useCurrentDateTime} from '@common/i18n/use-current-date-time';\n\ninterface Props {\n  query: string;\n  suggestionLog: MutableRefObject<SearchSessionItem[]>;\n  hcCategoryIds?: number[];\n}\nexport function SuggestedArticlesDrawer({\n  query,\n  suggestionLog,\n  hcCategoryIds,\n}: Props) {\n  const now = useCurrentDateTime();\n  const handleSearch = (r: SearchArticlesResponse) => {\n    if (r.pagination.data.length) {\n      suggestionLog.current.push({\n        term: r.query,\n        results: r.pagination.data.map(a => a.id),\n        date: now.toAbsoluteString(),\n      });\n    }\n  };\n\n  const {data} = useSearchArticles(\n    query,\n    {perPage: 5, categoryIds: hcCategoryIds},\n    {onSearch: handleSearch},\n  );\n  const results = data?.pagination.data;\n  const isVisible = !!results?.length;\n\n  return (\n    <AnimatePresence>\n      <m.div\n        key=\"drawer\"\n        variants={AccordionAnimation.variants}\n        transition={AccordionAnimation.transition}\n        initial={false}\n        animate={isVisible ? 'open' : 'closed'}\n      >\n        <div className=\"mb-10 mt-24 text-xl font-semibold\">\n          <Trans message=\"Were you looking for\" />:\n        </div>\n        {results?.map(article => (\n          <ArticleLink\n            key={article.id}\n            article={article}\n            className=\"block py-10 text-sm text-primary\"\n            target=\"_blank\"\n          />\n        ))}\n      </m.div>\n    </AnimatePresence>\n  );\n}\n","import {Navbar} from '@common/ui/navigation/navbar/navbar';\nimport {HcSearchBar} from '@app/help-center/search/hc-search-bar';\nimport React, {ReactNode, useRef, useState} from 'react';\nimport {BreadcrumbItem} from '@common/ui/breadcrumbs/breadcrumb-item';\nimport {Trans} from '@common/i18n/trans';\nimport {Breadcrumb} from '@common/ui/breadcrumbs/breadcrumb';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {useCustomerTicketCategories} from '@app/help-center/tickets/customer-new-ticket-page/use-customer-ticket-categories';\nimport {useForm} from 'react-hook-form';\nimport {\n  CreateTicketPayload,\n  useCreateTicket,\n} from '@app/agent/agent-new-ticket-page/use-create-ticket';\nimport {Editor} from '@tiptap/react';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport {getReplyBody} from '@app/reply-editor/get-reply-body';\nimport {getInputFieldClassNames} from '@common/ui/forms/input-field/get-input-field-class-names';\nimport {Form} from '@common/ui/forms/form';\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {FormSelect} from '@common/ui/forms/select/select';\nimport {Item} from '@common/ui/forms/listbox/item';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {ReplyEditor} from '@app/reply-editor/reply-editor';\nimport {Button} from '@common/ui/buttons/button';\nimport {TicketTag} from '@app/agent/ticket';\nimport {useCustomerNewTicketConfig} from '@app/help-center/tickets/customer-new-ticket-page/use-customer-new-ticket-config';\nimport {SuggestedArticlesDrawer} from '@app/help-center/tickets/customer-new-ticket-page/suggested-articles-drawer';\nimport {\n  SearchSessionItem,\n  useSearchTermLogger,\n} from '@app/help-center/search/use-search-term-logger';\nimport {useSettings} from '@common/core/settings/use-settings';\n\nexport function CustomerNewTicketPage() {\n  const navigate = useNavigate();\n  const config = useCustomerNewTicketConfig();\n  const query = useCustomerTicketCategories();\n  const {envato} = useSettings();\n  return (\n    <div>\n      <Navbar menuPosition=\"header\">\n        <HcSearchBar />\n      </Navbar>\n      <div className=\"container mx-auto px-12 pb-48 md:px-24\">\n        <Breadcrumb size=\"sm\" className=\"mb-34 mt-34 md:mb-48\">\n          <BreadcrumbItem onSelected={() => navigate(`/hc`)}>\n            <Trans message=\"Help center\" />\n          </BreadcrumbItem>\n          <BreadcrumbItem onSelected={() => navigate(`/hc/tickets`)}>\n            <Trans message=\"Requests\" />\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Trans message=\"New request\" />\n          </BreadcrumbItem>\n        </Breadcrumb>\n        <div className=\"flex items-stretch gap-44\">\n          <main className=\"flex-auto\">\n            <h1 className=\"mb-34 mt-14 text-3xl font-light\">\n              <Trans message={config!.title} />\n            </h1>\n            {query.error && envato.enable && envato.require_purchase_code && (\n              <EnvatoError />\n            )}\n            {query.data ? (\n              <TicketForm ticketCategories={query.data.pagination.data} />\n            ) : null}\n          </main>\n          <Sidebar />\n        </div>\n      </div>\n    </div>\n  );\n}\n\ninterface TicketFormProps {\n  ticketCategories: TicketTag[];\n}\nfunction TicketForm({ticketCategories}: TicketFormProps) {\n  const config = useCustomerNewTicketConfig();\n  const navigate = useNavigate();\n  const form = useForm<CreateTicketPayload>({\n    defaultValues: {\n      category_id: ticketCategories[0]?.id,\n    },\n  });\n  const bodyError = form.formState.errors.body?.message;\n  const createTicket = useCreateTicket(form);\n  const editorRef = useRef<Editor | null>(null);\n  const [attachments, setAttachments] = useState<FileEntry[]>([]);\n  const searchQuery = form.watch('subject');\n  const hcCategoryIds = ticketCategories\n    .find(tc => form.watch('category_id') == tc.id)\n    ?.categories.map(hc => hc.id);\n  const searchTermLogger = useSearchTermLogger();\n  const suggestionLog = useRef<SearchSessionItem[]>([]);\n\n  const selectedCategoryId = form.watch('category_id');\n  const selectedCategory = ticketCategories.find(\n    c => c.id == selectedCategoryId,\n  );\n  console.log('selectedCategory', selectedCategory);\n\n  const handleSubmit = () => {\n    createTicket.mutate(\n      {\n        ...form.getValues(),\n        body: getReplyBody(editorRef) || '',\n        attachments: attachments.map(a => a.id),\n        suggestionLog: suggestionLog.current,\n      },\n      {\n        onSuccess: () => {\n          searchTermLogger.updateLastSearch({createdTicket: true});\n          navigate('/hc/tickets');\n        },\n      },\n    );\n  };\n\n  const inputFieldClassNames = getInputFieldClassNames();\n\n  return (\n    <Form\n      form={form}\n      onSubmit={() => handleSubmit()}\n      onBeforeSubmit={() => form.clearErrors()}\n    >\n      <FormSelect\n        name=\"category_id\"\n        label={<Trans message={config!.categoryLabel} />}\n        selectionMode=\"single\"\n        className=\"mb-24\"\n        errorMessage={\n          selectedCategory &&\n          selectedCategory.support_expired && (\n            <Trans\n              message=\"Your support for this item has expired. <a>Click here to renew</a>\"\n              values={{\n                a: content => (\n                  <a\n                    href=\"https://codecanyon.net/downloads\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                    className=\"font-bold underline\"\n                  >\n                    {content}\n                  </a>\n                ),\n              }}\n            />\n          )\n        }\n      >\n        {ticketCategories.map(category => (\n          <Item key={category.id} value={category.id}>\n            {category.display_name || category.name}\n          </Item>\n        ))}\n      </FormSelect>\n      <FormTextField\n        name=\"subject\"\n        label={<Trans message={config!.subjectLabel} />}\n      />\n      <SuggestedArticlesDrawer\n        query={searchQuery}\n        suggestionLog={suggestionLog}\n        hcCategoryIds={hcCategoryIds}\n      />\n      <div className=\"my-24\">\n        <div className={inputFieldClassNames.label}>\n          <Trans message={config!.descriptionLabel} />\n        </div>\n          \n        {selectedCategory?.description_ticket_page && (\n          <div className={`[&_a]:underline ${inputFieldClassNames.label}`}>\n            <div dangerouslySetInnerHTML={{ __html: selectedCategory.description_ticket_page }} />\n          </div>\n        )}\n        <FileUploadProvider>\n          <ReplyEditor\n            autoFocus={false}\n            minHeight=\"min-h-[300px]\"\n            isLoading={createTicket.isPending}\n            editorRef={editorRef}\n            attachments={attachments}\n            onAttachmentsChange={attachments => setAttachments(attachments)}\n            onSubmit={() => handleSubmit()}\n          />\n        </FileUploadProvider>\n        {bodyError && (\n          <div className={inputFieldClassNames.error}>{bodyError}</div>\n        )}\n      </div>\n      <Button\n        variant=\"flat\"\n        color=\"primary\"\n        type=\"submit\"\n        disabled={createTicket.isPending}\n      >\n        <Trans message={config!.submitButtonText} />\n      </Button>\n    </Form>\n  );\n}\n\nfunction Sidebar() {\n  const config = useCustomerNewTicketConfig();\n  return (\n    <aside className=\"w-500 border-l px-40 max-md:hidden\">\n      <h2 className=\"mb-34 text-xl font-medium\">\n        <Trans message={config.sidebarTitle} />\n      </h2>\n      {config.sidebarTips?.map((tip, index) => (\n        <SidebarTip key={index} title={<Trans message={tip.title} />}>\n          <Trans message={tip.content} />\n        </SidebarTip>\n      ))}\n    </aside>\n  );\n}\n\ninterface SidebarTipProps {\n  title: ReactNode;\n  children: ReactNode;\n}\nfunction SidebarTip({title, children}: SidebarTipProps) {\n  return (\n    <div className=\"mb-30\">\n      <h3 className=\"text-lg font-medium\">{title}</h3>\n      <p>{children}</p>\n    </div>\n  );\n}\n\nfunction EnvatoError() {\n  return (\n    <div className=\"text-sm text-danger\">\n      <Trans message=\"There was an issue fetching your purchase codes from envato. Try to logout and use 'login with envato' button.\" />\n    </div>\n  );\n}\n","import {RouteObject, useRoutes} from 'react-router-dom';\nimport {NotFoundPage} from '@common/ui/not-found-page/not-found-page';\nimport React from 'react';\nimport {CustomerTicketListPage} from '@app/help-center/tickets/customer-ticket-list-page/customer-ticket-list-page';\nimport {CustomerTicketPage} from '@app/help-center/tickets/customer-ticket-page';\nimport {CustomerNewTicketPage} from '@app/help-center/tickets/customer-new-ticket-page/customer-new-ticket-page';\n\nconst RouteConfig: RouteObject[] = [\n  {\n    path: '/',\n    element: <CustomerTicketListPage />,\n  },\n  {\n    path: '/new',\n    element: <CustomerNewTicketPage />,\n  },\n  {\n    path: ':ticketId',\n    element: <CustomerTicketPage />,\n  },\n  {\n    path: '*',\n    element: <NotFoundPage />,\n  },\n];\n\nexport default function HcTicketRoutes() {\n  return useRoutes(RouteConfig);\n}\n"],"names":["_a","Select","submitReply","attachments"],"mappings":"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"}