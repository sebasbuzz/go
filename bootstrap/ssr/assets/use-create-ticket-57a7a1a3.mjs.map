{"version":3,"file":"use-create-ticket-57a7a1a3.mjs","sources":["../../../resources/client/agent/ticket-layout/ticket-type-request-tag.tsx","../../../common/resources/client/ui/images/user-avatar.tsx","../../../resources/client/agent/ticket-actions/requests/use-change-ticket-status.tsx","../../../common/resources/client/ui/infinite-scroll/infinite-scroll-sentinel.tsx","../../../resources/client/agent/agent-ticket-page/ticket-page-store.ts","../../../common/resources/client/ui/infinite-scroll/use-infinite-data.ts","../../../resources/client/agent/agent-ticket-page/reply-list/requests/use-ticket-replies.ts","../../../resources/client/agent/customer-page/customer-link.tsx","../../../resources/client/agent/agent-ticket-page/agent-reply-editor/use-open-reply-editor.ts","../../../resources/client/agent/agent-ticket-page/reply-list/requests/use-delete-draft.ts","../../../resources/client/agent/agent-ticket-page/reply-list/reply-list-draft-actions.tsx","../../../resources/client/agent/ticket-layout/ticket-reply-layout.tsx","../../../resources/client/reply-editor/send-reply-button.tsx","../../../resources/client/agent/agent-new-ticket-page/use-create-ticket.ts"],"sourcesContent":["import { useCustomerTicketRequestType } from \"../agent-ticket-page/requests/use-ticket\";\r\n\r\ninterface Props {\r\n  ticketRequestType: number;\r\n}\r\n\r\nconst badget = \"relative flex flex-shrink-0 items-center justify-center gap-10 overflow-hidden whitespace-nowrap outline-none after:pointer-events-none rounded-full bg-chip text-main pl-8 h-20 text-xs font-medium hover:after:bg-black/5 focus:after:bg-black/10\"\r\n\r\nexport function TicketTypeRequestTag ( {ticketRequestType} : Props) {\r\n  const query = useCustomerTicketRequestType(ticketRequestType);\r\n\r\n  return (<>\r\n      {query && query.data && (\r\n        <div className={badget}>{query.data.ticket_request_type?.display_name}</div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TicketTypeRequestTag","import {Avatar, AvatarProps} from '@common/ui/images/avatar';\nimport {User} from '@common/auth/user';\nimport {useContext} from 'react';\nimport {SiteConfigContext} from '@common/core/settings/site-config-context';\n\ninterface UserAvatarProps extends Omit<AvatarProps, 'label' | 'src' | 'link'> {\n  user?: User;\n}\nexport function UserAvatar({user, ...props}: UserAvatarProps) {\n  const {auth} = useContext(SiteConfigContext);\n  return (\n    <Avatar\n      {...props}\n      label={user?.display_name}\n      src={user?.avatar}\n      link={user?.id && auth.getUserProfileLink?.(user)}\n    />\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\n\ninterface Payload {\n  ids: (number | string)[];\n  status: string;\n}\n\nexport function useChangeTicketStatus() {\n  return useMutation({\n    mutationFn: (payload: Payload) => changeStatus(payload),\n    onSuccess: async () => {\n      queryClient.invalidateQueries({queryKey: ['mailbox', 'sidenav-tags']});\n      await queryClient.invalidateQueries({queryKey: ['tickets']});\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction changeStatus(payload: Payload) {\n  return apiClient\n    .post<BackendResponse>(`tickets/status/change`, payload)\n    .then(r => r.data);\n}\n","import React, {ReactNode, useEffect, useRef, useState} from 'react';\nimport clsx from 'clsx';\nimport {UseInfiniteQueryResult} from '@tanstack/react-query/src/types';\nimport {Trans} from '@common/i18n/trans';\nimport {Button} from '@common/ui/buttons/button';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\nimport {ProgressCircle} from '@common/ui/progress/progress-circle';\n\nexport interface InfiniteScrollSentinelProps {\n  loaderMarginTop?: string;\n  children?: ReactNode;\n  loadMoreExtraContent?: ReactNode;\n  query: UseInfiniteQueryResult;\n  style?: React.CSSProperties;\n  className?: string;\n  variant?: 'infiniteScroll' | 'loadMore';\n  size?: 'sm' | 'md';\n}\nexport function InfiniteScrollSentinel({\n  query: {isInitialLoading, fetchNextPage, isFetchingNextPage, hasNextPage},\n  children,\n  loaderMarginTop = 'mt-24',\n  style,\n  className,\n  variant: _variant = 'infiniteScroll',\n  loadMoreExtraContent,\n  size = 'md',\n}: InfiniteScrollSentinelProps) {\n  const sentinelRef = useRef<HTMLDivElement>(null);\n  const isLoading = isFetchingNextPage || isInitialLoading;\n  const [loadMoreClickCount, setLoadMoreClickCount] = useState(0);\n  const innerVariant =\n    _variant === 'loadMore' && loadMoreClickCount < 3\n      ? 'loadMore'\n      : 'infiniteScroll';\n\n  useEffect(() => {\n    const sentinelEl = sentinelRef.current;\n    if (!sentinelEl || innerVariant === 'loadMore') return;\n    const observer = new IntersectionObserver(([entry]) => {\n      if (entry.isIntersecting && hasNextPage && !isLoading) {\n        fetchNextPage();\n      }\n    });\n    observer.observe(sentinelEl);\n    return () => {\n      observer.unobserve(sentinelEl);\n    };\n  }, [fetchNextPage, hasNextPage, isLoading, innerVariant]);\n\n  let content: ReactNode;\n\n  if (children) {\n    // children might already be wrapped in AnimatePresence, so only wrap default loader with it\n    content = isFetchingNextPage ? children : null;\n  } else if (innerVariant === 'loadMore') {\n    content = !isInitialLoading && hasNextPage && (\n      <div className={clsx('flex items-center gap-8', loaderMarginTop)}>\n        {loadMoreExtraContent}\n        <Button\n          size={size === 'md' ? 'sm' : 'xs'}\n          className={clsx(\n            size === 'sm' ? 'min-h-24 min-w-96' : 'min-h-36 min-w-112'\n          )}\n          variant=\"outline\"\n          color=\"primary\"\n          onClick={() => {\n            fetchNextPage();\n            setLoadMoreClickCount(loadMoreClickCount + 1);\n          }}\n          disabled={isLoading}\n        >\n          {loadMoreClickCount >= 2 && !isFetchingNextPage ? (\n            <Trans message=\"Load all\" />\n          ) : (\n            <Trans message=\"Show more\" />\n          )}\n        </Button>\n      </div>\n    );\n  } else {\n    content = (\n      <AnimatePresence>\n        {isFetchingNextPage && (\n          <m.div\n            className={clsx('flex justify-center w-full', loaderMarginTop)}\n            {...opacityAnimation}\n          >\n            <ProgressCircle size={size} isIndeterminate aria-label=\"loading\" />\n          </m.div>\n        )}\n      </AnimatePresence>\n    );\n  }\n\n  return (\n    <div\n      style={style}\n      className={clsx('w-full', className, hasNextPage && 'min-h-36')}\n      role=\"presentation\"\n    >\n      <div ref={sentinelRef} aria-hidden />\n      {content}\n    </div>\n  );\n}\n","import {create} from 'zustand';\nimport {FileEntry} from '@common/uploads/file-entry';\n\nexport interface ActiveDraft {\n  id?: number;\n  body?: string;\n  attachments: FileEntry[];\n  isDirty: boolean;\n  isSaving: boolean;\n}\n\nexport interface TicketPageStore {\n  editorIsOpen: boolean;\n  setEditorIsOpen: (value: boolean) => void;\n  ticketIsSaving: boolean;\n  setTicketIsSaving: (value: boolean) => void;\n  activeDraft: ActiveDraft;\n  updateActiveDraft: (value: Partial<ActiveDraft>) => void;\n  discardActiveDraft: () => void;\n}\n\nexport const defaultDraftValues: ActiveDraft = {\n  isDirty: false,\n  isSaving: false,\n  body: undefined,\n  attachments: [],\n};\n\nexport const useTicketPageStore = create<TicketPageStore>()(set => ({\n  editorIsOpen: false,\n  setEditorIsOpen: value => set(s => ({editorIsOpen: value})),\n  ticketIsSaving: false,\n  setTicketIsSaving: value => set(s => ({ticketIsSaving: value})),\n  activeDraft: defaultDraftValues,\n  updateActiveDraft: value =>\n    set(s => {\n      const isDirty = !isBodyEmpty(value.body) || !!value.attachments?.length;\n      return {\n        activeDraft: {\n          ...s.activeDraft,\n          isDirty,\n          ...value,\n        },\n      };\n    }),\n  discardActiveDraft: () =>\n    set(() => ({\n      activeDraft: defaultDraftValues,\n    })),\n}));\n\nexport function ticketPageStore() {\n  return useTicketPageStore.getState();\n}\n\nfunction isBodyEmpty(body: string | undefined): boolean {\n  if (!body) return true;\n  return body.trim() === '<p></p>' || !body.trim();\n}\n","import {\n  hashKey,\n  InfiniteData,\n  keepPreviousData,\n  useInfiniteQuery,\n  UseInfiniteQueryResult,\n} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {\n  hasNextPage,\n  PaginationResponse,\n} from '@common/http/backend-response/pagination-response';\nimport {useMemo, useRef, useState} from 'react';\nimport {SortDescriptor} from '@common/ui/tables/types/sort-descriptor';\nimport {GetDatatableDataParams} from '@common/datatable/requests/paginated-resources';\nimport {QueryKey} from '@tanstack/query-core/src/types';\n\nexport type UseInfiniteDataResult<\n  T,\n  E extends object = object,\n> = UseInfiniteQueryResult<InfiniteData<PaginationResponse<T> & E>> & {\n  items: T[];\n  totalItems: number | null;\n  // initial load is done and no results were returned from backend\n  noResults: boolean;\n  // true when changing filters or sorting, not on initial load, background fetch or infinite load\n  isReloading: boolean;\n  sortDescriptor: SortDescriptor;\n  setSortDescriptor: (sortDescriptor: SortDescriptor) => void;\n  searchQuery: string;\n  setSearchQuery: (searchQuery: string) => void;\n};\n\nfunction buildQueryKey(\n  {\n    queryKey,\n    defaultOrderDir,\n    defaultOrderBy,\n    queryParams,\n  }: UseInfiniteDataProps<any>,\n  sortDescriptor: SortDescriptor,\n  searchQuery: string = '',\n) {\n  // make sure to always set default order dir and col so query keys are consistent\n  if (!sortDescriptor.orderBy) {\n    sortDescriptor.orderBy = defaultOrderBy;\n  }\n  if (!sortDescriptor.orderDir) {\n    sortDescriptor.orderDir = defaultOrderDir;\n  }\n  return [...queryKey, sortDescriptor, searchQuery, queryParams];\n}\n\ninterface Response<T> extends BackendResponse {\n  pagination: PaginationResponse<T>;\n}\n\nexport interface UseInfiniteDataProps<T> {\n  initialPage?: PaginationResponse<T> | null;\n  queryKey: QueryKey;\n  queryParams?: Record<string, string | number | null>;\n  endpoint: string;\n  defaultOrderBy?: SortDescriptor['orderBy'];\n  defaultOrderDir?: SortDescriptor['orderDir'];\n  // whether user can sort items manually (table header, dropdown, etc)\n  willSortOrFilter?: boolean;\n  // ordering is not available with cursor pagination\n  paginate?: 'simple' | 'lengthAware' | 'cursor';\n  transformResponse?: (response: Response<T>) => Response<T>;\n}\nexport function useInfiniteData<T, E extends object = {}>(\n  props: UseInfiniteDataProps<T>,\n): UseInfiniteDataResult<T, E> {\n  const {\n    initialPage,\n    endpoint,\n    defaultOrderBy,\n    defaultOrderDir,\n    queryParams,\n    paginate,\n    transformResponse,\n    willSortOrFilter = false,\n  } = props;\n  const [searchQuery, setSearchQuery] = useState('');\n  const [sortDescriptor, setSortDescriptor] = useState<SortDescriptor>({\n    orderBy: defaultOrderBy,\n    orderDir: defaultOrderDir,\n  });\n\n  const queryKey = buildQueryKey(props, sortDescriptor, searchQuery);\n  const initialQueryKey = useRef(hashKey(queryKey)).current;\n\n  const query = useInfiniteQuery({\n    placeholderData: willSortOrFilter ? keepPreviousData : undefined,\n    queryKey,\n    queryFn: ({pageParam, signal}) => {\n      const params: GetDatatableDataParams = {\n        ...queryParams,\n        perPage: initialPage?.per_page || queryParams?.perPage,\n        query: searchQuery,\n        paginate,\n        ...sortDescriptor,\n      };\n      if (paginate === 'cursor') {\n        params.cursor = pageParam;\n      } else {\n        params.page = pageParam || 1;\n      }\n      return fetchData<T>(endpoint, params, transformResponse, signal);\n    },\n    initialPageParam: paginate === 'cursor' ? '' : 1,\n    getNextPageParam: lastResponse => {\n      if (!hasNextPage(lastResponse.pagination)) {\n        return null;\n      }\n      if ('next_cursor' in lastResponse.pagination) {\n        return lastResponse.pagination.next_cursor;\n      }\n      return lastResponse.pagination.current_page + 1;\n    },\n    initialData: () => {\n      // initial data will be for initial query key only, remove\n      // initial data if query key changes, so query is reset\n      if (!initialPage || hashKey(queryKey) !== initialQueryKey) {\n        return undefined;\n      }\n\n      return {\n        pageParams: [undefined, 1],\n        pages: [{pagination: initialPage}],\n      };\n    },\n  });\n\n  const items = useMemo(() => {\n    return query.data?.pages.flatMap(p => p.pagination.data) || [];\n  }, [query.data?.pages]);\n\n  const firstPage = query.data?.pages[0].pagination;\n  const totalItems =\n    firstPage && 'total' in firstPage && firstPage.total\n      ? firstPage.total\n      : null;\n\n  return {\n    ...query,\n    items,\n    totalItems,\n    noResults: query.data?.pages?.[0].pagination.data.length === 0,\n    // can't use \"isRefetching\", it's true for some reason when changing sorting or filters\n    isReloading:\n      query.isFetching && !query.isFetchingNextPage && query.isPlaceholderData,\n    sortDescriptor,\n    setSortDescriptor,\n    searchQuery,\n    setSearchQuery,\n  } as UseInfiniteDataResult<T, E>;\n}\n\nasync function fetchData<T>(\n  endpoint: string,\n  params: GetDatatableDataParams,\n  transformResponse?: UseInfiniteDataProps<T>['transformResponse'],\n  signal?: AbortSignal,\n): Promise<Response<T>> {\n  if (params.query) {\n    await new Promise(resolve => setTimeout(resolve, 300));\n  }\n  return apiClient\n    .get(endpoint, {params, signal: params.query ? signal : undefined})\n    .then(r => {\n      if (transformResponse) {\n        return transformResponse(r.data);\n      }\n      return r.data;\n    });\n}\n","import {useInfiniteData} from '@common/ui/infinite-scroll/use-infinite-data';\nimport {SimplePaginationResponse} from '@common/http/backend-response/pagination-response';\nimport {Reply} from '@app/agent/reply';\n\nexport function useTicketReplies(\n  ticketId: number,\n  initialPage?: SimplePaginationResponse<Reply>\n) {\n  return useInfiniteData({\n    queryKey: ['tickets', `${ticketId}`, 'replies'],\n    endpoint: `tickets/${ticketId}/replies`,\n    initialPage,\n  });\n}\n","import {Link, LinkProps} from 'react-router-dom';\nimport clsx from 'clsx';\nimport React, {ReactNode, useMemo} from 'react';\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\nimport {User} from '@common/auth/user';\n\ninterface Props extends Omit<LinkProps, 'to'> {\n  customer: User;\n  className?: string;\n  children?: ReactNode;\n  color?: 'primary' | 'inherit';\n}\nexport function CustomerLink({\n  customer,\n  className,\n  children,\n  color = 'inherit',\n  ...linkProps\n}: Props) {\n  const finalUri = useMemo(() => {\n    return getCustomerLink(customer.id);\n  }, [customer]);\n\n  return (\n    <Link\n      {...linkProps}\n      className={clsx(\n        color === 'primary'\n          ? 'text-primary hover:text-primary-dark'\n          : 'text-inherit',\n        'overflow-x-hidden overflow-ellipsis outline-none transition-colors hover:underline focus-visible:underline',\n        className,\n      )}\n      to={finalUri}\n    >\n      {children ?? customer.display_name}\n    </Link>\n  );\n}\n\nexport function getCustomerLink(\n  userId: number | string,\n  {absolute, tab}: {absolute?: boolean; tab?: string} = {},\n): string {\n  if (!tab) {\n    tab = 'tickets';\n  }\n  let link = `/agent/users/${userId}/${tab}`;\n  if (absolute) {\n    link = `${getBootstrapData().settings.base_url}${link}`;\n  }\n  return link;\n}\n","import {useCallback} from 'react';\nimport {useTicket} from '@app/agent/agent-ticket-page/requests/use-ticket';\nimport {ticketPageStore} from '@app/agent/agent-ticket-page/ticket-page-store';\n\nexport function useOpenReplyEditor() {\n  const {data} = useTicket();\n  return useCallback(() => {\n    if (!data) return;\n    if (data.draft) {\n      ticketPageStore().updateActiveDraft({\n        ...data.draft,\n        isDirty: false,\n      });\n    }\n    ticketPageStore().setEditorIsOpen(true);\n  }, [data]);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {useTicketPageStore} from '@app/agent/agent-ticket-page/ticket-page-store';\nimport {useParams} from 'react-router-dom';\n\ninterface Payload {\n  id: number;\n}\n\ninterface Options {\n  clearTicketCache?: boolean;\n}\n\nexport function useDeleteDraft({clearTicketCache = true}: Options = {}) {\n  const {ticketId} = useParams();\n  const {updateActiveDraft, discardActiveDraft} = useTicketPageStore();\n  return useMutation({\n    mutationFn: (payload: Payload) => {\n      updateActiveDraft({isSaving: true});\n      return deleteDraft(payload);\n    },\n    onSuccess: async () => {\n      discardActiveDraft();\n      if (clearTicketCache) {\n        await queryClient.invalidateQueries({\n          queryKey: ['tickets', `${ticketId}`],\n        });\n      }\n    },\n    onError: err => showHttpErrorToast(err),\n    onSettled: () => updateActiveDraft({isSaving: false}),\n  });\n}\n\nfunction deleteDraft(payload: Payload) {\n  return apiClient.delete(`replies/${payload.id}`).then(r => r.data);\n}\n","import React, {Fragment} from 'react';\nimport {Button} from '@common/ui/buttons/button';\nimport {Trans} from '@common/i18n/trans';\nimport {useOpenReplyEditor} from '@app/agent/agent-ticket-page/agent-reply-editor/use-open-reply-editor';\nimport {Reply} from '@app/agent/reply';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {useDeleteDraft} from '@app/agent/agent-ticket-page/reply-list/requests/use-delete-draft';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {ConfirmationDialog} from '@common/ui/overlays/dialog/confirmation-dialog';\n\ninterface Props {\n  draft: Reply;\n}\nexport function ReplyListDraftActions({draft}: Props) {\n  const openEditor = useOpenReplyEditor();\n  return (\n    <Fragment>\n      <Button\n        variant=\"outline\"\n        size=\"2xs\"\n        className=\"ml-14\"\n        onClick={() => openEditor()}\n      >\n        <Trans message=\"Edit\" />\n      </Button>\n      <DeleteDraftButton draft={draft} />\n    </Fragment>\n  );\n}\n\ninterface DeleteDraftButtonProps {\n  draft: Reply;\n}\nfunction DeleteDraftButton({draft}: DeleteDraftButtonProps) {\n  return (\n    <DialogTrigger type=\"modal\">\n      <Button variant=\"outline\" size=\"2xs\" className=\"ml-6\">\n        <Trans message=\"Discard\" />\n      </Button>\n      <DeleteDraftDialog draft={draft} />\n    </DialogTrigger>\n  );\n}\n\ninterface DeleteDraftDialogProps {\n  draft: Reply;\n}\nfunction DeleteDraftDialog({draft}: DeleteDraftDialogProps) {\n  const deleteDraft = useDeleteDraft();\n  const {close} = useDialogContext();\n  return (\n    <ConfirmationDialog\n      isDanger\n      title={<Trans message=\"Discard draft\" />}\n      body={<Trans message=\"Are you sure you want to discard this draft?\" />}\n      confirm={<Trans message=\"Discard\" />}\n      onConfirm={() => deleteDraft.mutate({id: draft.id}, {onSuccess: close})}\n      isLoading={deleteDraft.isPending}\n    />\n  );\n}\n","import {Reply} from '@app/agent/reply';\r\nimport clsx from 'clsx';\r\nimport {Link} from 'react-router-dom';\r\nimport {getCustomerLink} from '@app/agent/customer-page/customer-link';\r\nimport {UserAvatar} from '@common/ui/images/user-avatar';\r\nimport {useAuth} from '@common/auth/use-auth';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {FormattedDate} from '@common/i18n/formatted-date';\r\nimport {ReplyListDraftActions} from '@app/agent/agent-ticket-page/reply-list/reply-list-draft-actions';\r\nimport React, {ReactNode, useEffect, useRef} from 'react';\r\nimport {highlightCode} from '@common/text-editor/highlight/highlight-code';\r\n\r\nconst replyDateFormat: Intl.DateTimeFormatOptions = {\r\n  month: 'short',\r\n  day: 'numeric',\r\n  hour: 'numeric',\r\n  minute: 'numeric',\r\n};\r\n\r\ninterface Props {\r\n  reply: Reply;\r\n  isInitial?: boolean;\r\n  actions?: ReactNode;\r\n  attachments?: ReactNode;\r\n  className?: string;\r\n  ticketRequestType: number;\r\n}\r\nexport function TicketReplyLayout({\r\n  reply,\r\n  isInitial,\r\n  actions,\r\n  attachments,\r\n  className,\r\n  ticketRequestType,\r\n}: Props) {\r\n  const bodyRef = useRef<HTMLDivElement>(null);\r\n  useEffect(() => {\r\n    if (bodyRef.current) {\r\n      highlightCode(bodyRef.current);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        'flex items-start gap-20 border-x-2 border-t border-x-transparent py-24',\r\n        reply.type === 'drafts' && 'border-l-primary',\r\n        reply.type === 'notes' && 'border-l-warning bg-warning/6',\r\n        className,\r\n      )}\r\n    >\r\n      {reply.user && (\r\n        <Link\r\n          to={getCustomerLink(reply.user.id)}\r\n          className=\"flex-shrink-0 max-md:hidden\"\r\n          target=\"_blank\"\r\n        >\r\n          <UserAvatar user={reply.user} size=\"w-50 h-50\" circle />\r\n        </Link>\r\n      )}\r\n      <div className=\"min-w-0 flex-auto\">\r\n        <ReplyHeader reply={reply} isInitial={isInitial} actions={actions} />\r\n        <div\r\n          ref={bodyRef}\r\n          className=\"ticket-reply-body mr-24 text-sm\"\r\n          dangerouslySetInnerHTML={{__html: reply.body}}\r\n        />\r\n        {attachments}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface ReplyHeaderProps {\r\n  reply: Reply;\r\n  isInitial?: boolean;\r\n  actions?: ReactNode;\r\n}\r\nfunction ReplyHeader({reply, isInitial, actions}: ReplyHeaderProps) {\r\n  const {user: currentUser} = useAuth();\r\n  return (\r\n    <div className=\"mb-14 flex items-center\">\r\n      <div className=\"font-medium\">\r\n        {reply.user?.id === currentUser?.id ? (\r\n          <Trans message=\"You\" />\r\n        ) : (\r\n          reply.user?.display_name\r\n        )}\r\n      </div>\r\n      <div className=\"ml-4\">\r\n        <ReplySuffix reply={reply} isInitial={isInitial} />\r\n      </div>\r\n      <div className=\"ml-auto mr-4 flex-shrink-0 text-xs text-muted\">\r\n        <FormattedDate date={reply.created_at} options={replyDateFormat} />\r\n      </div>\r\n      {actions}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ReplySuffix({reply, isInitial}: ReplyHeaderProps) {\r\n  switch (reply.type) {\r\n    case 'drafts':\r\n      return (\r\n        <div className=\"flex items-center\">\r\n          <span className=\"text-primary\">\r\n            <Trans message=\"created a draft\" />\r\n          </span>\r\n          <ReplyListDraftActions draft={reply} />\r\n        </div>\r\n      );\r\n    case 'notes':\r\n      return (\r\n        <span className=\"text-warning\">\r\n          <Trans message=\"left a note\" />\r\n        </span>\r\n      );\r\n    case 'replies':\r\n      if (isInitial) {\r\n        return (\r\n          <span className=\"text-muted max-md:hidden\">\r\n            <Trans message=\"started the conversaion\" />\r\n          </span>\r\n        );\r\n      }\r\n      return (\r\n        <span className=\"text-muted\">\r\n          <Trans message=\"replied\" />\r\n        </span>\r\n      );\r\n  }\r\n}\r\n","import {Trans} from '@common/i18n/trans';\nimport {Button} from '@common/ui/buttons/button';\nimport React from 'react';\nimport {ReplyEditorToolbarButtonsProps} from '@app/reply-editor/reply-editor';\n\nexport function SendReplyButton({\n  isLoading,\n  onSubmit,\n}: ReplyEditorToolbarButtonsProps) {\n  return (\n    <Button\n      variant=\"flat\"\n      color=\"primary\"\n      radius=\"rounded-none\"\n      disabled={isLoading}\n      onClick={() => onSubmit?.()}\n    >\n      <Trans message=\"Send reply\" />\n    </Button>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {message} from '@common/i18n/message';\r\nimport {Ticket} from '@app/agent/ticket';\r\nimport {UseFormReturn} from 'react-hook-form';\r\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\r\nimport {SearchSessionItem} from '@app/help-center/search/use-search-term-logger';\r\n\r\ninterface Response {\r\n  ticket: Ticket;\r\n}\r\n\r\nexport interface CreateTicketPayload {\r\n  user_id: number;\r\n  subject: string;\r\n  category_id: number;\r\n  ticket_request_type: number;\r\n  status: string;\r\n  body: string;\r\n  attachments?: number[];\r\n  created_by_agent?: boolean;\r\n  suggestionLog?: SearchSessionItem[];\r\n}\r\n\r\nexport function useCreateTicket(form: UseFormReturn<CreateTicketPayload>) {\r\n  return useMutation({\r\n    mutationFn: (payload: CreateTicketPayload) => createTicket(payload),\r\n    onSuccess: async () => {\r\n      await queryClient.invalidateQueries({queryKey: ['tickets']});\r\n      toast(message('Ticket created'));\r\n    },\r\n    onError: err => onFormQueryError(err, form),\r\n  });\r\n}\r\n\r\nfunction createTicket(payload: CreateTicketPayload) {\r\n  return apiClient.post<Response>(`tickets`, payload).then(r => r.data);\r\n}\r\n"],"names":["hasNextPage","_a","Fragment","deleteDraft"],"mappings":"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"}