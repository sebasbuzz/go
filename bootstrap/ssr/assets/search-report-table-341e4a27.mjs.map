{"version":3,"file":"search-report-table-341e4a27.mjs","sources":["../../../resources/client/agent/global-loading-progress.tsx","../../../common/resources/client/tags/use-tags.ts","../../../common/resources/client/icons/material/Delete.tsx","../../../common/resources/client/ui/tabs/tabs-context.tsx","../../../common/resources/client/ui/tabs/tabs.tsx","../../../common/resources/client/ui/tabs/tab.tsx","../../../common/resources/client/ui/tabs/tab-line.tsx","../../../common/resources/client/ui/tabs/tab-list.tsx","../../../common/resources/client/datatable/filters/backend-filters-url-key.ts","../../../common/resources/client/datatable/filters/utils/decode-backend-filters.ts","../../../common/resources/client/datatable/filters/utils/encode-backend-filters.ts","../../../common/resources/client/datatable/filters/backend-filter-url-params.ts","../../../common/resources/client/datatable/filters/backend-filter.ts","../../../common/resources/client/datatable/filters/filter-list/filter-list-trigger-button.tsx","../../../common/resources/client/datatable/filters/panels/select-filter-panel.tsx","../../../common/resources/client/datatable/filters/filter-list/filter-list-item-dialog-trigger.tsx","../../../common/resources/client/users/queries/use-normalized-models.ts","../../../common/resources/client/users/queries/use-normalized-model.ts","../../../common/resources/client/ui/forms/normalized-model-field.tsx","../../../common/resources/client/datatable/filters/panels/normalized-model-filter-panel.tsx","../../../common/resources/client/icons/material/DateRange.tsx","../../../common/resources/client/ui/forms/input-field/input.tsx","../../../common/resources/client/ui/forms/input-field/date/date-range-picker/date-picker-field.tsx","../../../common/resources/client/ui/forms/input-field/date/utils.ts","../../../common/resources/client/ui/forms/input-field/date/use-base-date-picker-state.ts","../../../common/resources/client/utils/date/start-of-day.ts","../../../common/resources/client/utils/date/end-of-day.ts","../../../common/resources/client/ui/forms/input-field/date/date-range-picker/use-date-range-picker-state.ts","../../../common/resources/client/icons/material/ArrowRightAlt.tsx","../../../common/resources/client/ui/forms/input-field/date/segments/utils/adjust-segment.ts","../../../common/resources/client/ui/forms/input-field/date/segments/utils/set-segment.ts","../../../common/resources/client/ui/forms/input-field/date/segments/utils/page-step.ts","../../../common/resources/client/ui/forms/input-field/date/segments/editable-date-segment.tsx","../../../common/resources/client/ui/forms/input-field/date/segments/literal-segment.tsx","../../../common/resources/client/ui/forms/input-field/date/segments/utils/get-segment-limits.ts","../../../common/resources/client/ui/forms/input-field/date/segments/date-segment-list.tsx","../../../common/resources/client/ui/forms/input-field/date/calendar/calendar-cell.tsx","../../../common/resources/client/ui/forms/input-field/date/calendar/calendar-month.tsx","../../../common/resources/client/ui/forms/input-field/date/calendar/calendar.tsx","../../../common/resources/client/i18n/formatted-date-time-range.tsx","../../../common/resources/client/i18n/get-user-timezone.ts","../../../common/resources/client/ui/forms/input-field/date/date-range-picker/dialog/date-range-presets.ts","../../../common/resources/client/ui/forms/input-field/date/date-range-picker/dialog/date-range-preset-list.tsx","../../../common/resources/client/utils/hooks/is-tablet-media-query.ts","../../../common/resources/client/ui/forms/toggle/switch.tsx","../../../common/resources/client/ui/forms/input-field/date/date-range-picker/dialog/date-range-compare-presets.ts","../../../common/resources/client/ui/forms/input-field/date/date-range-picker/dialog/date-range-compare-preset-list.tsx","../../../common/resources/client/ui/forms/input-field/date/date-range-picker/dialog/date-range-dialog.tsx","../../../common/resources/client/ui/forms/input-field/date/date-range-picker/date-range-picker.tsx","../../../common/resources/client/ui/forms/input-field/date/date-range-picker/form-date-range-picker.tsx","../../../common/resources/client/datatable/filters/panels/date-range-filter-panel.tsx","../../../common/resources/client/datatable/filters/filter-operator-names.ts","../../../common/resources/client/datatable/filters/panels/input-filter-panel.tsx","../../../common/resources/client/ui/forms/input-field/chip-field/string-to-chip-value.ts","../../../common/resources/client/ui/forms/input-field/chip-field/chip-field.tsx","../../../common/resources/client/ui/forms/input-field/chip-field/form-chip-field.tsx","../../../common/resources/client/datatable/filters/panels/chip-field-filter-panel.tsx","../../../common/resources/client/i18n/formatted-number.tsx","../../../common/resources/client/datatable/filters/filter-list/filter-list-control.tsx","../../../common/resources/client/datatable/filters/filter-list/filter-list.tsx","../../../common/resources/client/icons/material/FilterAlt.tsx","../../../common/resources/client/ui/accordion/accordion.tsx","../../../common/resources/client/datatable/filters/panels/boolean-filter-panel.tsx","../../../common/resources/client/datatable/filters/add-filter-dialog.tsx","../../../common/resources/client/datatable/filters/add-filter-button.tsx","../../../common/resources/client/datatable/filters/timestamp-filters.ts","../../../common/resources/client/auth/user.ts","../../../common/resources/client/datatable/column-templates/name-with-avatar.tsx","../../../common/resources/client/icons/material/MoreVert.tsx","../../../common/resources/client/ui/buttons/button-group.tsx","../../../resources/client/agent/agent-ticket-page/canned-replies/requests/use-create-canned-reply.tsx","../../../resources/client/agent/agent-ticket-page/canned-replies/canned-reply-form.tsx","../../../resources/client/agent/agent-ticket-page/canned-replies/create-canned-reply-dialog.tsx","../../../common/resources/client/datatable/requests/paginated-resources.ts","../../../common/resources/client/datatable/page/data-table-context.ts","../../../common/resources/client/datatable/data-table-header.tsx","../../../common/resources/client/datatable/selected-state-datatable-header.tsx","../../../common/resources/client/datatable/filters/filter-list/filter-list-skeleton.tsx","../../../common/resources/client/datatable/data-table.tsx","../../../common/resources/client/datatable/page/data-table-page.tsx","../../../common/resources/client/icons/material/Add.tsx","../../../common/resources/client/datatable/data-table-add-item-button.tsx","../../../common/resources/client/datatable/requests/delete-selected-rows.ts","../../../common/resources/client/datatable/page/delete-selected-items-action.tsx","../../../resources/client/admin/canned-replies/online-articles.svg","../../../resources/client/admin/canned-replies/canned-replies-datatable-filters.ts","../../../resources/client/agent/agent-ticket-page/canned-replies/requests/use-delete-canned-replies.ts","../../../resources/client/agent/agent-ticket-page/canned-replies/requests/use-update-canned-reply.tsx","../../../resources/client/agent/agent-ticket-page/canned-replies/update-canned-reply-dialog.tsx","../../../common/resources/client/utils/string/truncate-string.ts","../../../common/resources/client/utils/string/strip-tags.ts","../../../resources/client/admin/canned-replies/canned-replies-datatable-columns.tsx","../../../resources/client/admin/canned-replies/canned-replies-datatable-page.tsx","../../../common/resources/client/ui/overlays/dialog/info-dialog-trigger/info-dialog-trigger-icon.tsx","../../../common/resources/client/ui/overlays/dialog/info-dialog-trigger/info-dialog-trigger.tsx","../../../common/resources/client/admin/users/requests/use-ban-user.ts","../../../common/resources/client/ui/forms/input-field/date/date-picker/use-date-picker-state.ts","../../../common/resources/client/ui/forms/input-field/date/date-picker/date-picker.tsx","../../../common/resources/client/admin/users/ban-user-dialog.tsx","../../../resources/client/admin/reports/search-report/search-report-table-columns.tsx","../../../common/resources/client/ui/forms/input-field/date/date-range-picker/date-range-value.ts","../../../resources/client/admin/reports/search-report/use-search-report.ts","../../../resources/client/admin/reports/search-report/search-report-table.tsx"],"sourcesContent":["import {UseQueryResult} from '@tanstack/react-query';\nimport {ProgressBar} from '@common/ui/progress/progress-bar';\nimport React from 'react';\n\ninterface Props {\n  query: UseQueryResult<unknown>;\n}\nexport function GlobalLoadingProgress({query}: Props) {\n  if (query.fetchStatus === 'fetching') {\n    return (\n      <ProgressBar\n        isIndeterminate\n        size=\"xs\"\n        className=\"fixed left-0 right-0 top-0\"\n      />\n    );\n  }\n  return null;\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {PaginationResponse} from '@common/http/backend-response/pagination-response';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {Tag} from '@common/tags/tag';\n\ninterface Response extends BackendResponse {\n  pagination: PaginationResponse<Tag>;\n}\n\ninterface Params {\n  type?: string;\n  notType?: string;\n  perPage?: number;\n  query?: string;\n}\n\nexport function useTags(params: Params) {\n  return useQuery({\n    queryKey: ['tags', params],\n    queryFn: () => fetchTags(params),\n  });\n}\n\nfunction fetchTags(params: Params) {\n  return apiClient\n    .get<Response>(`tags`, {\n      params: {paginate: 'simple', ...params},\n    })\n    .then(response => response.data);\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const DeleteIcon = createSvgIcon(\n  <path d=\"M16 9v10H8V9h8m-1.5-6h-5l-1 1H5v2h14V4h-3.5l-1-1zM18 7H6v12c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7z\" />\n, 'DeleteOutlined');\n","import React, {RefObject} from 'react';\n\nexport interface TabsContext {\n  selectedTab: number;\n  setSelectedTab: (newTab: number) => void;\n  tabsRef: RefObject<HTMLElement[]>;\n  size: 'sm' | 'md';\n  isLazy?: boolean;\n  id: string;\n}\n\nexport const TabContext = React.createContext<TabsContext>(null!);\n","import React, {ReactElement, useId, useMemo, useRef} from 'react';\nimport clsx from 'clsx';\nimport {useControlledState} from '@react-stately/utils';\nimport {TabContext, TabsContext} from './tabs-context';\nimport {TabListProps} from './tab-list';\nimport {TabPanelsProps} from './tab-panels';\n\nexport interface TabsProps {\n  children: [ReactElement<TabListProps>, ReactElement<TabPanelsProps>];\n  size?: 'sm' | 'md';\n  className?: string;\n  selectedTab?: number;\n  defaultSelectedTab?: number;\n  onTabChange?: (newTab: number) => void;\n  isLazy?: boolean;\n  overflow?: string;\n}\n\nexport function Tabs(props: TabsProps) {\n  const {\n    size = 'md',\n    children,\n    className,\n    isLazy,\n    overflow = 'overflow-hidden',\n  } = props;\n\n  const tabsRef = useRef<HTMLButtonElement[]>([]);\n  const id = useId();\n\n  const [selectedTab, setSelectedTab] = useControlledState(\n    props.selectedTab,\n    props.defaultSelectedTab || 0,\n    props.onTabChange\n  );\n\n  const ContextValue: TabsContext = useMemo(() => {\n    return {\n      selectedTab,\n      setSelectedTab,\n      tabsRef,\n      size,\n      isLazy,\n      id,\n    };\n  }, [selectedTab, id, isLazy, setSelectedTab, size]);\n\n  return (\n    <TabContext.Provider value={ContextValue}>\n      <div className={clsx(className, overflow, 'max-w-full')}>{children}</div>\n    </TabContext.Provider>\n  );\n}\n","import React, {JSXElementConstructor, ReactNode, useContext} from 'react';\nimport clsx from 'clsx';\nimport {useFocusManager} from '@react-aria/focus';\nimport {TabContext} from './tabs-context';\nimport {LinkProps} from 'react-router-dom';\n\nexport interface TabProps {\n  className?: string;\n  index?: number;\n  children: ReactNode;\n  isDisabled?: boolean;\n  padding?: string;\n  elementType?: 'button' | 'a' | JSXElementConstructor<any>;\n  to?: LinkProps['to'];\n  relative?: LinkProps['relative'];\n  replace?: LinkProps['replace'];\n  width?: string;\n}\nexport function Tab({\n  index,\n  className,\n  isDisabled,\n  children,\n  padding: paddingProp,\n  elementType = 'button',\n  to,\n  relative,\n  width = 'min-w-min',\n}: TabProps) {\n  const {\n    selectedTab,\n    setSelectedTab,\n    tabsRef,\n    size = 'md',\n    id,\n  } = useContext(TabContext);\n  const isSelected = index === selectedTab;\n  const focusManager = useFocusManager();\n  const padding = paddingProp || (size === 'sm' ? 'px-12' : 'px-18');\n\n  const mergedClassname = clsx(\n    'tracking-wide overflow-hidden capitalize text-sm flex items-center justify-center outline-none transition-colors',\n    'focus-visible:ring focus-visible:ring-2 ring-inset rounded whitespace-nowrap cursor-pointer',\n    width,\n    textColor({isDisabled, isSelected}),\n    className,\n    size === 'md' && `${padding} h-48`,\n    size === 'sm' && `${padding} h-32`,\n    isDisabled && 'pointer-events-none',\n  );\n\n  const onKeyDown = (e: React.KeyboardEvent<HTMLButtonElement>) => {\n    switch (e.key) {\n      case 'ArrowLeft':\n        focusManager?.focusPrevious();\n        break;\n      case 'ArrowRight':\n        focusManager?.focusNext();\n        break;\n      case 'Home':\n        focusManager?.focusFirst();\n        break;\n      case 'End':\n        focusManager?.focusLast();\n        break;\n    }\n  };\n\n  const tabIndex = isSelected ? 0 : -1;\n  const Element = elementType;\n\n  return (\n    <Element\n      disabled={isDisabled}\n      id={`${id}-${index}-tab`}\n      aria-controls={`${id}-${index}-tabpanel`}\n      type=\"button\"\n      role=\"tab\"\n      aria-selected={isSelected}\n      tabIndex={isDisabled ? undefined : tabIndex}\n      onKeyDown={onKeyDown}\n      onClick={() => {\n        setSelectedTab(index!);\n      }}\n      to={to}\n      relative={relative}\n      className={mergedClassname}\n      ref={(el: HTMLElement) => {\n        if (tabsRef.current && el) {\n          tabsRef.current[index!] = el;\n        }\n      }}\n    >\n      {children}\n    </Element>\n  );\n}\n\ninterface TextColorProps {\n  isDisabled?: boolean;\n  isSelected: boolean;\n}\nfunction textColor({isDisabled, isSelected}: TextColorProps): string {\n  if (isDisabled) {\n    return 'text-disabled cursor-default';\n  }\n  if (isSelected) {\n    return 'text-primary';\n  }\n  return 'text-muted hover:text-main';\n}\n","import React, {useContext, useState} from 'react';\nimport {useLayoutEffect} from '@react-aria/utils';\nimport clsx from 'clsx';\nimport {TabContext} from './tabs-context';\n\ninterface TabLineStyle {\n  width?: string;\n  transform?: string;\n  className?: string;\n}\n\nexport function TabLine() {\n  const {tabsRef, selectedTab} = useContext(TabContext);\n  const [style, setStyle] = useState<TabLineStyle>({\n    width: undefined,\n    transform: undefined,\n    className: undefined,\n  });\n\n  useLayoutEffect(() => {\n    if (selectedTab != null && tabsRef.current) {\n      const el = tabsRef.current[selectedTab];\n      if (!el) return;\n\n      setStyle(prevState => {\n        return {\n          width: `${el.offsetWidth}px`,\n          transform: `translateX(${el.offsetLeft}px)`,\n          // disable initial transition for tabline\n          className: prevState.width === undefined ? '' : 'transition-all',\n        };\n      });\n    }\n  }, [setStyle, selectedTab, tabsRef]);\n\n  return (\n    <div\n      className={clsx(\n        'absolute bottom-0 left-0 h-2 bg-primary',\n        style.className\n      )}\n      role=\"presentation\"\n      style={{width: style.width, transform: style.transform}}\n    />\n  );\n}\n","import React, {Children, cloneElement, isValidElement, ReactNode} from 'react';\nimport clsx from 'clsx';\nimport {FocusScope} from '@react-aria/focus';\nimport {TabProps} from './tab';\nimport {TabLine} from './tab-line';\n\nexport interface TabListProps {\n  children: ReactNode;\n  // center tabs within tablist\n  center?: boolean;\n  // expand tabs to fill in tablist space fully. By default, tabs are only as wide as their content.\n  expand?: boolean;\n  className?: string;\n}\nexport function TabList({children, center, expand, className}: TabListProps) {\n  const childrenArray = Children.toArray(children);\n\n  return (\n    <FocusScope>\n      <div\n        className={clsx(\n          // hide scrollbar completely on mobile, show compact one on desktop\n          'flex relative max-w-full overflow-auto border-b max-sm:hidden-scrollbar md:compact-scrollbar',\n          className\n        )}\n        role=\"tablist\"\n        aria-orientation=\"horizontal\"\n      >\n        {childrenArray.map((child, index) => {\n          if (isValidElement<TabProps>(child)) {\n            return cloneElement<TabProps>(child, {\n              index,\n              className: clsx(\n                child.props.className,\n                expand && 'flex-auto',\n                center && index === 0 && 'ml-auto',\n                center && index === childrenArray.length - 1 && 'mr-auto'\n              ),\n            });\n          }\n          return null;\n        })}\n        <TabLine />\n      </div>\n    </FocusScope>\n  );\n}\n","export const BackendFiltersUrlKey = 'filters';\n","import {FilterListValue} from './encode-backend-filters';\n\nexport function decodeBackendFilters(\n  encodedFilters: string | null\n): FilterListValue[] {\n  if (!encodedFilters) return [];\n  let filtersFromQuery: FilterListValue[] = [];\n  try {\n    filtersFromQuery = JSON.parse(atob(decodeURIComponent(encodedFilters)));\n    filtersFromQuery.map(filterValue => {\n      // set value key as value so selects work properly\n      if (filterValue.valueKey != null) {\n        filterValue.value = filterValue.valueKey;\n      }\n      return filterValue;\n    });\n  } catch (e) {\n    //\n  }\n  return filtersFromQuery;\n}\n","import {Key} from 'react';\nimport {BackendFilter} from '../backend-filter';\n\nexport interface FilterListValue {\n  key: Key;\n  value: BackendFilter['control']['defaultValue'];\n  operator?: BackendFilter['defaultOperator'];\n  valueKey?: Key;\n  isInactive?: boolean;\n  extraFilters?: {key: string; operator: string; value: any}[];\n}\n\nexport function encodeBackendFilters(\n  filterValues: FilterListValue[] | null,\n  filters?: BackendFilter[]\n): string {\n  if (!filterValues) return '';\n\n  // prepare values for backend\n  filterValues = !filters\n    ? filterValues\n    : filterValues\n        .filter(item => item.value !== '')\n        .map(item => transformValue(item, filters));\n\n  // remove all placeholder filters\n  filterValues = filterValues.filter(fm => !fm.isInactive);\n\n  if (!filterValues.length) {\n    return '';\n  }\n\n  return encodeURIComponent(btoa(JSON.stringify(filterValues)));\n}\n\nfunction transformValue(\n  filterValue: FilterListValue,\n  filters: BackendFilter[]\n) {\n  const filterConfig = filters.find(f => f.key === filterValue.key);\n  // select components will use a key always, because we can't use objects as\n  // value. Map over select options and replace key with actual value\n  if (filterConfig?.control.type === 'select') {\n    const option = (filterConfig.control.options || []).find(\n      o => o.key === filterValue.value\n    );\n    // if it's language or country select, there might not be an option\n    if (option) {\n      return {...filterValue, value: option.value, valueKey: option.key};\n    }\n  }\n\n  if (filterConfig?.extraFilters?.length) {\n    filterValue['extraFilters'] = filterConfig.extraFilters;\n  }\n\n  return filterValue;\n}\n","import {useNavigate, useSearchParams} from 'react-router-dom';\nimport {Key, useCallback, useMemo} from 'react';\nimport {BackendFilter} from './backend-filter';\nimport {BackendFiltersUrlKey} from './backend-filters-url-key';\nimport {decodeBackendFilters} from './utils/decode-backend-filters';\nimport {\n  encodeBackendFilters,\n  FilterListValue,\n} from './utils/encode-backend-filters';\n\nexport function useBackendFilterUrlParams(\n  filters?: BackendFilter[],\n  pinnedFilters?: string[]\n) {\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n\n  const encodedFilters = searchParams.get(BackendFiltersUrlKey);\n\n  const decodedFilters: FilterListValue[] = useMemo(() => {\n    if (!filters) return [];\n    const decoded = decodeBackendFilters(encodedFilters);\n\n    // if filter is pinned, and it is not applied yet, add a placeholder\n    (pinnedFilters || []).forEach(key => {\n      if (!decoded.find(f => f.key === key)) {\n        const config = filters.find(f => f.key === key)!;\n        decoded.push({\n          key,\n          value: config.control.defaultValue,\n          operator: config.defaultOperator,\n          isInactive: true,\n        });\n      }\n    });\n\n    // preserve original filter order from configuration\n    decoded.sort(\n      (a, b) =>\n        filters.findIndex(f => f.key === a.key) -\n        filters.findIndex(f => f.key === b.key)\n    );\n\n    return decoded;\n  }, [encodedFilters, pinnedFilters, filters]);\n\n  const getDecodedWithoutKeys = useCallback(\n    (values: (FilterListValue | Key)[]) => {\n      const newFilters = [...decodedFilters];\n      values.forEach(value => {\n        const key = typeof value === 'object' ? value.key : value;\n        const index = newFilters.findIndex(f => f.key === key);\n        if (index > -1) {\n          newFilters.splice(index, 1);\n        }\n      });\n      return newFilters;\n    },\n    [decodedFilters]\n  );\n\n  const replaceAll = useCallback(\n    (filterValues: FilterListValue[]) => {\n      const encodedFilters = encodeBackendFilters(filterValues, filters);\n      if (encodedFilters) {\n        searchParams.set(BackendFiltersUrlKey, encodedFilters);\n      } else {\n        searchParams.delete(BackendFiltersUrlKey);\n      }\n      navigate({search: `?${searchParams}`}, {replace: true});\n    },\n    [filters, navigate, searchParams]\n  );\n\n  const add = useCallback(\n    (filterValues: FilterListValue[]) => {\n      const existing = getDecodedWithoutKeys(filterValues);\n      const decodedFilters = [...existing, ...filterValues];\n      replaceAll(decodedFilters);\n    },\n    [getDecodedWithoutKeys, replaceAll]\n  );\n\n  const remove = useCallback(\n    (key: Key) => replaceAll(getDecodedWithoutKeys([key])),\n    [getDecodedWithoutKeys, replaceAll]\n  );\n\n  return {\n    add,\n    remove,\n    replaceAll,\n    decodedFilters,\n    encodedFilters,\n  };\n}\n","import {ComponentType} from 'react';\nimport {MessageDescriptor} from '../../i18n/message-descriptor';\nimport {NormalizedModel} from '@common/datatable/filters/normalized-model';\nimport {ChipValue} from '@common/ui/forms/input-field/chip-field/chip-field';\nimport {AbsoluteDateRange} from '@common/ui/forms/input-field/date/date-range-picker/form-date-range-picker';\nimport {DateValue} from '@internationalized/date';\nimport {FilterListControlProps} from '@common/datatable/filters/filter-list/filter-list-control';\n\nexport interface FilterSelectControl {\n  type: FilterControlType.Select;\n  options: {label: MessageDescriptor; key: string | number; value: any}[];\n  defaultValue?: string | number | boolean;\n  placeholder?: MessageDescriptor;\n  searchPlaceholder?: MessageDescriptor;\n  showSearchField?: boolean;\n}\n\nexport interface FilterNumberInputControl {\n  type: FilterControlType.Input;\n  placeholder?: MessageDescriptor;\n  inputType: 'number';\n  minValue?: number;\n  maxValue?: number;\n  defaultValue: number;\n}\n\nexport interface FilterTextInputControl {\n  type: FilterControlType.Input;\n  placeholder?: MessageDescriptor;\n  inputType: 'string';\n  minLength?: number;\n  maxLength?: number;\n  defaultValue: string;\n}\n\nexport interface FilterSelectModelControl {\n  type: FilterControlType.SelectModel;\n  model: string;\n  defaultValue?: NormalizedModel;\n}\n\nexport interface FilterChipFieldControl {\n  type: FilterControlType.ChipField;\n  options: FilterSelectControl['options'];\n  placeholder?: MessageDescriptor;\n  defaultValue: ChipValue[];\n}\n\nexport interface FilterBooleanToggleControl {\n  type: FilterControlType.BooleanToggle;\n  // value can be something other than boolean, toggling will either send that value or nothing\n  defaultValue: string | number | boolean | null;\n}\n\nexport interface DatePickerFilterControl {\n  type: FilterControlType.DateRangePicker;\n  defaultValue: AbsoluteDateRange;\n  min?: DateValue;\n  max?: DateValue;\n}\n\nexport interface CustomFilterControl {\n  type: FilterControlType.Custom;\n  panel: ComponentType<{filter: BackendFilter<CustomFilterControl>}>;\n  listItem: ComponentType<FilterListControlProps<number, CustomFilterControl>>;\n  defaultValue?: any;\n}\n\nexport type FilterControl =\n  | FilterSelectControl\n  | FilterNumberInputControl\n  | FilterTextInputControl\n  | FilterSelectModelControl\n  | FilterChipFieldControl\n  | DatePickerFilterControl\n  | FilterBooleanToggleControl\n  | CustomFilterControl;\n\nexport interface BackendFilter<T = FilterControl> {\n  key: string;\n  label: MessageDescriptor;\n  description?: MessageDescriptor;\n  control: T;\n  defaultOperator: FilterOperator;\n  operators?: FilterOperator[];\n  extraFilters?: {key: string; operator: FilterOperator; value: any}[];\n}\n\nexport enum FilterControlType {\n  Select = 'select',\n  DateRangePicker = 'dateRangePicker',\n  SelectModel = 'selectModel',\n  Input = 'input',\n  BooleanToggle = 'booleanToggle',\n  ChipField = 'chipField',\n  Custom = 'custom',\n}\n\nexport enum FilterOperator {\n  eq = '=',\n  ne = '!=',\n  gt = '>',\n  gte = '>=',\n  lt = '<',\n  lte = '<=',\n  has = 'has',\n  hasAll = 'hasAll',\n  doesntHave = 'doesntHave',\n  between = 'between',\n}\n\nexport const ALL_PRIMITIVE_OPERATORS = [\n  FilterOperator.eq,\n  FilterOperator.ne,\n  FilterOperator.gt,\n  FilterOperator.gte,\n  FilterOperator.lt,\n  FilterOperator.lte,\n];\n","import {BackendFilter, FilterControlType} from '../backend-filter';\nimport {ComponentPropsWithRef, forwardRef, ReactNode} from 'react';\nimport {Button} from '@common/ui/buttons/button';\nimport {KeyboardArrowDownIcon} from '@common/icons/material/KeyboardArrowDown';\nimport {Trans} from '@common/i18n/trans';\nimport clsx from 'clsx';\n\ninterface TriggerButtonProps\n  extends Omit<ComponentPropsWithRef<'button'>, 'color'> {\n  isInactive?: boolean;\n  filter: BackendFilter;\n  children?: ReactNode;\n}\nexport const FilterListTriggerButton = forwardRef<\n  HTMLButtonElement,\n  TriggerButtonProps\n>((props, ref) => {\n  // pass through all props from menu trigger and dialog trigger to button\n  const {isInactive, filter, ...domProps} = props;\n\n  if (isInactive) {\n    return <InactiveFilterButton filter={filter} {...domProps} ref={ref} />;\n  }\n\n  return <ActiveFilterButton filter={filter} {...domProps} ref={ref} />;\n});\n\ninterface InactiveFilterButtonProps\n  extends Omit<ComponentPropsWithRef<'button'>, 'color'> {\n  filter: BackendFilter;\n}\nexport const InactiveFilterButton = forwardRef<\n  HTMLButtonElement,\n  InactiveFilterButtonProps\n>(({filter, ...domProps}, ref) => {\n  return (\n    <Button\n      variant=\"outline\"\n      size=\"xs\"\n      color=\"paper\"\n      radius=\"rounded-md\"\n      border=\"border\"\n      ref={ref}\n      endIcon={<KeyboardArrowDownIcon />}\n      {...domProps}\n    >\n      <Trans {...filter.label} />\n    </Button>\n  );\n});\n\nexport const ActiveFilterButton = forwardRef<\n  HTMLButtonElement,\n  InactiveFilterButtonProps\n>(({filter, children, ...domProps}, ref) => {\n  const isBoolean = filter.control.type === FilterControlType.BooleanToggle;\n  return (\n    <Button\n      variant=\"outline\"\n      size=\"xs\"\n      color=\"primary\"\n      radius=\"rounded-r-md\"\n      border=\"border-y border-r\"\n      endIcon={!isBoolean && <KeyboardArrowDownIcon />}\n      ref={ref}\n      {...domProps}\n    >\n      <span\n        className={clsx(\n          !isBoolean && 'border-r border-r-primary-light mr-8 pr-8'\n        )}\n      >\n        <Trans {...filter.label} />\n      </span>\n      {children}\n    </Button>\n  );\n});\n","import {FormSelect} from '@common/ui/forms/select/select';\nimport {Item} from '@common/ui/forms/listbox/item';\nimport {Trans} from '@common/i18n/trans';\nimport {FilterPanelProps} from '@common/datatable/filters/panels/filter-panel-props';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {FilterSelectControl} from '@common/datatable/filters/backend-filter';\n\nexport function SelectFilterPanel({\n  filter,\n}: FilterPanelProps<FilterSelectControl>) {\n  const {trans} = useTrans();\n\n  return (\n    <FormSelect\n      size=\"sm\"\n      name={`${filter.key}.value`}\n      selectionMode=\"single\"\n      showSearchField={filter.control.showSearchField}\n      placeholder={\n        filter.control.placeholder\n          ? trans(filter.control.placeholder)\n          : undefined\n      }\n      searchPlaceholder={\n        filter.control.searchPlaceholder\n          ? trans(filter.control.searchPlaceholder)\n          : undefined\n      }\n    >\n      {filter.control.options.map(option => (\n        <Item key={option.key} value={option.key}>\n          <Trans {...option.label} />\n        </Item>\n      ))}\n    </FormSelect>\n  );\n}\n","import {DialogTrigger} from '../../../ui/overlays/dialog/dialog-trigger';\nimport {FilterListTriggerButton} from './filter-list-trigger-button';\nimport {ReactNode} from 'react';\nimport {useForm} from 'react-hook-form';\nimport {FilterItemFormValue} from '../add-filter-dialog';\nimport {useDialogContext} from '../../../ui/overlays/dialog/dialog-context';\nimport {Dialog} from '../../../ui/overlays/dialog/dialog';\nimport {DialogHeader} from '../../../ui/overlays/dialog/dialog-header';\nimport {Trans} from '../../../i18n/trans';\nimport {DialogBody} from '../../../ui/overlays/dialog/dialog-body';\nimport {Form} from '../../../ui/forms/form';\nimport {DialogFooter} from '../../../ui/overlays/dialog/dialog-footer';\nimport {Button} from '../../../ui/buttons/button';\nimport {FilterListControlProps} from './filter-list-control';\n\ninterface FilterListItemDialogTriggerProps extends FilterListControlProps<any> {\n  label: ReactNode;\n  panel: ReactNode;\n}\nexport function FilterListItemDialogTrigger(\n  props: FilterListItemDialogTriggerProps\n) {\n  const {onValueChange, isInactive, filter, label} = props;\n  return (\n    <DialogTrigger\n      offset={10}\n      type=\"popover\"\n      onClose={(value?: FilterItemFormValue) => {\n        if (value !== undefined) {\n          onValueChange(value);\n        }\n      }}\n    >\n      <FilterListTriggerButton isInactive={isInactive} filter={filter}>\n        {label}\n      </FilterListTriggerButton>\n      <FilterListControlDialog {...props} />\n    </DialogTrigger>\n  );\n}\n\nexport function FilterListControlDialog({\n  filter,\n  panel,\n  value,\n  operator,\n}: FilterListItemDialogTriggerProps) {\n  const form = useForm<Record<string, FilterItemFormValue>>({\n    defaultValues: {\n      [filter.key]: {value, operator},\n    },\n  });\n  const {close, formId} = useDialogContext();\n  return (\n    <Dialog size=\"xs\">\n      <DialogHeader>\n        <Trans {...filter.label} />\n      </DialogHeader>\n      <DialogBody padding=\"px-14 pt-14 pb-4 max-h-288\">\n        <Form\n          form={form}\n          id={formId}\n          onSubmit={formValue => {\n            close(formValue[filter.key]);\n          }}\n        >\n          {filter.description && (\n            <div className=\"text-muted text-xs mb-14\">\n              <Trans {...filter.description} />\n            </div>\n          )}\n          {panel}\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button\n          form={formId}\n          type=\"submit\"\n          variant=\"flat\"\n          color=\"primary\"\n          size=\"xs\"\n        >\n          <Trans message=\"Apply\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {\n  keepPreviousData,\n  useQuery,\n  UseQueryOptions,\n} from '@tanstack/react-query';\nimport {NormalizedModel} from '../../datatable/filters/normalized-model';\nimport {apiClient} from '../../http/query-client';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\n\ninterface Response extends BackendResponse {\n  results: NormalizedModel[];\n}\n\ninterface Params {\n  query?: string;\n  perPage?: number;\n  with?: string;\n}\n\nexport function useNormalizedModels(\n  endpoint: string,\n  queryParams: Params,\n  queryOptions?: Omit<\n    UseQueryOptions<Response, unknown, Response, [string, Params]>,\n    'queryKey' | 'queryFn'\n  > | null,\n) {\n  return useQuery({\n    queryKey: [endpoint, queryParams],\n    queryFn: () => fetchModels(endpoint, queryParams),\n    placeholderData: keepPreviousData,\n    ...queryOptions,\n  });\n}\n\nasync function fetchModels(endpoint: string, params: Params) {\n  return apiClient.get<Response>(endpoint, {params}).then(r => r.data);\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {NormalizedModel} from '../../datatable/filters/normalized-model';\nimport {apiClient} from '../../http/query-client';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\n\ninterface Response extends BackendResponse {\n  model: NormalizedModel;\n}\n\nexport function useNormalizedModel(\n  endpoint: string,\n  queryParams?: Record<string, string>,\n  queryOptions?: {enabled?: boolean},\n) {\n  return useQuery({\n    queryKey: [endpoint, queryParams],\n    queryFn: () => fetchModel(endpoint, queryParams),\n    ...queryOptions,\n  });\n}\n\nasync function fetchModel(\n  endpoint: string,\n  params?: Record<string, string>,\n): Promise<Response> {\n  return apiClient.get(endpoint, {params}).then(r => r.data);\n}\n","import React, {ReactNode, useRef, useState} from 'react';\nimport {useTrans} from '../../i18n/use-trans';\nimport {Trans} from '../../i18n/trans';\nimport {Avatar} from '../images/avatar';\nimport {Tooltip} from '../tooltip/tooltip';\nimport {IconButton} from '../buttons/icon-button';\nimport {EditIcon} from '../../icons/material/Edit';\nimport {message} from '../../i18n/message';\nimport {Item} from './listbox/item';\nimport {useController, useFormContext} from 'react-hook-form';\nimport {useControlledState} from '@react-stately/utils';\nimport {getInputFieldClassNames} from './input-field/get-input-field-class-names';\nimport clsx from 'clsx';\nimport {Skeleton} from '../skeleton/skeleton';\nimport {useNormalizedModels} from '../../users/queries/use-normalized-models';\nimport {useNormalizedModel} from '../../users/queries/use-normalized-model';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {opacityAnimation} from '../animation/opacity-animation';\nimport {Select} from '@common/ui/forms/select/select';\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\nimport {BaseFieldProps} from '@common/ui/forms/input-field/base-field-props';\n\ninterface NormalizedModelFieldProps {\n  label?: ReactNode;\n  className?: string;\n  background?: BaseFieldProps['background'];\n  value?: string | number;\n  placeholder?: MessageDescriptor;\n  searchPlaceholder?: MessageDescriptor;\n  defaultValue?: string | number;\n  onChange?: (value: string | number) => void;\n  invalid?: boolean;\n  errorMessage?: string;\n  description?: ReactNode;\n  autoFocus?: boolean;\n  queryParams?: Record<string, string>;\n  endpoint: string;\n  disabled?: boolean;\n  required?: boolean;\n}\nexport function NormalizedModelField({\n  label,\n  className,\n  background,\n  value,\n  defaultValue = '',\n  placeholder = message('Select item...'),\n  searchPlaceholder = message('Find an item...'),\n  onChange,\n  description,\n  errorMessage,\n  invalid,\n  autoFocus,\n  queryParams,\n  endpoint,\n  disabled,\n  required,\n}: NormalizedModelFieldProps) {\n  const inputRef = useRef<HTMLButtonElement>(null);\n  const [inputValue, setInputValue] = useState('');\n  const [selectedValue, setSelectedValue] = useControlledState(\n    value,\n    defaultValue,\n    onChange,\n  );\n  const query = useNormalizedModels(endpoint, {\n    query: inputValue,\n    ...queryParams,\n  });\n  const {trans} = useTrans();\n\n  const fieldClassNames = getInputFieldClassNames({size: 'md'});\n\n  if (selectedValue) {\n    return (\n      <div className={className}>\n        <div className={fieldClassNames.label}>{label}</div>\n        <div\n          className={clsx(\n            'rounded-input border p-8',\n            background,\n            invalid && 'border-danger',\n          )}\n        >\n          <AnimatePresence initial={false} mode=\"wait\">\n            <SelectedModelPreview\n              disabled={disabled}\n              endpoint={endpoint}\n              modelId={selectedValue}\n              queryParams={queryParams}\n              onEditClick={() => {\n                setSelectedValue('');\n                setInputValue('');\n                requestAnimationFrame(() => {\n                  inputRef.current?.focus();\n                  inputRef.current?.click();\n                });\n              }}\n            />\n          </AnimatePresence>\n        </div>\n        {description && !errorMessage && (\n          <div className={fieldClassNames.description}>{description}</div>\n        )}\n        {errorMessage && (\n          <div className={fieldClassNames.error}>{errorMessage}</div>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <Select\n      className={className}\n      showSearchField\n      invalid={invalid}\n      errorMessage={errorMessage}\n      description={description}\n      color=\"white\"\n      isAsync\n      background={background}\n      placeholder={trans(placeholder)}\n      searchPlaceholder={trans(searchPlaceholder)}\n      label={label}\n      isLoading={query.isFetching}\n      items={query.data?.results}\n      inputValue={inputValue}\n      onInputValueChange={setInputValue}\n      selectionMode=\"single\"\n      selectedValue={selectedValue}\n      onSelectionChange={setSelectedValue}\n      ref={inputRef}\n      autoFocus={autoFocus}\n      disabled={disabled}\n      required={required}\n    >\n      {model => (\n        <Item\n          value={model.id}\n          key={model.id}\n          description={model.description}\n          startIcon={<Avatar src={model.image} />}\n        >\n          {model.name}\n        </Item>\n      )}\n    </Select>\n  );\n}\n\ninterface SelectedModelPreviewProps {\n  modelId: string | number;\n  selectedValue?: number | string;\n  onEditClick?: () => void;\n  endpoint?: string;\n  disabled?: boolean;\n  queryParams?: NormalizedModelFieldProps['queryParams'];\n}\nfunction SelectedModelPreview({\n  modelId,\n  onEditClick,\n  endpoint,\n  disabled,\n  queryParams,\n}: SelectedModelPreviewProps) {\n  const {data, isLoading} = useNormalizedModel(\n    `${endpoint}/${modelId}`,\n    queryParams,\n  );\n\n  if (isLoading || !data?.model) {\n    return <LoadingSkeleton key=\"skeleton\" />;\n  }\n\n  return (\n    <m.div\n      className={clsx(\n        'flex items-center gap-10',\n        disabled && 'pointer-events-none cursor-not-allowed text-disabled',\n      )}\n      key=\"preview\"\n      {...opacityAnimation}\n    >\n      {data.model.image && <Avatar src={data.model.image} />}\n      <div>\n        <div className=\"text-sm leading-4\">{data.model.name}</div>\n        <div className=\"text-xs text-muted\">{data.model.description}</div>\n      </div>\n      <Tooltip label={<Trans message=\"Change item\" />}>\n        <IconButton\n          className=\"ml-auto text-muted\"\n          size=\"sm\"\n          onClick={onEditClick}\n          disabled={disabled}\n        >\n          <EditIcon />\n        </IconButton>\n      </Tooltip>\n    </m.div>\n  );\n}\n\nfunction LoadingSkeleton() {\n  return (\n    <m.div className=\"flex items-center gap-10\" {...opacityAnimation}>\n      <Skeleton variant=\"rect\" size=\"w-32 h-32\" />\n      <div className=\"max-h-[36px] flex-auto\">\n        <Skeleton className=\"text-xs\" />\n        <Skeleton className=\"max-h-8 text-xs\" />\n      </div>\n      <Skeleton variant=\"icon\" size=\"w-24 h-24\" />\n    </m.div>\n  );\n}\n\ninterface FormNormalizedModelFieldProps extends NormalizedModelFieldProps {\n  name: string;\n}\nexport function FormNormalizedModelField({\n  name,\n  ...fieldProps\n}: FormNormalizedModelFieldProps) {\n  const {clearErrors} = useFormContext();\n  const {\n    field: {onChange, value = ''},\n    fieldState: {invalid, error},\n  } = useController({\n    name,\n  });\n\n  return (\n    <NormalizedModelField\n      value={value}\n      onChange={value => {\n        onChange(value);\n        clearErrors(name);\n      }}\n      invalid={invalid}\n      errorMessage={error?.message}\n      {...fieldProps}\n    />\n  );\n}\n","import {FilterPanelProps} from './filter-panel-props';\nimport {FormNormalizedModelField} from '@common/ui/forms/normalized-model-field';\nimport {FilterSelectModelControl} from '@common/datatable/filters/backend-filter';\n\nexport function NormalizedModelFilterPanel({\n  filter,\n}: FilterPanelProps<FilterSelectModelControl>) {\n  return (\n    <FormNormalizedModelField\n      name={`${filter.key}.value`}\n      endpoint={`normalized-models/${filter.control.model}`}\n    />\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const DateRangeIcon = createSvgIcon(\n  <path d=\"M7 11h2v2H7v-2zm14-5v14c0 1.1-.9 2-2 2H5c-1.11 0-2-.9-2-2l.01-14c0-1.1.88-2 1.99-2h1V2h2v2h8V2h2v2h1c1.1 0 2 .9 2 2zM5 8h14V6H5v2zm14 12V10H5v10h14zm-4-7h2v-2h-2v2zm-4 0h2v-2h-2v2z\" />\n, 'DateRangeOutlined');\n","import {FocusScope} from '@react-aria/focus';\nimport React, {ComponentPropsWithoutRef, CSSProperties, ReactNode} from 'react';\nimport clsx from 'clsx';\n\ninterface InputProps {\n  className?: string;\n  children: ReactNode;\n  autoFocus?: boolean;\n  disabled?: boolean;\n  style?: CSSProperties;\n  inputProps?: ComponentPropsWithoutRef<'div'>;\n  wrapperProps?: ComponentPropsWithoutRef<'div'>;\n  onClick?: React.MouseEventHandler<HTMLDivElement>;\n}\n\nexport const Input = React.forwardRef<HTMLDivElement, InputProps>(\n  (props, ref) => {\n    const {\n      children,\n      inputProps,\n      wrapperProps,\n      className,\n      autoFocus,\n      style,\n      onClick,\n    } = props;\n\n    return (\n      <div {...wrapperProps} onClick={onClick}>\n        <div\n          {...inputProps}\n          role=\"group\"\n          className={clsx(\n            className,\n            'flex items-center focus-within:ring focus-within:ring-primary/focus focus-within:border-primary/60'\n          )}\n          ref={ref}\n          style={style}\n        >\n          <FocusScope autoFocus={autoFocus}>{children}</FocusScope>\n        </div>\n      </div>\n    );\n  }\n);\n","import React, {ComponentPropsWithoutRef, FocusEventHandler, Ref} from 'react';\r\nimport clsx from 'clsx';\r\nimport {createFocusManager} from '@react-aria/focus';\r\nimport {mergeProps, useObjectRef} from '@react-aria/utils';\r\nimport {getInputFieldClassNames} from '../../get-input-field-class-names';\r\nimport {Field, FieldProps} from '../../field';\r\nimport {Input} from '../../input';\r\nimport {useField} from '../../use-field';\r\n\r\nexport interface DatePickerFieldProps\r\n  extends Omit<FieldProps, 'fieldClassNames'> {\r\n  inputRef?: Ref<HTMLDivElement>;\r\n  onBlur?: FocusEventHandler;\r\n  showCalendarFooter?: boolean;\r\n}\r\nexport const DatePickerField = React.forwardRef<\r\n  HTMLDivElement,\r\n  DatePickerFieldProps\r\n>(({inputRef, wrapperProps, children, onBlur, ...other}, ref) => {\r\n  const fieldClassNames = getInputFieldClassNames(other);\r\n  const objRef = useObjectRef(ref);\r\n\r\n  const {fieldProps, inputProps} = useField({\r\n    ...other,\r\n    focusRef: objRef,\r\n    labelElementType: 'span',\r\n  });\r\n\r\n  fieldClassNames.wrapper = clsx(\r\n    fieldClassNames.wrapper,\r\n    other.disabled && 'pointer-events-none',\r\n  );\r\n\r\n  return (\r\n    <Field\r\n      wrapperProps={mergeProps<ComponentPropsWithoutRef<'div'>[]>(\r\n        wrapperProps!,\r\n        {\r\n          onBlur: e => {\r\n            if (objRef.current && !objRef.current.contains(e.relatedTarget)) {\r\n              onBlur?.(e);\r\n            }\r\n          },\r\n          onClick: () => {\r\n            // focus first segment when clicking on label or somewhere else in the field, but no directly on segment\r\n            const focusManager = createFocusManager(objRef);\r\n            focusManager?.focusFirst();\r\n          },\r\n        },\r\n      )}\r\n      fieldClassNames={fieldClassNames}\r\n      ref={objRef}\r\n      {...fieldProps}\r\n    >\r\n      <Input\r\n        inputProps={inputProps}\r\n        className={clsx(fieldClassNames.input, 'gap-10')}\r\n        ref={inputRef}\r\n      >\r\n        {children}\r\n      </Input>\r\n    </Field>\r\n  );\r\n});\r\n","import {CalendarDate, DateValue} from '@internationalized/date';\n\nexport function getDefaultGranularity(date: DateValue) {\n  if (date instanceof CalendarDate) {\n    return 'day';\n  }\n  return 'minute';\n}\n\nexport function dateIsInvalid(\n  date: CalendarDate,\n  min?: DateValue,\n  max?: DateValue\n) {\n  return (\n    (min != null && date.compare(min) < 0) ||\n    (max != null && date.compare(max) > 0)\n  );\n}\n","import {useState} from 'react';\nimport {DateValue, toZoned, ZonedDateTime} from '@internationalized/date';\nimport {getDefaultGranularity} from './utils';\nimport type {DatePickerValueProps} from './date-picker/use-date-picker-state';\nimport {DateRangeValue} from './date-range-picker/date-range-value';\nimport {useUserTimezone} from '@common/i18n/use-user-timezone';\n\nexport function useBaseDatePickerState(\n  selectedDate: DateValue,\n  props:\n    | DatePickerValueProps<ZonedDateTime>\n    | DatePickerValueProps<Partial<DateRangeValue>, DateRangeValue>\n) {\n  const timezone = useUserTimezone();\n  const [calendarIsOpen, setCalendarIsOpen] = useState(false);\n  const closeDialogOnSelection = props.closeDialogOnSelection ?? true;\n\n  const granularity = props.granularity || getDefaultGranularity(selectedDate);\n  const min = props.min ? toZoned(props.min, timezone) : undefined;\n  const max = props.max ? toZoned(props.max, timezone) : undefined;\n\n  return {\n    timezone,\n    granularity,\n    min,\n    max,\n    calendarIsOpen,\n    setCalendarIsOpen,\n    closeDialogOnSelection,\n  };\n}\n","import {ZonedDateTime} from '@internationalized/date';\n\nexport function startOfDay(date: ZonedDateTime): ZonedDateTime {\n  return date.set({hour: 0, minute: 0, second: 0, millisecond: 0});\n}\n","import {ZonedDateTime} from '@internationalized/date';\n\nexport function endOfDay(date: ZonedDateTime): ZonedDateTime {\n  return date.set({\n    hour: 24 - 1,\n    minute: 60 - 1,\n    second: 60 - 1,\n    millisecond: 1000 - 1,\n  });\n}\n","import {useControlledState} from '@react-stately/utils';\nimport {HTMLAttributes, useCallback, useState} from 'react';\nimport {\n  CalendarDate,\n  DateValue,\n  endOfMonth,\n  isSameDay,\n  isSameMonth,\n  maxDate,\n  minDate,\n  startOfMonth,\n  toCalendarDate,\n  toZoned,\n  ZonedDateTime,\n} from '@internationalized/date';\nimport {\n  BaseDatePickerState,\n  DatePickerValueProps,\n} from '../date-picker/use-date-picker-state';\nimport {DateRangeValue} from './date-range-value';\nimport {useBaseDatePickerState} from '../use-base-date-picker-state';\nimport {startOfDay} from '@common/utils/date/start-of-day';\nimport {endOfDay} from '@common/utils/date/end-of-day';\nimport {useCurrentDateTime} from '@common/i18n/use-current-date-time';\n\nexport interface IsPlaceholderValue {\n  start: boolean;\n  end: boolean;\n}\n\nexport type DateRangePickerState = BaseDatePickerState<\n  DateRangeValue,\n  IsPlaceholderValue\n>;\n\nexport function useDateRangePickerState(\n  props: DatePickerValueProps<Partial<DateRangeValue>, DateRangeValue>,\n): DateRangePickerState {\n  const now = useCurrentDateTime();\n  const [isPlaceholder, setIsPlaceholder] = useState<IsPlaceholderValue>({\n    start: (!props.value || !props.value.start) && !props.defaultValue?.start,\n    end: (!props.value || !props.value.end) && !props.defaultValue?.end,\n  });\n\n  // if user clears the date, we will want to still keep an\n  // instance internally, but return null via \"onChange\" callback\n  const setStateValue = props.onChange;\n  const [internalValue, setInternalValue] = useControlledState(\n    props.value ? completeRange(props.value, now) : undefined,\n    !props.value ? completeRange(props.defaultValue, now) : undefined,\n    value => {\n      setIsPlaceholder({start: false, end: false});\n      setStateValue?.(value);\n    },\n  );\n\n  const {\n    min,\n    max,\n    granularity,\n    timezone,\n    calendarIsOpen,\n    setCalendarIsOpen,\n    closeDialogOnSelection,\n  } = useBaseDatePickerState(internalValue.start, props);\n\n  const clear = useCallback(() => {\n    setIsPlaceholder({start: true, end: true});\n    setInternalValue(completeRange(null, now));\n    setStateValue?.(null);\n    setCalendarIsOpen(false);\n  }, [now, setInternalValue, setStateValue, setCalendarIsOpen]);\n\n  const [anchorDate, setAnchorDate] = useState<CalendarDate | null>(null);\n  const [isHighlighting, setIsHighlighting] = useState(false);\n  const [highlightedRange, setHighlightedRange] =\n    useState<DateRangeValue>(internalValue);\n  const [calendarDates, setCalendarDates] = useState<CalendarDate[]>(() => {\n    return rangeToCalendarDates(internalValue, max);\n  });\n\n  const constrainRange = useCallback(\n    (range: DateRangeValue): DateRangeValue => {\n      let start = range.start;\n      let end = range.end;\n\n      // make sure start date is after min date and before max date/range end\n      if (min) {\n        start = maxDate(start, min);\n      }\n      const startMax = max ? minDate(max, end) : end;\n      start = minDate(start, startMax);\n\n      // make sure end date is after min date/range start and before max date\n      const endMin = min ? maxDate(min, start) : start;\n      end = maxDate(end, endMin);\n\n      if (max) {\n        end = minDate(end, max);\n      }\n\n      return {start: toZoned(start, timezone), end: toZoned(end, timezone)};\n    },\n    [min, max, timezone],\n  );\n\n  const setSelectedValue = useCallback(\n    (newRange: DateRangeValue) => {\n      const value = {\n        ...constrainRange(newRange),\n        preset: newRange.preset,\n      };\n      setInternalValue(value);\n      setHighlightedRange(value);\n      setCalendarDates(rangeToCalendarDates(value, max));\n      setIsPlaceholder({start: false, end: false});\n    },\n    [setInternalValue, constrainRange, max],\n  );\n\n  const dayIsActive = useCallback(\n    (day: CalendarDate) => {\n      return (\n        (!isPlaceholder.start && isSameDay(day, highlightedRange.start)) ||\n        (!isPlaceholder.end && isSameDay(day, highlightedRange.end))\n      );\n    },\n    [highlightedRange, isPlaceholder],\n  );\n\n  const dayIsHighlighted = useCallback(\n    (day: CalendarDate) => {\n      return (\n        (isHighlighting || (!isPlaceholder.start && !isPlaceholder.end)) &&\n        day.compare(highlightedRange.start) >= 0 &&\n        day.compare(highlightedRange.end) <= 0\n      );\n    },\n    [highlightedRange, isPlaceholder, isHighlighting],\n  );\n\n  const dayIsRangeStart = useCallback(\n    (day: CalendarDate) => isSameDay(day, highlightedRange.start),\n    [highlightedRange],\n  );\n\n  const dayIsRangeEnd = useCallback(\n    (day: CalendarDate) => isSameDay(day, highlightedRange.end),\n    [highlightedRange],\n  );\n\n  const getCellProps = useCallback(\n    (date: CalendarDate, isSameMonth: boolean): HTMLAttributes<HTMLElement> => {\n      return {\n        onPointerEnter: () => {\n          if (isHighlighting && isSameMonth) {\n            setHighlightedRange(\n              makeRange({start: anchorDate!, end: date, timezone}),\n            );\n          }\n        },\n        onClick: () => {\n          if (!isHighlighting) {\n            setIsHighlighting(true);\n            setAnchorDate(date);\n            setHighlightedRange(makeRange({start: date, end: date, timezone}));\n          } else {\n            const finalRange = makeRange({\n              start: anchorDate!,\n              end: date,\n              timezone,\n            });\n            // cast to start and end of day after making range, because \"makeRange\"\n            // will flip start and end dates, if they are out of order\n            finalRange.start = startOfDay(finalRange.start);\n            finalRange.end = endOfDay(finalRange.end);\n            setIsHighlighting(false);\n            setAnchorDate(null);\n            setSelectedValue?.(finalRange);\n            if (closeDialogOnSelection) {\n              setCalendarIsOpen?.(false);\n            }\n          }\n        },\n      };\n    },\n    [\n      anchorDate,\n      isHighlighting,\n      setSelectedValue,\n      setCalendarIsOpen,\n      closeDialogOnSelection,\n      timezone,\n    ],\n  );\n\n  return {\n    selectedValue: internalValue,\n    setSelectedValue,\n    calendarIsOpen,\n    setCalendarIsOpen,\n    dayIsActive,\n    dayIsHighlighted,\n    dayIsRangeStart,\n    dayIsRangeEnd,\n    getCellProps,\n    calendarDates,\n    setIsPlaceholder,\n    isPlaceholder,\n    clear,\n    setCalendarDates,\n    min,\n    max,\n    granularity,\n    timezone,\n    closeDialogOnSelection,\n  };\n}\n\nfunction rangeToCalendarDates(\n  range: DateRangeValue,\n  max?: DateValue,\n): CalendarDate[] {\n  let start = toCalendarDate(startOfMonth(range.start));\n  let end = toCalendarDate(endOfMonth(range.end));\n\n  // make sure we don't show the same month twice\n  if (isSameMonth(start, end)) {\n    end = endOfMonth(end.add({months: 1}));\n  }\n\n  // if next month is disabled, show previous instead\n  if (max && end.compare(max) > 0) {\n    end = start;\n    start = startOfMonth(start.subtract({months: 1}));\n  }\n  return [start, end];\n}\n\ninterface MakeRangeProps {\n  start: DateValue;\n  end: DateValue;\n  timezone: string;\n}\nfunction makeRange(props: MakeRangeProps): DateRangeValue {\n  const start = toZoned(props.start, props.timezone);\n  const end = toZoned(props.end, props.timezone);\n  if (start.compare(end) > 0) {\n    return {start: end, end: start};\n  }\n  return {start, end};\n}\n\nfunction completeRange(\n  range: Partial<DateRangeValue> | null | undefined,\n  now: ZonedDateTime,\n): DateRangeValue {\n  if (range?.start && range?.end) {\n    return range as DateRangeValue;\n  } else if (!range?.start && range?.end) {\n    range.start = range.end.subtract({months: 1});\n    return range as DateRangeValue;\n  } else if (!range?.end && range?.start) {\n    range.end = range.start.add({months: 1});\n    return range as DateRangeValue;\n  }\n  return {start: now, end: now.add({months: 1})};\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const ArrowRightAltIcon = createSvgIcon(\n  <path d=\"M16.01 11H4v2h12.01v3L20 12l-3.99-4v3z\" />\n, 'ArrowRightAltOutlined');\n","import {ZonedDateTime} from '@internationalized/date';\n\nexport function adjustSegment(\n  value: ZonedDateTime,\n  part: string,\n  amount: number,\n  options: Intl.ResolvedDateTimeFormatOptions\n) {\n  switch (part) {\n    case 'era':\n    case 'year':\n    case 'month':\n    case 'day':\n      return value.cycle(part, amount, {round: part === 'year'});\n  }\n\n  if ('hour' in value) {\n    switch (part) {\n      case 'dayPeriod': {\n        const hours = value.hour;\n        const isPM = hours >= 12;\n        return value.set({hour: isPM ? hours - 12 : hours + 12});\n      }\n      case 'hour':\n      case 'minute':\n      case 'second':\n        return value.cycle(part, amount, {\n          round: part !== 'hour',\n          hourCycle: options.hour12 ? 12 : 24,\n        });\n    }\n  }\n\n  return value;\n}\n","import {ZonedDateTime} from '@internationalized/date';\n\nexport function setSegment(\n  value: ZonedDateTime,\n  part: string,\n  segmentValue: number,\n  options: Intl.ResolvedDateTimeFormatOptions\n) {\n  switch (part) {\n    case 'day':\n    case 'month':\n    case 'year':\n      return value.set({[part]: segmentValue});\n  }\n\n  if ('hour' in value) {\n    switch (part) {\n      case 'dayPeriod': {\n        const hours = value.hour;\n        const wasPM = hours >= 12;\n        const isPM = segmentValue >= 12;\n        if (isPM === wasPM) {\n          return value;\n        }\n        return value.set({hour: wasPM ? hours - 12 : hours + 12});\n      }\n      case 'hour':\n        // In 12 hour time, ensure that AM/PM does not change\n        if (options.hour12) {\n          const hours = value.hour;\n          const wasPM = hours >= 12;\n          if (!wasPM && segmentValue === 12) {\n            segmentValue = 0;\n          }\n          if (wasPM && segmentValue < 12) {\n            segmentValue += 12;\n          }\n        }\n      // fallthrough\n      case 'minute':\n      case 'second':\n        return value.set({[part]: segmentValue});\n    }\n  }\n\n  return value;\n}\n","export const PAGE_STEP = {\n  year: 5,\n  month: 2,\n  day: 7,\n  hour: 2,\n  minute: 15,\n  second: 15,\n  dayPeriod: 1,\n};\n","import {useFocusManager} from '@react-aria/focus';\nimport React, {\n  ComponentPropsWithoutRef,\n  HTMLAttributes,\n  KeyboardEventHandler,\n  useMemo,\n  useRef,\n} from 'react';\nimport {NumberParser} from '@internationalized/number';\nimport {mergeProps} from '@react-aria/utils';\nimport {today, ZonedDateTime} from '@internationalized/date';\nimport {useSelectedLocale} from '@common/i18n/selected-locale';\nimport {useDateFormatter} from '@common/i18n/use-date-formatter';\nimport {DatePickerState} from '../date-picker/use-date-picker-state';\nimport {adjustSegment} from './utils/adjust-segment';\nimport {setSegment} from './utils/set-segment';\nimport {PAGE_STEP} from './utils/page-step';\nimport {DateRangePickerState} from '../date-range-picker/use-date-range-picker-state';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\n\nexport interface EditableSegment {\n  type: 'day' | 'dayPeriod' | 'hour' | 'minute' | 'month' | 'second' | 'year';\n  text: string;\n  value: number;\n  minValue: number;\n  maxValue: number;\n  minLength: number;\n}\n\ninterface DatePickerSegmentProps {\n  segment: EditableSegment;\n  domProps?: ComponentPropsWithoutRef<'div'>;\n  state: DatePickerState | DateRangePickerState;\n  value: ZonedDateTime;\n  onChange: (newValue: ZonedDateTime) => void;\n  isPlaceholder?: boolean;\n}\nexport function EditableDateSegment({\n  segment,\n  domProps,\n  value,\n  onChange,\n  isPlaceholder,\n  state: {timezone, calendarIsOpen, setCalendarIsOpen},\n}: DatePickerSegmentProps) {\n  const isMobile = useIsMobileMediaQuery();\n  const enteredKeys = useRef('');\n  const {localeCode} = useSelectedLocale();\n  const focusManager = useFocusManager();\n  const formatter = useDateFormatter({timeZone: timezone});\n  const parser = useMemo(\n    () => new NumberParser(localeCode, {maximumFractionDigits: 0}),\n    [localeCode],\n  );\n\n  const setSegmentValue = (newValue: number) => {\n    onChange(\n      setSegment(value, segment.type, newValue, formatter.resolvedOptions()),\n    );\n  };\n\n  const adjustSegmentValue = (amount: number) => {\n    onChange(\n      adjustSegment(value, segment.type, amount, formatter.resolvedOptions()),\n    );\n  };\n\n  const backspace = () => {\n    if (parser.isValidPartialNumber(segment.text)) {\n      const newValue = segment.text.slice(0, -1);\n      const parsed = parser.parse(newValue);\n      if (newValue.length === 0 || parsed === 0) {\n        const now = today(timezone);\n        if (segment.type in now) {\n          // @ts-ignore\n          setSegmentValue(now[segment.type]);\n        }\n      } else {\n        setSegmentValue(parsed);\n      }\n      enteredKeys.current = newValue;\n    } else if (segment.type === 'dayPeriod') {\n      adjustSegmentValue(-1);\n    }\n  };\n\n  const onKeyDown: KeyboardEventHandler = e => {\n    if (e.ctrlKey || e.metaKey || e.shiftKey || e.altKey) {\n      return;\n    }\n\n    // Navigation between date segments and deletion\n    switch (e.key) {\n      case 'ArrowLeft':\n        e.preventDefault();\n        e.stopPropagation();\n        focusManager?.focusPrevious();\n        break;\n      case 'ArrowRight':\n        e.preventDefault();\n        e.stopPropagation();\n        focusManager?.focusNext();\n        break;\n      case 'Enter':\n        (e.target as HTMLElement).closest('form')?.requestSubmit();\n        setCalendarIsOpen(!calendarIsOpen);\n        break;\n      case 'Tab':\n        break;\n      case 'Backspace':\n      case 'Delete': {\n        e.preventDefault();\n        e.stopPropagation();\n        backspace();\n        break;\n      }\n\n      // Spinbutton incrementing/decrementing\n      case 'ArrowUp':\n        e.preventDefault();\n        enteredKeys.current = '';\n        adjustSegmentValue(1);\n        break;\n      case 'ArrowDown':\n        e.preventDefault();\n        enteredKeys.current = '';\n        adjustSegmentValue(-1);\n        break;\n      case 'PageUp':\n        e.preventDefault();\n        enteredKeys.current = '';\n        adjustSegmentValue(PAGE_STEP[segment.type] || 1);\n        break;\n      case 'PageDown':\n        e.preventDefault();\n        enteredKeys.current = '';\n        adjustSegmentValue(-(PAGE_STEP[segment.type] || 1));\n        break;\n      case 'Home':\n        e.preventDefault();\n        enteredKeys.current = '';\n        setSegmentValue(segment.maxValue);\n        break;\n      case 'End':\n        e.preventDefault();\n        enteredKeys.current = '';\n        setSegmentValue(segment.minValue);\n        break;\n    }\n\n    onInput(e.key);\n  };\n\n  const amPmFormatter = useDateFormatter({hour: 'numeric', hour12: true});\n  const am = useMemo(() => {\n    const amDate = new Date();\n    amDate.setHours(0);\n    return amPmFormatter\n      .formatToParts(amDate)\n      .find(part => part.type === 'dayPeriod')!.value;\n  }, [amPmFormatter]);\n  const pm = useMemo(() => {\n    const pmDate = new Date();\n    pmDate.setHours(12);\n    return amPmFormatter\n      .formatToParts(pmDate)\n      .find(part => part.type === 'dayPeriod')!.value;\n  }, [amPmFormatter]);\n\n  // Update date values on user keyboard input\n  const onInput = (key: string) => {\n    const newValue = enteredKeys.current + key;\n\n    switch (segment.type) {\n      case 'dayPeriod':\n        if (am.toLowerCase().startsWith(key)) {\n          setSegmentValue(0);\n        } else if (pm.toLowerCase().startsWith(key)) {\n          setSegmentValue(12);\n        } else {\n          break;\n        }\n        focusManager?.focusNext();\n        break;\n      case 'day':\n      case 'hour':\n      case 'minute':\n      case 'second':\n      case 'month':\n      case 'year': {\n        if (!parser.isValidPartialNumber(newValue)) {\n          return;\n        }\n\n        let numberValue = parser.parse(newValue);\n        let segmentValue = numberValue;\n        let allowsZero = segment.minValue === 0;\n        if (segment.type === 'hour' && formatter.resolvedOptions().hour12) {\n          switch (formatter.resolvedOptions().hourCycle) {\n            case 'h11':\n              if (numberValue > 11) {\n                segmentValue = parser.parse(key);\n              }\n              break;\n            case 'h12':\n              allowsZero = false;\n              if (numberValue > 12) {\n                segmentValue = parser.parse(key);\n              }\n              break;\n          }\n\n          if (segment.value >= 12 && numberValue > 1) {\n            numberValue += 12;\n          }\n        } else if (numberValue > segment.maxValue) {\n          segmentValue = parser.parse(key);\n        }\n\n        if (Number.isNaN(numberValue)) {\n          return;\n        }\n\n        const shouldSetValue = segmentValue !== 0 || allowsZero;\n        if (shouldSetValue) {\n          setSegmentValue(segmentValue);\n        }\n\n        if (\n          Number(`${numberValue}0`) > segment.maxValue ||\n          newValue.length >= String(segment.maxValue).length\n        ) {\n          enteredKeys.current = '';\n          if (shouldSetValue) {\n            focusManager?.focusNext();\n          }\n        } else {\n          enteredKeys.current = newValue;\n        }\n        break;\n      }\n    }\n  };\n\n  const spinButtonProps: HTMLAttributes<HTMLDivElement> = isMobile\n    ? {}\n    : {\n        'aria-label': segment.type,\n        'aria-valuetext': isPlaceholder ? undefined : `${segment.value}`,\n        'aria-valuemin': segment.minValue,\n        'aria-valuemax': segment.maxValue,\n        'aria-valuenow': isPlaceholder ? undefined : segment.value,\n        tabIndex: 0,\n        onKeyDown,\n      };\n\n  return (\n    <div\n      {...mergeProps(domProps!, {\n        ...spinButtonProps,\n        onFocus: e => {\n          enteredKeys.current = '';\n          e.target.scrollIntoView({block: 'nearest'});\n        },\n        onClick: e => {\n          e.preventDefault();\n          e.stopPropagation();\n        },\n      } as HTMLAttributes<HTMLDivElement>)}\n      className=\"box-content cursor-default select-none whitespace-nowrap rounded p-2 text-center tabular-nums caret-transparent outline-none focus:bg-primary focus:text-on-primary\"\n    >\n      {segment.text.padStart(segment.minLength, '0')}\n    </div>\n  );\n}\n","import {useFocusManager} from '@react-aria/focus';\nimport {ComponentPropsWithoutRef} from 'react';\n\nexport interface LiteralSegment {\n  type: 'literal';\n  minLength: 1;\n  text: string;\n}\n\ninterface LiteralSegmentProps extends ComponentPropsWithoutRef<'div'> {\n  segment: LiteralSegment;\n  domProps?: ComponentPropsWithoutRef<'div'>;\n}\nexport function LiteralDateSegment({segment, domProps}: LiteralSegmentProps) {\n  const focusManager = useFocusManager();\n  return (\n    <div\n      {...domProps}\n      onPointerDown={e => {\n        if (e.pointerType === 'mouse') {\n          e.preventDefault();\n          const res = focusManager?.focusNext({from: e.target as HTMLElement});\n          if (!res) {\n            focusManager?.focusPrevious({from: e.target as HTMLElement});\n          }\n        }\n      }}\n      aria-hidden\n      className=\"min-w-4 cursor-default select-none\"\n    >\n      {segment.text}\n    </div>\n  );\n}\n","import {\n  DateValue,\n  getMinimumDayInMonth,\n  getMinimumMonthInYear,\n} from '@internationalized/date';\n\nexport function getSegmentLimits(\n  date: DateValue,\n  type: string,\n  options: Intl.ResolvedDateTimeFormatOptions\n) {\n  switch (type) {\n    case 'year':\n      return {\n        value: date.year,\n        placeholder: 'yyyy',\n        minValue: 1,\n        maxValue: date.calendar.getYearsInEra(date),\n      };\n    case 'month':\n      return {\n        value: date.month,\n        placeholder: 'mm',\n        minValue: getMinimumMonthInYear(date),\n        maxValue: date.calendar.getMonthsInYear(date),\n      };\n    case 'day':\n      return {\n        value: date.day,\n        minValue: getMinimumDayInMonth(date),\n        maxValue: date.calendar.getDaysInMonth(date),\n        placeholder: 'dd',\n      };\n  }\n\n  if ('hour' in date) {\n    switch (type) {\n      case 'dayPeriod':\n        return {\n          value: date.hour >= 12 ? 12 : 0,\n          minValue: 0,\n          maxValue: 12,\n          placeholder: '--',\n        };\n      case 'hour':\n        if (options.hour12) {\n          const isPM = date.hour >= 12;\n          return {\n            value: date.hour,\n            minValue: isPM ? 12 : 0,\n            maxValue: isPM ? 23 : 11,\n            placeholder: '--',\n          };\n        }\n\n        return {\n          value: date.hour,\n          minValue: 0,\n          maxValue: 23,\n          placeholder: '--',\n        };\n      case 'minute':\n        return {\n          value: date.minute,\n          minValue: 0,\n          maxValue: 59,\n          placeholder: '--',\n        };\n    }\n  }\n\n  return {};\n}\n","import React, {ComponentPropsWithoutRef, useMemo} from 'react';\nimport {ZonedDateTime} from '@internationalized/date';\nimport {EditableDateSegment, EditableSegment} from './editable-date-segment';\nimport {LiteralDateSegment, LiteralSegment} from './literal-segment';\nimport {useDateFormatter} from '@common/i18n/use-date-formatter';\nimport {DatePickerState} from '../date-picker/use-date-picker-state';\nimport {getSegmentLimits} from './utils/get-segment-limits';\nimport {DateRangePickerState} from '../date-range-picker/use-date-range-picker-state';\n\ninterface DateSegmentListProps {\n  segmentProps?: ComponentPropsWithoutRef<'div'>;\n  state: DatePickerState | DateRangePickerState;\n  value: ZonedDateTime;\n  onChange: (newValue: ZonedDateTime) => void;\n  isPlaceholder?: boolean;\n}\nexport function DateSegmentList({\n  segmentProps,\n  state,\n  value,\n  onChange,\n  isPlaceholder,\n}: DateSegmentListProps) {\n  const {granularity} = state;\n  const options = useMemo(() => {\n    const memoOptions: Intl.DateTimeFormatOptions = {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric',\n    };\n    if (granularity === 'minute') {\n      memoOptions.hour = 'numeric';\n      memoOptions.minute = 'numeric';\n    }\n    return memoOptions;\n  }, [granularity]);\n\n  const formatter = useDateFormatter(options);\n\n  const dateValue = useMemo(() => value.toDate(), [value]);\n  const segments = useMemo(() => {\n    return formatter.formatToParts(dateValue).map(segment => {\n      const limits = getSegmentLimits(\n        value,\n        segment.type,\n        formatter.resolvedOptions(),\n      );\n      const textValue =\n        isPlaceholder && segment.type !== 'literal'\n          ? limits.placeholder\n          : segment.value;\n      return {\n        type: segment.type,\n        text: segment.value === ', ' ? ' ' : textValue,\n        ...limits,\n        minLength:\n          segment.type !== 'literal' ? String(limits.maxValue).length : 1,\n      } as LiteralSegment | EditableSegment;\n    });\n  }, [dateValue, formatter, isPlaceholder, value]);\n\n  return (\n    <div className=\"flex items-center\">\n      {segments.map((segment, index) => {\n        if (segment.type === 'literal') {\n          return (\n            <LiteralDateSegment\n              domProps={segmentProps}\n              key={index}\n              segment={segment}\n            />\n          );\n        }\n        return (\n          <EditableDateSegment\n            isPlaceholder={isPlaceholder}\n            domProps={segmentProps}\n            state={state}\n            value={value}\n            onChange={onChange}\n            segment={segment}\n            key={index}\n          />\n        );\n      })}\n    </div>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport {\n  CalendarDate,\n  DateValue,\n  getDayOfWeek,\n  isSameMonth,\n  isToday,\n} from '@internationalized/date';\nimport {useSelectedLocale} from '../../../../../i18n/selected-locale';\nimport {DatePickerState} from '../date-picker/use-date-picker-state';\nimport {dateIsInvalid} from '../utils';\nimport {DateRangePickerState} from '../date-range-picker/use-date-range-picker-state';\n\ninterface CalendarCellProps {\n  date: CalendarDate;\n  currentMonth: DateValue;\n  state: DatePickerState | DateRangePickerState;\n}\nexport function CalendarCell({\n  date,\n  currentMonth,\n  state: {\n    dayIsActive,\n    dayIsHighlighted,\n    dayIsRangeStart,\n    dayIsRangeEnd,\n    getCellProps,\n    timezone,\n    min,\n    max,\n  },\n}: CalendarCellProps) {\n  const {localeCode} = useSelectedLocale();\n  const dayOfWeek = getDayOfWeek(date, localeCode);\n  const isActive = dayIsActive(date);\n  const isHighlighted = dayIsHighlighted(date);\n  const isRangeStart = dayIsRangeStart(date);\n  const isRangeEnd = dayIsRangeEnd(date);\n  const dayIsToday = isToday(date, timezone);\n  const sameMonth = isSameMonth(date, currentMonth);\n  const isDisabled = dateIsInvalid(date, min, max);\n\n  return (\n    <div\n      role=\"button\"\n      aria-disabled={isDisabled}\n      className={clsx(\n        'w-40 h-40 text-sm relative isolate flex-shrink-0',\n        isDisabled && 'text-disabled pointer-events-none',\n        !sameMonth && 'invisible pointer-events-none'\n      )}\n      {...getCellProps(date, sameMonth)}\n    >\n      <span\n        className={clsx(\n          'absolute inset-0 flex items-center justify-center rounded-full w-full h-full select-none z-10 cursor-pointer',\n          !isActive && !dayIsToday && 'hover:bg-hover',\n          isActive && 'bg-primary text-on-primary font-semibold',\n          dayIsToday && !isActive && 'bg-chip'\n        )}\n      >\n        {date.day}\n      </span>\n      {isHighlighted && sameMonth && (\n        <span\n          className={clsx(\n            'absolute w-full h-full inset-0 bg-primary/focus',\n            (isRangeStart || dayOfWeek === 0 || date.day === 1) &&\n              'rounded-l-full',\n            (isRangeEnd ||\n              dayOfWeek === 6 ||\n              date.day ===\n                currentMonth.calendar.getDaysInMonth(currentMonth)) &&\n              'rounded-r-full'\n          )}\n        />\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport {m} from 'framer-motion';\nimport {\n  CalendarDate,\n  endOfMonth,\n  getWeeksInMonth,\n  startOfMonth,\n  startOfWeek,\n} from '@internationalized/date';\nimport {KeyboardArrowLeftIcon} from '../../../../../icons/material/KeyboardArrowLeft';\nimport {IconButton} from '../../../../buttons/icon-button';\nimport {KeyboardArrowRightIcon} from '../../../../../icons/material/KeyboardArrowRight';\nimport {CalendarCell} from './calendar-cell';\nimport {DatePickerState} from '../date-picker/use-date-picker-state';\nimport {useDateFormatter} from '../../../../../i18n/use-date-formatter';\nimport {useSelectedLocale} from '../../../../../i18n/selected-locale';\nimport {dateIsInvalid} from '../utils';\nimport {DateRangePickerState} from '../date-range-picker/use-date-range-picker-state';\n\nexport interface CalendarMonthProps {\n  state: DatePickerState | DateRangePickerState;\n  startDate: CalendarDate;\n  isFirst: boolean;\n  isLast: boolean;\n}\nexport function CalendarMonth({\n  startDate,\n  state,\n  isFirst,\n  isLast,\n}: CalendarMonthProps) {\n  const {localeCode} = useSelectedLocale();\n  const weeksInMonth = getWeeksInMonth(startDate, localeCode);\n  const monthStart = startOfWeek(startDate, localeCode);\n\n  return (\n    <div className=\"w-280 flex-shrink-0\">\n      <CalendarMonthHeader\n        isFirst={isFirst}\n        isLast={isLast}\n        state={state}\n        currentMonth={startDate}\n      />\n      <div className=\"block\" role=\"grid\">\n        <WeekdayHeader state={state} startDate={startDate} />\n        {[...new Array(weeksInMonth).keys()].map(weekIndex => (\n          <m.div className=\"flex mb-6\" key={weekIndex}>\n            {[...new Array(7).keys()].map(dayIndex => (\n              <CalendarCell\n                key={dayIndex}\n                date={monthStart.add({weeks: weekIndex, days: dayIndex})}\n                currentMonth={startDate}\n                state={state}\n              />\n            ))}\n          </m.div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\ninterface CalendarMonthHeaderProps {\n  state: DatePickerState | DateRangePickerState;\n  currentMonth: CalendarDate;\n  isFirst: boolean;\n  isLast: boolean;\n}\nfunction CalendarMonthHeader({\n  currentMonth,\n  isFirst,\n  isLast,\n  state: {calendarDates, setCalendarDates, timezone, min, max},\n}: CalendarMonthHeaderProps) {\n  const shiftCalendars = (direction: 'forward' | 'backward') => {\n    const count = calendarDates.length;\n    let newDates: CalendarDate[];\n    if (direction === 'forward') {\n      newDates = calendarDates.map(date =>\n        endOfMonth(date.add({months: count}))\n      );\n    } else {\n      newDates = calendarDates.map(date =>\n        endOfMonth(date.subtract({months: count}))\n      );\n    }\n    setCalendarDates(newDates);\n  };\n\n  const monthFormatter = useDateFormatter({\n    month: 'long',\n    year: 'numeric',\n    era: currentMonth.calendar.identifier !== 'gregory' ? 'long' : undefined,\n    calendar: currentMonth.calendar.identifier,\n  });\n\n  const isBackwardDisabled = dateIsInvalid(\n    currentMonth.subtract({days: 1}),\n    min,\n    max\n  );\n  const isForwardDisabled = dateIsInvalid(\n    startOfMonth(currentMonth.add({months: 1})),\n    min,\n    max\n  );\n\n  return (\n    <div className=\"flex items-center justify-between gap-10\">\n      <IconButton\n        size=\"md\"\n        className={clsx('text-muted', !isFirst && 'invisible')}\n        disabled={!isFirst || isBackwardDisabled}\n        aria-hidden={!isFirst}\n        onClick={() => {\n          shiftCalendars('backward');\n        }}\n      >\n        <KeyboardArrowLeftIcon />\n      </IconButton>\n      <div className=\"text-sm font-semibold select-none\">\n        {monthFormatter.format(currentMonth.toDate(timezone))}\n      </div>\n      <IconButton\n        size=\"md\"\n        className={clsx('text-muted', !isLast && 'invisible')}\n        disabled={!isLast || isForwardDisabled}\n        aria-hidden={!isLast}\n        onClick={() => {\n          shiftCalendars('forward');\n        }}\n      >\n        <KeyboardArrowRightIcon />\n      </IconButton>\n    </div>\n  );\n}\n\ninterface WeekdayHeaderProps {\n  state: DatePickerState | DateRangePickerState;\n  startDate: CalendarDate;\n}\nfunction WeekdayHeader({state: {timezone}, startDate}: WeekdayHeaderProps) {\n  const {localeCode} = useSelectedLocale();\n  const dayFormatter = useDateFormatter({weekday: 'short'});\n\n  const monthStart = startOfWeek(startDate, localeCode);\n\n  return (\n    <div className=\"flex\">\n      {[...new Array(7).keys()].map(index => {\n        const date = monthStart.add({days: index});\n        const dateDay = date.toDate(timezone);\n        const weekday = dayFormatter.format(dateDay);\n        return (\n          <div\n            className=\"w-40 h-40 text-sm font-semibold relative flex-shrink-0\"\n            key={index}\n          >\n            <div className=\"absolute flex items-center justify-center w-full h-full select-none\">\n              {weekday}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import React, {Fragment} from 'react';\nimport {startOfMonth, toCalendarDate} from '@internationalized/date';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\nimport {CalendarMonth} from './calendar-month';\nimport {DatePickerState} from '../date-picker/use-date-picker-state';\nimport {DateRangePickerState} from '../date-range-picker/use-date-range-picker-state';\n\ninterface CalendarProps {\n  state: DatePickerState | DateRangePickerState;\n  visibleMonths?: 1 | 2;\n}\nexport function Calendar({state, visibleMonths = 1}: CalendarProps) {\n  const isMobile = useIsMobileMediaQuery();\n\n  if (isMobile) {\n    visibleMonths = 1;\n  }\n\n  return (\n    <Fragment>\n      {[...new Array(visibleMonths).keys()].map(index => {\n        const startDate = toCalendarDate(\n          startOfMonth(state.calendarDates[index])\n        );\n        const isFirst = index === 0;\n        const isLast = index === visibleMonths - 1;\n        return (\n          <CalendarMonth\n            key={index}\n            state={state}\n            startDate={startDate}\n            isFirst={isFirst}\n            isLast={isLast}\n          />\n        );\n      })}\n    </Fragment>\n  );\n}\n","import {DateValue, parseAbsolute} from '@internationalized/date';\nimport {Fragment, memo} from 'react';\nimport {useDateFormatter} from './use-date-formatter';\nimport {useSettings} from '../core/settings/use-settings';\nimport {shallowEqual} from '../utils/shallow-equal';\nimport {useUserTimezone} from './use-user-timezone';\nimport {DateFormatPresets} from '@common/i18n/formatted-date';\n\ninterface FormattedDateTimeRangeProps {\n  start?: string | DateValue | Date;\n  end?: string | DateValue | Date;\n  options?: Intl.DateTimeFormatOptions;\n  preset?: keyof typeof DateFormatPresets;\n}\nexport const FormattedDateTimeRange = memo(\n  ({start, end, options, preset}: FormattedDateTimeRangeProps) => {\n    const {dates} = useSettings();\n    const timezone = useUserTimezone();\n    const formatter = useDateFormatter(\n      options ||\n        (DateFormatPresets as Record<string, Intl.DateTimeFormatOptions>)[\n          preset || dates?.format\n        ]\n    );\n\n    if (!start || !end) {\n      return null;\n    }\n\n    let value: string;\n\n    try {\n      value = formatter.formatRange(\n        castToDate(start, timezone),\n        castToDate(end, timezone)\n      );\n    } catch (e) {\n      value = '';\n    }\n\n    return <Fragment>{value}</Fragment>;\n  },\n  shallowEqual\n);\n\nfunction castToDate(date: string | DateValue | Date, timezone: string): Date {\n  if (typeof date === 'string') {\n    return parseAbsolute(date, timezone).toDate();\n  }\n  if ('toDate' in date) {\n    return date.toDate(timezone);\n  }\n  return date;\n}\n","import {getBootstrapData} from '../core/bootstrap-data/use-backend-bootstrap-data';\nimport {getLocalTimeZone} from '@internationalized/date';\n\nexport function getUserTimezone(): string {\n  const defaultTimezone = getBootstrapData()?.settings.dates.default_timezone;\n  const preferredTimezone =\n    getBootstrapData()?.user?.timezone || defaultTimezone || 'auto';\n\n  if (!preferredTimezone || preferredTimezone === 'auto') {\n    return getLocalTimeZone();\n  }\n  return preferredTimezone;\n}\n","import {DateRangeValue} from '../date-range-value';\nimport {message} from '@common/i18n/message';\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\nimport {\n  endOfMonth,\n  endOfWeek,\n  endOfYear,\n  now,\n  startOfMonth,\n  startOfWeek,\n  startOfYear,\n} from '@internationalized/date';\nimport {startOfDay} from '@common/utils/date/start-of-day';\nimport {endOfDay} from '@common/utils/date/end-of-day';\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\nimport {getUserTimezone} from '@common/i18n/get-user-timezone';\n\nconst Now = startOfDay(now(getUserTimezone()));\nconst locale = getBootstrapData()?.i18n?.language || 'en';\n\nexport interface DateRangePreset {\n  key: number;\n  label: MessageDescriptor;\n  getRangeValue: () => DateRangeValue;\n}\n\nexport const DateRangePresets: DateRangePreset[] = [\n  {\n    key: 0,\n    label: message('Today'),\n    getRangeValue: () => ({\n      preset: 0,\n      start: Now,\n      end: endOfDay(Now),\n    }),\n  },\n  {\n    key: 1,\n    label: message('Yesterday'),\n    getRangeValue: () => ({\n      preset: 1,\n      start: Now.subtract({days: 1}),\n      end: endOfDay(Now).subtract({days: 1}),\n    }),\n  },\n  {\n    key: 2,\n    label: message('This week'),\n    getRangeValue: () => ({\n      preset: 2,\n      start: startOfWeek(Now, locale),\n      end: endOfWeek(endOfDay(Now), locale),\n    }),\n  },\n  {\n    key: 3,\n    label: message('Last week'),\n    getRangeValue: () => {\n      const start = startOfWeek(Now, locale).subtract({days: 7});\n      return {\n        preset: 3,\n        start,\n        end: start.add({days: 6}),\n      };\n    },\n  },\n  {\n    key: 4,\n    label: message('Last 7 days'),\n    getRangeValue: () => ({\n      preset: 4,\n      start: Now.subtract({days: 7}),\n      end: endOfDay(Now),\n    }),\n  },\n  {\n    key: 6,\n    label: message('Last 30 days'),\n    getRangeValue: () => ({\n      preset: 6,\n      start: Now.subtract({days: 30}),\n      end: endOfDay(Now),\n    }),\n  },\n  {\n    key: 7,\n    label: message('Last 3 months'),\n    getRangeValue: () => ({\n      preset: 7,\n      start: Now.subtract({months: 3}),\n      end: endOfDay(Now),\n    }),\n  },\n  {\n    key: 8,\n    label: message('Last 12 months'),\n    getRangeValue: () => ({\n      preset: 8,\n      start: Now.subtract({months: 12}),\n      end: endOfDay(Now),\n    }),\n  },\n  {\n    key: 9,\n    label: message('This month'),\n    getRangeValue: () => ({\n      preset: 9,\n      start: startOfMonth(Now),\n      end: endOfMonth(endOfDay(Now)),\n    }),\n  },\n  {\n    key: 10,\n    label: message('This year'),\n    getRangeValue: () => ({\n      preset: 10,\n      start: startOfYear(Now),\n      end: endOfYear(endOfDay(Now)),\n    }),\n  },\n  {\n    key: 11,\n    label: message('Last year'),\n    getRangeValue: () => ({\n      preset: 11,\n      start: startOfYear(Now).subtract({years: 1}),\n      end: endOfYear(endOfDay(Now)).subtract({years: 1}),\n    }),\n  },\n];\n","import {List, ListItem} from '@common/ui/list/list';\nimport {DateRangePresets} from '@common/ui/forms/input-field/date/date-range-picker/dialog/date-range-presets';\nimport {Trans} from '@common/i18n/trans';\nimport {DateRangeValue} from '@common/ui/forms/input-field/date/date-range-picker/date-range-value';\n\ninterface DateRangePresetList {\n  onPresetSelected: (value: DateRangeValue) => void;\n  selectedValue?: DateRangeValue | null;\n}\nexport function DatePresetList({\n  onPresetSelected,\n  selectedValue,\n}: DateRangePresetList) {\n  return (\n    <List>\n      {DateRangePresets.map(preset => (\n        <ListItem\n          borderRadius=\"rounded-none\"\n          capitalizeFirst\n          key={preset.key}\n          isSelected={selectedValue?.preset === preset.key}\n          onSelected={() => {\n            const newValue = preset.getRangeValue();\n            onPresetSelected(newValue);\n          }}\n        >\n          <Trans {...preset.label} />\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n","import {useMediaQuery, UseMediaQueryOptions} from './use-media-query';\n\nexport function useIsTabletMediaQuery(options?: UseMediaQueryOptions) {\n  return useMediaQuery('(max-width: 1024px)', options);\n}\n","import React, {ComponentPropsWithoutRef, ReactNode, useId} from 'react';\nimport clsx from 'clsx';\nimport {useController} from 'react-hook-form';\nimport {mergeProps, useObjectRef} from '@react-aria/utils';\nimport {InputSize} from '../input-field/input-size';\nimport {getInputFieldClassNames} from '../input-field/get-input-field-class-names';\nimport {AutoFocusProps, useAutoFocus} from '../../focus/use-auto-focus';\n\ninterface SwitchProps\n  extends AutoFocusProps,\n    Omit<ComponentPropsWithoutRef<'input'>, 'size'> {\n  size?: InputSize;\n  className?: string;\n  description?: ReactNode;\n  invalid?: boolean;\n  errorMessage?: string;\n}\nexport const Switch = React.forwardRef<HTMLInputElement, SwitchProps>(\n  (props, ref) => {\n    const {\n      children,\n      size = 'sm',\n      description,\n      className,\n      invalid,\n      autoFocus,\n      errorMessage,\n      ...domProps\n    } = props;\n\n    const inputRef = useObjectRef(ref);\n    useAutoFocus({autoFocus}, inputRef);\n\n    const style = getSizeClassName(size);\n    const fieldClassNames = getInputFieldClassNames(props);\n\n    const descriptionId = useId();\n\n    return (\n      <div className={clsx(className, 'isolate')}>\n        <label className=\"flex items-center select-none\">\n          <input\n            {...domProps}\n            type=\"checkbox\"\n            role=\"switch\"\n            aria-invalid={invalid || undefined}\n            aria-describedby={description ? descriptionId : undefined}\n            ref={inputRef}\n            aria-checked={domProps.checked}\n            className={clsx(\n              style,\n              !invalid &&\n                'checked:bg-primary dark:checked:bg-primary-dark checked:border-primary dark:checked:border-primary-dark',\n              invalid && 'checked:bg-danger checked:border-danger',\n              'outline-none cursor-pointer bg-chip border-chip border checked:bg-primary checked:border-primary p-0 overflow-hidden relative rounded-3xl appearance-none transition-colors flex-shrink-0 flex items-center outline-none',\n              'before:z-10 before:border before:rounded-3xl before:block before:bg-white before:transition-transform before:translate-x-2',\n              'checked:before:border-white',\n              'focus-visible:ring',\n              props.disabled && 'opacity-80 cursor-not-allowed'\n            )}\n          />\n          {children && (\n            <span\n              className={clsx(\n                fieldClassNames.size.font,\n                'ml-12',\n                invalid && 'text-danger',\n                props.disabled && 'text-disabled'\n              )}\n            >\n              {children}\n            </span>\n          )}\n        </label>\n        {description && !errorMessage && (\n          <div id={descriptionId} className={fieldClassNames.description}>\n            {description}\n          </div>\n        )}\n        {errorMessage && (\n          <div id={descriptionId} className={fieldClassNames.error}>\n            {errorMessage}\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n\ninterface FormSwitchProps extends SwitchProps {\n  name: string;\n}\nexport function FormSwitch(props: FormSwitchProps) {\n  const {\n    field: {onChange, onBlur, value = false, ref},\n    fieldState: {invalid, error},\n  } = useController({\n    name: props.name,\n  });\n\n  const formProps: Partial<SwitchProps> = {\n    onChange: e => {\n      if (e.target.value && e.target.value !== 'on') {\n        onChange(e.target.checked ? e.target.value : false);\n      } else {\n        onChange(e);\n      }\n    },\n    onBlur,\n    checked: !!value,\n    invalid,\n    errorMessage: error?.message,\n    name: props.name,\n  };\n\n  return <Switch ref={ref} {...mergeProps(props, formProps)} />;\n}\n\nfunction getSizeClassName(size: InputSize): string {\n  switch (size) {\n    case 'xl':\n      return 'w-68 h-36 before:w-28 before:h-28 checked:before:translate-x-36';\n    case 'lg':\n      return 'w-56 h-30 before:w-22 before:h-22 checked:before:translate-x-30';\n    case 'md':\n      return 'w-46 h-24 before:w-18 before:h-18 checked:before:translate-x-24';\n    case 'xs':\n      return 'w-30 h-16 before:w-12 before:h-12 checked:before:translate-x-16';\n    default:\n      return 'w-38 h-20 before:w-14 before:h-14 checked:before:translate-x-20';\n  }\n}\n","import {message} from '@common/i18n/message';\nimport {DateRangeValue} from '@common/ui/forms/input-field/date/date-range-picker/date-range-value';\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\n\nexport interface DateRangeComparePreset {\n  key: number;\n  label: MessageDescriptor;\n  getRangeValue: (range: DateRangeValue) => DateRangeValue;\n}\n\nexport const DateRangeComparePresets: DateRangeComparePreset[] = [\n  {\n    key: 0,\n    label: message('Preceding period'),\n    getRangeValue: (range: DateRangeValue) => {\n      const startDate = range.start;\n      const endDate = range.end;\n\n      const diffInMilliseconds =\n        endDate.toDate().getTime() - startDate.toDate().getTime();\n      const diffInMinutes = diffInMilliseconds / (1000 * 60);\n      const newStart = startDate.subtract({minutes: diffInMinutes});\n      return {\n        preset: 0,\n        start: newStart,\n        end: startDate,\n      };\n    },\n  },\n  {\n    key: 1,\n    label: message('Same period last year'),\n    getRangeValue: (range: DateRangeValue) => {\n      return {\n        start: range.start.subtract({years: 1}),\n        end: range.end.subtract({years: 1}),\n        preset: 1,\n      };\n    },\n  },\n  {\n    key: 2,\n    label: message('Custom'),\n    getRangeValue: (range: DateRangeValue) => {\n      return {\n        start: range.start.subtract({weeks: 1}),\n        end: range.end.subtract({weeks: 1}),\n        preset: 2,\n      };\n    },\n  },\n];\n","import {List, ListItem} from '@common/ui/list/list';\nimport {Trans} from '@common/i18n/trans';\nimport {DateRangeValue} from '@common/ui/forms/input-field/date/date-range-picker/date-range-value';\nimport {DateRangeComparePresets} from '@common/ui/forms/input-field/date/date-range-picker/dialog/date-range-compare-presets';\n\ninterface DateRangePresetList {\n  originalRangeValue: DateRangeValue;\n  onPresetSelected: (value: DateRangeValue) => void;\n  selectedValue?: DateRangeValue | null;\n}\nexport function DateRangeComparePresetList({\n  originalRangeValue,\n  onPresetSelected,\n  selectedValue,\n}: DateRangePresetList) {\n  return (\n    <List>\n      {DateRangeComparePresets.map(preset => (\n        <ListItem\n          borderRadius=\"rounded-none\"\n          capitalizeFirst\n          key={preset.key}\n          isSelected={selectedValue?.preset === preset.key}\n          onSelected={() => {\n            const newValue = preset.getRangeValue(originalRangeValue);\n            onPresetSelected(newValue);\n          }}\n        >\n          <Trans {...preset.label} />\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n","import React, {Fragment, ReactNode, useRef, useState} from 'react';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {DatePickerField} from '../date-picker-field';\nimport {DateRangePickerState} from '../use-date-range-picker-state';\nimport {Calendar} from '../../calendar/calendar';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {Button} from '@common/ui/buttons/button';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {ArrowRightAltIcon} from '@common/icons/material/ArrowRightAlt';\nimport {DateSegmentList} from '../../segments/date-segment-list';\nimport {Trans} from '@common/i18n/trans';\nimport {FormattedDateTimeRange} from '@common/i18n/formatted-date-time-range';\nimport {DatePresetList} from './date-range-preset-list';\nimport {useIsTabletMediaQuery} from '@common/utils/hooks/is-tablet-media-query';\nimport {Switch} from '@common/ui/forms/toggle/switch';\nimport {DateRangeComparePresetList} from '@common/ui/forms/input-field/date/date-range-picker/dialog/date-range-compare-preset-list';\n\ninterface DateRangeDialogProps {\n  state: DateRangePickerState;\n  compareState?: DateRangePickerState;\n  compareVisibleDefault?: boolean;\n  showInlineDatePickerField?: boolean;\n}\nexport function DateRangeDialog({\n  state,\n  compareState,\n  showInlineDatePickerField = false,\n  compareVisibleDefault = false,\n}: DateRangeDialogProps) {\n  const isTablet = useIsTabletMediaQuery();\n  const {close} = useDialogContext();\n  const initialStateRef = useRef<DateRangePickerState>(state);\n  const hasPlaceholder = state.isPlaceholder.start || state.isPlaceholder.end;\n  const [compareVisible, setCompareVisible] = useState(compareVisibleDefault);\n\n  const footer = (\n    <DialogFooter\n      dividerTop\n      startAction={\n        !hasPlaceholder && !isTablet ? (\n          <div className=\"text-xs\">\n            <FormattedDateTimeRange\n              start={state.selectedValue.start.toDate()}\n              end={state.selectedValue.end.toDate()}\n              options={{dateStyle: 'medium'}}\n            />\n          </div>\n        ) : undefined\n      }\n    >\n      <Button\n        variant=\"text\"\n        size=\"xs\"\n        onClick={() => {\n          state.setSelectedValue(initialStateRef.current.selectedValue);\n          state.setIsPlaceholder(initialStateRef.current.isPlaceholder);\n          close();\n        }}\n      >\n        <Trans message=\"Cancel\" />\n      </Button>\n      <Button\n        variant=\"flat\"\n        color=\"primary\"\n        size=\"xs\"\n        onClick={() => {\n          const value = state.selectedValue;\n          if (compareState && compareVisible) {\n            value.compareStart = compareState.selectedValue.start;\n            value.compareEnd = compareState.selectedValue.end;\n          }\n          close(value);\n        }}\n      >\n        <Trans message=\"Select\" />\n      </Button>\n    </DialogFooter>\n  );\n\n  return (\n    <Dialog size=\"auto\">\n      <DialogBody className=\"flex\" padding=\"p-0\">\n        {!isTablet && (\n          <div className=\"min-w-192 py-14\">\n            <DatePresetList\n              selectedValue={state.selectedValue}\n              onPresetSelected={preset => {\n                state.setSelectedValue(preset);\n                if (state.closeDialogOnSelection) {\n                  close(preset);\n                }\n              }}\n            />\n            {!!compareState && (\n              <Fragment>\n                <Switch\n                  className=\"mx-20 mb-10 mt-14\"\n                  checked={compareVisible}\n                  onChange={e => setCompareVisible(e.target.checked)}\n                >\n                  <Trans message=\"Compare\" />\n                </Switch>\n                {compareVisible && (\n                  <DateRangeComparePresetList\n                    originalRangeValue={state.selectedValue}\n                    selectedValue={compareState.selectedValue}\n                    onPresetSelected={preset => {\n                      compareState.setSelectedValue(preset);\n                    }}\n                  />\n                )}\n              </Fragment>\n            )}\n          </div>\n        )}\n        <AnimatePresence initial={false}>\n          <Calendars\n            state={state}\n            compareState={compareState}\n            showInlineDatePickerField={showInlineDatePickerField}\n            compareVisible={compareVisible}\n          />\n        </AnimatePresence>\n      </DialogBody>\n      {!state.closeDialogOnSelection && footer}\n    </Dialog>\n  );\n}\n\ninterface CustomRangePanelProps {\n  state: DateRangePickerState;\n  compareState?: DateRangePickerState;\n  showInlineDatePickerField?: boolean;\n  compareVisible: boolean;\n}\nfunction Calendars({\n  state,\n  compareState,\n  showInlineDatePickerField,\n  compareVisible,\n}: CustomRangePanelProps) {\n  return (\n    <m.div\n      initial={{width: 0, overflow: 'hidden'}}\n      animate={{width: 'auto'}}\n      exit={{width: 0, overflow: 'hidden'}}\n      transition={{type: 'tween', duration: 0.125}}\n      className=\"border-l px-20 pb-20 pt-10\"\n    >\n      {showInlineDatePickerField && (\n        <div>\n          <InlineDatePickerField state={state} />\n          {!!compareState && compareVisible && (\n            <InlineDatePickerField\n              state={compareState}\n              label={<Trans message=\"Compare\" />}\n            />\n          )}\n        </div>\n      )}\n      <div className=\"flex items-start gap-36\">\n        <Calendar state={state} visibleMonths={2} />\n      </div>\n    </m.div>\n  );\n}\n\ninterface InlineDatePickerFieldProps {\n  state: DateRangePickerState;\n  label?: ReactNode;\n}\nfunction InlineDatePickerField({state, label}: InlineDatePickerFieldProps) {\n  const {selectedValue, setSelectedValue} = state;\n  return (\n    <DatePickerField className=\"mb-20 mt-10\" label={label}>\n      <DateSegmentList\n        state={state}\n        value={selectedValue.start}\n        onChange={newValue => {\n          setSelectedValue({...selectedValue, start: newValue});\n        }}\n      />\n      <ArrowRightAltIcon className=\"block flex-shrink-0 text-muted\" size=\"md\" />\n      <DateSegmentList\n        state={state}\n        value={selectedValue.end}\n        onChange={newValue => {\n          setSelectedValue({...selectedValue, end: newValue});\n        }}\n      />\n    </DatePickerField>\n  );\n}\n","import React, {\n  ComponentPropsWithoutRef,\n  Fragment,\n  MouseEvent,\n  useRef,\n} from 'react';\nimport {DateRangeIcon} from '../../../../../icons/material/DateRange';\nimport {DialogTrigger} from '../../../../overlays/dialog/dialog-trigger';\nimport {DatePickerField, DatePickerFieldProps} from './date-picker-field';\nimport {useDateRangePickerState} from './use-date-range-picker-state';\nimport {ArrowRightAltIcon} from '../../../../../icons/material/ArrowRightAlt';\nimport {DatePickerValueProps} from '../date-picker/use-date-picker-state';\nimport {DateRangeValue} from './date-range-value';\nimport {DateSegmentList} from '../segments/date-segment-list';\nimport {DateRangeDialog} from './dialog/date-range-dialog';\nimport {useIsMobileMediaQuery} from '../../../../../utils/hooks/is-mobile-media-query';\n\nexport interface DateRangePickerProps\n  extends DatePickerValueProps<Partial<DateRangeValue>>,\n    Omit<DatePickerFieldProps, 'children'> {}\nexport function DateRangePicker(props: DateRangePickerProps) {\n  const {granularity, closeDialogOnSelection, ...fieldProps} = props;\n  const state = useDateRangePickerState(props);\n  const inputRef = useRef<HTMLDivElement>(null);\n  const isMobile = useIsMobileMediaQuery();\n  const hideCalendarIcon = isMobile && granularity !== 'day';\n\n  const dialog = (\n    <DialogTrigger\n      offset={8}\n      placement=\"bottom-start\"\n      isOpen={state.calendarIsOpen}\n      onOpenChange={state.setCalendarIsOpen}\n      type=\"popover\"\n      triggerRef={inputRef}\n      returnFocusToTrigger={false}\n      moveFocusToDialog={false}\n    >\n      <DateRangeDialog state={state} />\n    </DialogTrigger>\n  );\n\n  const openOnClick: ComponentPropsWithoutRef<'div'> = {\n    onClick: e => {\n      e.stopPropagation();\n      e.preventDefault();\n      if (!isHourSegment(e)) {\n        state.setCalendarIsOpen(true);\n      } else {\n        state.setCalendarIsOpen(false);\n      }\n    },\n  };\n\n  const value = state.selectedValue;\n  const onChange = state.setSelectedValue;\n\n  return (\n    <Fragment>\n      <DatePickerField\n        ref={inputRef}\n        wrapperProps={openOnClick}\n        endAdornment={!hideCalendarIcon ? <DateRangeIcon /> : undefined}\n        {...fieldProps}\n      >\n        <DateSegmentList\n          isPlaceholder={state.isPlaceholder?.start}\n          state={state}\n          segmentProps={openOnClick}\n          value={value.start}\n          onChange={newValue => {\n            onChange({start: newValue, end: value.end});\n          }}\n        />\n        <ArrowRightAltIcon\n          className=\"block flex-shrink-0 text-muted\"\n          size=\"md\"\n        />\n        <DateSegmentList\n          isPlaceholder={state.isPlaceholder?.end}\n          state={state}\n          segmentProps={openOnClick}\n          value={value.end}\n          onChange={newValue => {\n            onChange({start: value.start, end: newValue});\n          }}\n        />\n      </DatePickerField>\n      {dialog}\n    </Fragment>\n  );\n}\n\nfunction isHourSegment(e: MouseEvent<HTMLDivElement>): boolean {\n  return ['hour', 'minute', 'dayPeriod'].includes(\n    (e.currentTarget as HTMLElement).ariaLabel || ''\n  );\n}\n","import {parseAbsoluteToLocal, ZonedDateTime} from '@internationalized/date';\nimport {DateRangeValue} from './date-range-value';\nimport {useController} from 'react-hook-form';\nimport {mergeProps} from '@react-aria/utils';\nimport React from 'react';\nimport {DateRangePicker, DateRangePickerProps} from './date-range-picker';\n\nexport interface AbsoluteDateRange {\n  start?: string;\n  end?: string;\n  preset?: number;\n}\n\ninterface FormDateRange {\n  start?: string | ZonedDateTime;\n  end?: string | ZonedDateTime;\n  preset?: number;\n}\n\nexport interface FormDateRangePickerProps extends DateRangePickerProps {\n  name: string;\n}\nexport function FormDateRangePicker(props: FormDateRangePickerProps) {\n  const {\n    field: {onChange, onBlur, value, ref},\n    fieldState: {invalid, error},\n  } = useController({\n    name: props.name,\n  });\n\n  const formProps: Partial<DateRangePickerProps> = {\n    onChange: e => {\n      onChange(e ? dateRangeToAbsoluteRange(e) : null);\n    },\n    onBlur,\n    value: absoluteRangeToDateRange(value),\n    invalid,\n    errorMessage: error?.message,\n    inputRef: ref,\n  };\n\n  return <DateRangePicker {...mergeProps(formProps, props)} />;\n}\n\nexport function absoluteRangeToDateRange(props: FormDateRange | null) {\n  const {start, end, preset} = props || {};\n  const dateRange: Partial<DateRangeValue> = {preset};\n  try {\n    if (start) {\n      dateRange.start =\n        typeof start === 'string' ? parseAbsoluteToLocal(start) : start;\n    }\n    if (end) {\n      dateRange.end = typeof end === 'string' ? parseAbsoluteToLocal(end) : end;\n    }\n  } catch (e) {\n    // ignore\n  }\n  return dateRange;\n}\n\nexport function dateRangeToAbsoluteRange({\n  start,\n  end,\n  preset,\n}: Partial<DateRangeValue> = {}): AbsoluteDateRange {\n  const absoluteRange: AbsoluteDateRange = {\n    preset,\n  };\n  if (start) {\n    absoluteRange.start = start.toAbsoluteString();\n  }\n  if (end) {\n    absoluteRange.end = end.toAbsoluteString();\n  }\n  return absoluteRange;\n}\n","import {FormDateRangePicker} from '@common/ui/forms/input-field/date/date-range-picker/form-date-range-picker';\nimport {FilterPanelProps} from '@common/datatable/filters/panels/filter-panel-props';\nimport {DatePickerFilterControl} from '@common/datatable/filters/backend-filter';\n\nexport function DateRangeFilterPanel({\n  filter,\n}: FilterPanelProps<DatePickerFilterControl>) {\n  return (\n    <FormDateRangePicker\n      min={filter.control.min}\n      max={filter.control.max}\n      size=\"sm\"\n      name={`${filter.key}.value`}\n      granularity=\"day\"\n      closeDialogOnSelection={true}\n    />\n  );\n}\n","import {FilterOperator} from './backend-filter';\nimport {message} from '../../i18n/message';\nimport {MessageDescriptor} from '../../i18n/message-descriptor';\n\nexport const FilterOperatorNames: {[op in FilterOperator]: MessageDescriptor} =\n  {\n    '=': message('is'),\n    '!=': message('is not'),\n    '>': message('is greater than'),\n    '>=': message('is greater than or equal to'),\n    '<': message('is less than'),\n    '<=': message('is less than or equal to'),\n    has: message('Include'),\n    doesntHave: message('Do not include'),\n    between: message('Is between'),\n    hasAll: message('Include all'),\n  };\n","import {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@common/i18n/trans';\nimport {FormSelect} from '@common/ui/forms/select/select';\nimport {Item} from '@common/ui/forms/listbox/item';\nimport {FilterOperatorNames} from '@common/datatable/filters/filter-operator-names';\nimport {Fragment} from 'react';\nimport {FilterPanelProps} from '@common/datatable/filters/panels/filter-panel-props';\nimport {\n  FilterNumberInputControl,\n  FilterTextInputControl,\n} from '@common/datatable/filters/backend-filter';\n\nexport function InputFilterPanel({\n  filter,\n}: FilterPanelProps<FilterTextInputControl | FilterNumberInputControl>) {\n  const control = filter.control;\n  return (\n    <Fragment>\n      <FormSelect\n        selectionMode=\"single\"\n        name={`${filter.key}.operator`}\n        className=\"mb-14\"\n        size=\"sm\"\n        required\n      >\n        {filter.operators?.map(operator => (\n          <Item key={operator} value={operator}>\n            {<Trans {...FilterOperatorNames[operator]} />}\n          </Item>\n        ))}\n      </FormSelect>\n      <FormTextField\n        size=\"sm\"\n        name={`${filter.key}.value`}\n        type={filter.control.inputType}\n        min={'minValue' in control ? control.minValue : undefined}\n        max={'maxValue' in control ? control.maxValue : undefined}\n        minLength={'minLength' in control ? control.minLength : undefined}\n        maxLength={'maxLength' in control ? control.maxLength : undefined}\n        required\n      />\n    </Fragment>\n  );\n}\n","import {ChipValue} from './chip-field';\n\nexport function stringToChipValue(value: string | number): ChipValue {\n  // add both name and description so \"validateWith\" works properly in chip field, if it depends on description\n  return {id: value, name: `${value}`, description: `${value}`};\n}\n","import React, {\n  HTMLAttributes,\n  Key,\n  ReactElement,\n  ReactNode,\n  Ref,\n  RefObject,\n  useCallback,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport {useFocusManager} from '@react-aria/focus';\nimport clsx from 'clsx';\nimport {mergeProps, useLayoutEffect, useObjectRef} from '@react-aria/utils';\nimport {useControlledState} from '@react-stately/utils';\nimport {ChipList} from './chip-list';\nimport {Field} from '../field';\nimport {Input} from '../input';\nimport {Chip, ChipProps} from './chip';\nimport {NormalizedModel} from '@common/datatable/filters/normalized-model';\nimport {getInputFieldClassNames} from '../get-input-field-class-names';\nimport {ProgressCircle} from '../../../progress/progress-circle';\nimport {useField} from '../use-field';\nimport {Avatar} from '../../../images/avatar';\nimport {Listbox} from '../../listbox/listbox';\nimport {useListbox} from '../../listbox/use-listbox';\nimport {BaseFieldPropsWithDom} from '../base-field-props';\nimport {useListboxKeyboardNavigation} from '../../listbox/use-listbox-keyboard-navigation';\nimport {createEventHandler} from '@common/utils/dom/create-event-handler';\nimport {ListBoxChildren, ListboxProps} from '../../listbox/types';\nimport {stringToChipValue} from './string-to-chip-value';\nimport {Popover} from '../../../overlays/popover';\nimport {KeyboardArrowDownIcon} from '@common/icons/material/KeyboardArrowDown';\n\nexport interface ChipValue extends Omit<NormalizedModel, 'model_type'> {\n  invalid?: boolean;\n  errorMessage?: string;\n}\n\nexport type ChipFieldProps<T> = Omit<\n  ListboxProps,\n  'selectionMode' | 'displayWith'\n> &\n  Omit<\n    BaseFieldPropsWithDom<HTMLInputElement>,\n    'value' | 'onChange' | 'defaultValue'\n  > & {\n    value?: (ChipValue | string)[];\n    defaultValue?: (ChipValue | string)[];\n    displayWith?: (value: ChipValue) => ReactNode;\n    validateWith?: (value: ChipValue) => ChipValue;\n    allowCustomValue?: boolean;\n    showDropdownArrow?: boolean;\n    onChange?: (value: ChipValue[]) => void;\n    suggestions?: T[];\n    children?: ListBoxChildren<T>['children'];\n    placeholder?: string;\n    chipSize?: ChipProps['size'];\n    openMenuOnFocus?: boolean;\n    valueKey?: 'id' | 'name';\n    onChipClick?: (value: ChipValue) => void;\n  };\n\nfunction ChipFieldInner<T>(\n  props: ChipFieldProps<T>,\n  ref: Ref<HTMLInputElement>,\n) {\n  const fieldRef = useRef<HTMLDivElement>(null);\n  const inputRef = useObjectRef(ref);\n  const {\n    displayWith = v => v.name,\n    validateWith,\n    children,\n    suggestions,\n    isLoading,\n    inputValue,\n    onInputValueChange,\n    onItemSelected,\n    placeholder,\n    onOpenChange,\n    chipSize = 'sm',\n    openMenuOnFocus = true,\n    showEmptyMessage,\n    value: propsValue,\n    defaultValue,\n    onChange: propsOnChange,\n    valueKey,\n    isAsync,\n    allowCustomValue = true,\n    showDropdownArrow,\n    onChipClick,\n    ...inputFieldProps\n  } = props;\n  const fieldClassNames = getInputFieldClassNames({\n    ...props,\n    flexibleHeight: true,\n  });\n\n  const [value, onChange] = useChipFieldValueState(props);\n\n  const [listboxIsOpen, setListboxIsOpen] = useState(false);\n\n  const loadingIndicator = (\n    <ProgressCircle isIndeterminate size=\"sm\" aria-label=\"loading...\" />\n  );\n\n  const dropdownArrow = showDropdownArrow ? <KeyboardArrowDownIcon /> : null;\n\n  const {fieldProps, inputProps} = useField({\n    ...inputFieldProps,\n    focusRef: inputRef,\n    endAdornment: isLoading && listboxIsOpen ? loadingIndicator : dropdownArrow,\n  });\n\n  return (\n    <Field fieldClassNames={fieldClassNames} {...fieldProps}>\n      <Input\n        ref={fieldRef}\n        className={clsx('flex flex-wrap items-center', fieldClassNames.input)}\n        onClick={() => {\n          // refocus input when clicking outside it, but while still inside chip field\n          inputRef.current?.focus();\n        }}\n      >\n        <ListWrapper\n          displayChipUsing={displayWith}\n          onChipClick={onChipClick}\n          items={value}\n          setItems={onChange}\n          chipSize={chipSize}\n        />\n        <ChipInput\n          showEmptyMessage={showEmptyMessage}\n          inputProps={inputProps}\n          inputValue={inputValue}\n          onInputValueChange={onInputValueChange}\n          fieldRef={fieldRef}\n          inputRef={inputRef}\n          chips={value}\n          setChips={onChange}\n          validateWith={validateWith}\n          isLoading={isLoading}\n          suggestions={suggestions}\n          placeholder={placeholder}\n          openMenuOnFocus={openMenuOnFocus}\n          listboxIsOpen={listboxIsOpen}\n          setListboxIsOpen={setListboxIsOpen}\n          allowCustomValue={allowCustomValue}\n        >\n          {children}\n        </ChipInput>\n      </Input>\n    </Field>\n  );\n}\n\ninterface ListWrapperProps {\n  items: ChipValue[];\n  setItems: (items: ChipValue[]) => void;\n  displayChipUsing: (value: ChipValue) => ReactNode;\n  chipSize?: ChipProps['size'];\n  onChipClick?: (value: ChipValue) => void;\n}\nfunction ListWrapper({\n  items,\n  setItems,\n  displayChipUsing,\n  chipSize,\n  onChipClick,\n}: ListWrapperProps) {\n  const manager = useFocusManager();\n  const removeItem = useCallback(\n    (key: Key) => {\n      const i = items.findIndex(cr => cr.id === key);\n      const newItems = [...items];\n      if (i > -1) {\n        newItems.splice(i, 1);\n        setItems(newItems);\n      }\n      return newItems;\n    },\n    [items, setItems],\n  );\n\n  return (\n    <ChipList\n      className=\"my-8 max-w-full flex-shrink-0 flex-wrap\"\n      size={chipSize}\n      selectable\n    >\n      {items.map(item => (\n        <Chip\n          key={item.id}\n          errorMessage={item.errorMessage}\n          adornment={item.image ? <Avatar circle src={item.image} /> : null}\n          onClick={() => onChipClick?.(item)}\n          onRemove={() => {\n            const newItems = removeItem(item.id);\n            if (newItems.length) {\n              // focus previous chip\n              manager?.focusPrevious({tabbable: true});\n            } else {\n              // focus input\n              manager?.focusLast();\n            }\n          }}\n        >\n          {displayChipUsing(item)}\n        </Chip>\n      ))}\n    </ChipList>\n  );\n}\n\ninterface ChipInputProps<T> {\n  showEmptyMessage?: boolean;\n  inputProps: ReturnType<typeof useField>['inputProps'];\n  inputValue?: string;\n  onInputValueChange?: (value: string) => void;\n  fieldRef: RefObject<HTMLDivElement>;\n  inputRef: RefObject<HTMLInputElement>;\n  chips: ChipValue[];\n  setChips: (items: ChipValue[]) => void;\n  validateWith?: (value: ChipValue) => ChipValue;\n  isLoading?: boolean;\n  suggestions?: T[];\n  placeholder?: string;\n  openMenuOnFocus?: boolean;\n  listboxIsOpen: boolean;\n  setListboxIsOpen: (value: boolean) => void;\n  allowCustomValue: boolean;\n  children: ListBoxChildren<T>['children'];\n}\nfunction ChipInput<T>(props: ChipInputProps<T>) {\n  const {\n    inputRef,\n    fieldRef,\n    validateWith,\n    setChips,\n    chips,\n    suggestions,\n    inputProps,\n    placeholder,\n    openMenuOnFocus,\n    listboxIsOpen,\n    setListboxIsOpen,\n    allowCustomValue,\n    isLoading,\n  } = props;\n  const inputClassName = 'outline-none text-sm mx-8 my-4 h-30 flex-auto';\n  const manager = useFocusManager();\n\n  const addItems = useCallback(\n    (items?: ChipValue[]) => {\n      items = (items || []).filter(item => {\n        const invalid = !item || !item.id || !item.name;\n        const alreadyExists = chips.findIndex(cr => cr.id === item?.id) > -1;\n        return !alreadyExists && !invalid;\n      });\n      if (!items.length) return;\n\n      if (validateWith) {\n        items = items.map(item => validateWith(item));\n      }\n      setChips([...chips, ...items]);\n    },\n    [chips, setChips, validateWith],\n  );\n\n  const listbox = useListbox<T>({\n    ...props,\n    clearInputOnItemSelection: true,\n    isOpen: listboxIsOpen,\n    onOpenChange: setListboxIsOpen,\n    items: suggestions,\n    selectionMode: 'none',\n    role: 'listbox',\n    virtualFocus: true,\n    onItemSelected: value => {\n      handleItemSelection(value as string);\n    },\n  });\n\n  const {\n    state: {\n      activeIndex,\n      setActiveIndex,\n      isOpen,\n      setIsOpen,\n      inputValue,\n      setInputValue,\n    },\n    refs,\n    listboxId,\n    collection,\n    onInputChange,\n  } = listbox;\n\n  const handleItemSelection = (textValue: string) => {\n    const option =\n      collection.size && activeIndex != null\n        ? [...collection.values()][activeIndex]\n        : null;\n    if (option?.item) {\n      addItems([option.item]);\n    } else if (allowCustomValue) {\n      addItems([stringToChipValue(option ? option.value : textValue)]);\n    }\n\n    setInputValue('');\n    setActiveIndex(null);\n    setIsOpen(false);\n  };\n\n  // position dropdown relative to whole chip field, not the input\n  useLayoutEffect(() => {\n    if (fieldRef.current && refs.reference.current !== fieldRef.current) {\n      listbox.reference(fieldRef.current);\n    }\n  }, [fieldRef, listbox, refs]);\n\n  const {handleTriggerKeyDown, handleListboxKeyboardNavigation} =\n    useListboxKeyboardNavigation(listbox);\n\n  const handleFocusAndClick = createEventHandler(() => {\n    if (openMenuOnFocus && !isOpen) {\n      setIsOpen(true);\n    }\n  });\n\n  return (\n    <Listbox\n      listbox={listbox}\n      mobileOverlay={Popover}\n      isLoading={isLoading}\n      onPointerDown={e => {\n        // prevent focus from leaving input when scrolling listbox via mouse\n        e.preventDefault();\n      }}\n    >\n      <input\n        type=\"text\"\n        className={clsx(inputClassName, 'bg-transparent')}\n        placeholder={placeholder}\n        {...mergeProps(inputProps, {\n          ref: inputRef,\n          value: inputValue,\n          onChange: onInputChange,\n          onPaste: e => {\n            const paste = e.clipboardData.getData('text');\n            const emails = paste.match(\n              /([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9._-]+)/gi,\n            );\n            if (emails) {\n              e.preventDefault();\n              const selection = window.getSelection();\n              if (selection?.rangeCount) {\n                selection.deleteFromDocument();\n                addItems(emails.map(email => stringToChipValue(email)));\n              }\n            }\n          },\n          'aria-autocomplete': 'list',\n          'aria-controls': isOpen ? listboxId : undefined,\n          autoComplete: 'off',\n          autoCorrect: 'off',\n          spellCheck: 'false',\n          onKeyDown: e => {\n            const input = e.target as HTMLInputElement;\n\n            if (e.key === 'Enter') {\n              // prevent form submitting\n              e.preventDefault();\n              // add chip from selected listbox option or current input text value\n              handleItemSelection(input.value);\n              return;\n            }\n\n            // on escape, clear input and close dropdown\n            if (e.key === 'Escape' && isOpen) {\n              setIsOpen(false);\n              setInputValue('');\n            }\n\n            // move focus to input when focus is on first item and prevent arrow up from cycling listbox\n            if (\n              e.key === 'ArrowUp' &&\n              isOpen &&\n              (activeIndex === 0 || activeIndex == null)\n            ) {\n              setActiveIndex(null);\n              return;\n            }\n\n            // block left and right arrows from navigating in input, if focus is on listbox\n            if (\n              activeIndex != null &&\n              (e.key === 'ArrowLeft' || e.key === 'ArrowRight')\n            ) {\n              e.preventDefault();\n              return;\n            }\n\n            // move focus on the last chip, if focus is at the  start of input\n            if (\n              (e.key === 'ArrowLeft' ||\n                e.key === 'Backspace' ||\n                e.key === 'Delete') &&\n              input.selectionStart === 0 &&\n              activeIndex == null &&\n              chips.length\n            ) {\n              manager?.focusPrevious({tabbable: true});\n              return;\n            }\n\n            // fallthrough to listbox navigation handlers for arrow keys\n            const handled = handleTriggerKeyDown(e);\n            if (!handled) {\n              handleListboxKeyboardNavigation(e);\n            }\n          },\n          onFocus: handleFocusAndClick,\n          onClick: handleFocusAndClick,\n        } as HTMLAttributes<HTMLInputElement>)}\n      />\n    </Listbox>\n  );\n}\n\nfunction useChipFieldValueState({\n  onChange,\n  value,\n  defaultValue,\n  valueKey,\n}: ChipFieldProps<any>) {\n  // convert value from string[] to ChipValue[], if needed\n  const propsValue = useMemo(() => {\n    return mixedValueToChipValue(value);\n  }, [value]);\n\n  // convert defaultValue from string[] to ChipValue[], if needed\n  const propsDefaultValue = useMemo(() => {\n    return mixedValueToChipValue(defaultValue);\n  }, [defaultValue]);\n\n  // emit string[] or ChipValue[] on change, based on \"valueKey\" prop\n  const handleChange = useCallback(\n    (value: ChipValue[]) => {\n      const newValue = valueKey ? value.map(v => v[valueKey]) : value;\n      onChange?.(newValue as any);\n    },\n    [onChange, valueKey],\n  );\n\n  return useControlledState<ChipValue[]>(\n    !propsValue ? undefined : propsValue,\n    propsDefaultValue || [],\n    handleChange,\n  );\n}\n\nfunction mixedValueToChipValue(\n  value?: (string | number | ChipValue)[] | null,\n): ChipValue[] | undefined {\n  if (value == null) {\n    return undefined;\n  }\n\n  return value.map(v => {\n    return typeof v !== 'object' ? stringToChipValue(v as string) : v;\n  });\n}\n\nexport const ChipField = React.forwardRef(ChipFieldInner) as <T>(\n  props: ChipFieldProps<T> & {ref?: Ref<HTMLInputElement>},\n) => ReactElement;\n","import {useController} from 'react-hook-form';\nimport {mergeProps} from '@react-aria/utils';\nimport React from 'react';\nimport {ChipField, ChipFieldProps} from './chip-field';\n\nexport type FormChipFieldProps<T> = ChipFieldProps<T> & {\n  name: string;\n};\n\nexport function FormChipField<T>({children, ...props}: FormChipFieldProps<T>) {\n  const {\n    field: {onChange, onBlur, value = [], ref},\n    fieldState: {invalid, error},\n  } = useController({\n    name: props.name,\n  });\n\n  const formProps: Partial<ChipFieldProps<T>> = {\n    onChange,\n    onBlur,\n    value,\n    invalid,\n    errorMessage: error?.message,\n  };\n\n  return (\n    <ChipField ref={ref} {...mergeProps(formProps, props)}>\n      {children}\n    </ChipField>\n  );\n}\n","import {Item} from '@common/ui/forms/listbox/item';\nimport {FilterPanelProps} from '@common/datatable/filters/panels/filter-panel-props';\nimport {FormChipField} from '@common/ui/forms/input-field/chip-field/form-chip-field';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {FilterChipFieldControl} from '@common/datatable/filters/backend-filter';\nimport {Trans} from '@common/i18n/trans';\n\nexport function ChipFieldFilterPanel({\n  filter,\n}: FilterPanelProps<FilterChipFieldControl>) {\n  const {trans} = useTrans();\n  return (\n    <FormChipField\n      size=\"sm\"\n      name={`${filter.key}.value`}\n      valueKey=\"id\"\n      allowCustomValue={false}\n      showDropdownArrow\n      placeholder={\n        filter.control.placeholder\n          ? trans(filter.control.placeholder)\n          : undefined\n      }\n      displayWith={chip =>\n        filter.control.options.find(o => o.key === chip.id)?.label.message\n      }\n      suggestions={filter.control.options.map(o => ({\n        id: o.key,\n        name: o.label.message,\n      }))}\n    >\n      {chip => (\n        <Item key={chip.id} value={chip.id}>\n          {<Trans message={chip.name} />}\n        </Item>\n      )}\n    </FormChipField>\n  );\n}\n","import {Fragment, memo} from 'react';\nimport {useNumberFormatter} from './use-number-formatter';\nimport {NumberFormatOptions} from '@internationalized/number';\nimport {shallowEqual} from '../utils/shallow-equal';\n\ninterface FormattedNumberProps extends NumberFormatOptions {\n  value: number;\n}\nexport const FormattedNumber = memo(\n  ({value, ...options}: FormattedNumberProps) => {\n    const formatter = useNumberFormatter(options);\n\n    if (isNaN(value)) {\n      value = 0;\n    }\n\n    return <Fragment>{formatter.format(value)}</Fragment>;\n  },\n  shallowEqual\n);\n","import {\n  BackendFilter,\n  CustomFilterControl,\n  DatePickerFilterControl,\n  FilterBooleanToggleControl,\n  FilterChipFieldControl,\n  FilterControl,\n  FilterControlType,\n  FilterNumberInputControl,\n  FilterOperator,\n  FilterSelectControl,\n  FilterSelectModelControl,\n  FilterTextInputControl,\n} from '../backend-filter';\nimport {FilterListTriggerButton} from './filter-list-trigger-button';\nimport {Trans} from '@common/i18n/trans';\nimport {SelectFilterPanel} from '../panels/select-filter-panel';\nimport {FilterListItemDialogTrigger} from './filter-list-item-dialog-trigger';\nimport {Avatar} from '@common/ui/images/avatar';\nimport {NormalizedModelFilterPanel} from '../panels/normalized-model-filter-panel';\nimport {DateRangeFilterPanel} from '../panels/date-range-filter-panel';\nimport {Fragment, Key, ReactNode} from 'react';\nimport {DateRangePresets} from '@common/ui/forms/input-field/date/date-range-picker/dialog/date-range-presets';\nimport {FormattedDateTimeRange} from '@common/i18n/formatted-date-time-range';\nimport {AbsoluteDateRange} from '@common/ui/forms/input-field/date/date-range-picker/form-date-range-picker';\nimport {InputFilterPanel} from '../panels/input-filter-panel';\nimport {FilterOperatorNames} from '../filter-operator-names';\nimport {FilterItemFormValue} from '../add-filter-dialog';\nimport {useNormalizedModel} from '@common/users/queries/use-normalized-model';\nimport {Skeleton} from '@common/ui/skeleton/skeleton';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {ChipFieldFilterPanel} from '@common/datatable/filters/panels/chip-field-filter-panel';\nimport {FormattedNumber} from '@common/i18n/formatted-number';\n\nexport interface FilterListControlProps<T = unknown, E = FilterControl> {\n  filter: BackendFilter<E>;\n  onValueChange: (value: FilterItemFormValue<T>) => void;\n  value: T;\n  operator?: FilterOperator;\n  isInactive?: boolean;\n}\nexport function FilterListControl(props: FilterListControlProps<any, any>) {\n  switch (props.filter.control.type) {\n    case FilterControlType.DateRangePicker:\n      return <DatePickerControl {...props} />;\n    case FilterControlType.BooleanToggle:\n      return <BooleanToggleControl {...props} />;\n    case FilterControlType.Select:\n      return <SelectControl {...props} />;\n    case FilterControlType.ChipField:\n      return <ChipFieldControl {...props} />;\n    case FilterControlType.Input:\n      return <InputControl {...props} />;\n    case FilterControlType.SelectModel:\n      return <SelectModelControl {...props} />;\n    case FilterControlType.Custom:\n      const Control = (props.filter.control as CustomFilterControl).listItem;\n      return <Control {...props} />;\n    default:\n      return null;\n  }\n}\n\nfunction DatePickerControl(\n  props: FilterListControlProps<\n    Required<AbsoluteDateRange>,\n    DatePickerFilterControl\n  >,\n) {\n  const {value, filter} = props;\n\n  let valueLabel: ReactNode;\n  if (value.preset !== undefined) {\n    valueLabel = <Trans {...DateRangePresets[value.preset].label} />;\n  } else {\n    valueLabel = (\n      <FormattedDateTimeRange\n        start={new Date(value.start)}\n        end={new Date(value.end)}\n        options={{dateStyle: 'medium'}}\n      />\n    );\n  }\n\n  return (\n    <FilterListItemDialogTrigger\n      {...props}\n      label={valueLabel}\n      panel={<DateRangeFilterPanel filter={filter} />}\n    />\n  );\n}\n\nfunction BooleanToggleControl({\n  filter,\n  isInactive,\n  onValueChange,\n}: FilterListControlProps<\n  FilterBooleanToggleControl['defaultValue'],\n  FilterBooleanToggleControl\n>) {\n  // todo: toggle control on or off here\n  return (\n    <FilterListTriggerButton\n      onClick={() => {\n        onValueChange({value: filter.control.defaultValue});\n      }}\n      filter={filter}\n      isInactive={isInactive}\n    />\n  );\n}\n\nfunction SelectControl(\n  props: FilterListControlProps<Key, FilterSelectControl>,\n) {\n  const {filter, value} = props;\n  const option = filter.control.options.find(o => o.key === value);\n  return (\n    <FilterListItemDialogTrigger\n      {...props}\n      label={option ? <Trans {...option.label} /> : null}\n      panel={<SelectFilterPanel filter={filter} />}\n    />\n  );\n}\n\nfunction ChipFieldControl(\n  props: FilterListControlProps<string[], FilterChipFieldControl>,\n) {\n  return (\n    <FilterListItemDialogTrigger\n      {...props}\n      label={<MultipleValues {...props} />}\n      panel={<ChipFieldFilterPanel filter={props.filter} />}\n    />\n  );\n}\n\nfunction MultipleValues(\n  props: FilterListControlProps<string[], FilterChipFieldControl>,\n) {\n  const {trans} = useTrans();\n  const {filter, value} = props;\n  const options = value.map(v => filter.control.options.find(o => o.key === v));\n  const maxShownCount = 3;\n  const notShownCount = value.length - maxShownCount;\n\n  // translate names, add commas and limit to 3\n  const names = (\n    <Fragment>\n      {options\n        .filter(Boolean)\n        .slice(0, maxShownCount)\n        .map((o, i) => {\n          let name = '';\n          if (i !== 0) {\n            name += ', ';\n          }\n          name += trans(o!.label);\n          return name;\n        })}\n    </Fragment>\n  );\n\n  // indicate that there are some names not shown\n  return notShownCount > 0 ? (\n    <Trans\n      message=\":names + :count more\"\n      values={{names: names, count: notShownCount}}\n    />\n  ) : (\n    names\n  );\n}\n\nfunction InputControl(\n  props: FilterListControlProps<\n    string,\n    FilterTextInputControl | FilterNumberInputControl\n  >,\n) {\n  const {filter, value, operator} = props;\n\n  const operatorLabel = operator ? (\n    <Trans {...FilterOperatorNames[operator]} />\n  ) : null;\n\n  const formattedValue =\n    filter.control.inputType === 'number' ? (\n      <FormattedNumber value={value as any} />\n    ) : (\n      value\n    );\n\n  return (\n    <FilterListItemDialogTrigger\n      {...props}\n      label={\n        <Fragment>\n          {operatorLabel} {formattedValue}\n        </Fragment>\n      }\n      panel={<InputFilterPanel filter={filter} />}\n    />\n  );\n}\n\nfunction SelectModelControl(\n  props: FilterListControlProps<string, FilterSelectModelControl>,\n) {\n  const {value, filter} = props;\n  const {isLoading, data} = useNormalizedModel(\n    `normalized-models/${filter.control.model}/${value}`,\n    undefined,\n    {enabled: !!value},\n  );\n\n  const skeleton = (\n    <Fragment>\n      <Skeleton variant=\"avatar\" size=\"w-18 h-18 mr-6\" />\n      <Skeleton variant=\"rect\" size=\"w-50\" />\n    </Fragment>\n  );\n  const modelPreview = (\n    <Fragment>\n      <Avatar size=\"xs\" src={data?.model.image} className=\"mr-6\" />\n      {data?.model.name}\n    </Fragment>\n  );\n\n  const label = isLoading || !data ? skeleton : modelPreview;\n\n  return (\n    <FilterListItemDialogTrigger\n      {...props}\n      label={label}\n      panel={<NormalizedModelFilterPanel filter={filter} />}\n    />\n  );\n}\n","import clsx from 'clsx';\nimport {BackendFilter} from '../backend-filter';\nimport {useBackendFilterUrlParams} from '../backend-filter-url-params';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {CloseIcon} from '@common/icons/material/Close';\nimport {FilterListControl} from './filter-list-control';\nimport {FilterItemFormValue} from '../add-filter-dialog';\n\ninterface FilterListProps {\n  filters: BackendFilter[];\n  // these filters will always be shown, even if value is not yet selected for filter\n  pinnedFilters?: string[];\n  className?: string;\n}\nexport function FilterList({\n  filters,\n  pinnedFilters,\n  className,\n}: FilterListProps) {\n  const {decodedFilters, remove, replaceAll} = useBackendFilterUrlParams(\n    filters,\n    pinnedFilters\n  );\n\n  if (!decodedFilters.length) return null;\n\n  return (\n    <div className={clsx('flex items-center gap-6 overflow-x-auto', className)}>\n      {decodedFilters.map((field, index) => {\n        const filter = filters.find(f => f.key === field.key);\n\n        if (!filter) return null;\n\n        const handleValueChange = (payload: FilterItemFormValue) => {\n          const newFilters = [...decodedFilters];\n          newFilters.splice(index, 1, {\n            key: filter.key,\n            value: payload.value,\n            isInactive: false,\n            operator: payload.operator || filter.defaultOperator,\n          });\n          replaceAll(newFilters);\n        };\n\n        return (\n          <div key={field.key}>\n            {!field.isInactive && (\n              <IconButton\n                variant=\"outline\"\n                color=\"primary\"\n                size=\"xs\"\n                radius=\"rounded-l-md\"\n                onClick={() => {\n                  remove(field.key);\n                }}\n              >\n                <CloseIcon />\n              </IconButton>\n            )}\n            <FilterListControl\n              filter={filter}\n              isInactive={field.isInactive}\n              value={field.valueKey != null ? field.valueKey : field.value}\n              operator={field.operator}\n              onValueChange={handleValueChange}\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FilterAltIcon = createSvgIcon(\n  <path d=\"M7 6h10l-5.01 6.3L7 6zm-2.75-.39C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61z\" />\n, 'FilterAltOutlined');\n","import React, {\n  cloneElement,\n  isValidElement,\n  Key,\n  ReactElement,\n  ReactNode,\n  useId,\n  useRef,\n} from 'react';\nimport clsx from 'clsx';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {useControlledState} from '@react-stately/utils';\nimport {FocusScope, useFocusManager} from '@react-aria/focus';\nimport {AccordionAnimation} from '@common/ui/accordion/accordtion-animation';\nimport {ArrowDropDownIcon} from '@common/icons/material/ArrowDropDown';\n\ntype Props = {\n  variant?: 'outline' | 'default' | 'minimal';\n  children?: ReactNode;\n  mode?: 'single' | 'multiple';\n  expandedValues?: Key[];\n  defaultExpandedValues?: Key[];\n  onExpandedChange?: (key: Key[]) => void;\n  className?: string;\n  isLazy?: boolean;\n};\nexport const Accordion = React.forwardRef<HTMLDivElement, Props>(\n  (\n    {\n      variant = 'default',\n      mode = 'single',\n      children,\n      className,\n      isLazy,\n      ...other\n    },\n    ref,\n  ) => {\n    const [expandedValues, setExpandedValues] = useControlledState(\n      other.expandedValues,\n      other.defaultExpandedValues || [],\n      other.onExpandedChange,\n    );\n\n    const itemsCount = React.Children.count(children);\n\n    return (\n      <div\n        className={clsx(variant === 'outline' && 'space-y-10', className)}\n        ref={ref}\n        role=\"presentation\"\n      >\n        <AnimatePresence>\n          <FocusScope>\n            {React.Children.map(children, (child, index) => {\n              if (!isValidElement<ClonedItemProps>(child)) return null;\n              return cloneElement<ClonedItemProps>(child, {\n                key: child.key || index,\n                value: child.props.value || index,\n                isFirst: index === 0,\n                isLast: index === itemsCount - 1,\n                mode,\n                variant,\n                expandedValues,\n                setExpandedValues,\n                isLazy,\n              });\n            })}\n          </FocusScope>\n        </AnimatePresence>\n      </div>\n    );\n  },\n);\n\ninterface AccordionItemProps {\n  children: ReactNode;\n  disabled?: boolean;\n  label: ReactNode;\n  description?: ReactNode;\n  value?: Key;\n  isFirst?: boolean;\n  isLast?: boolean;\n  bodyClassName?: string;\n  labelClassName?: string;\n  buttonPadding?: string;\n  chevronPosition?: 'left' | 'right';\n  startIcon?: ReactElement;\n  endAppend?: ReactElement;\n}\ninterface ClonedItemProps extends AccordionItemProps {\n  variant?: 'outline' | 'default' | 'minimal';\n  expandedValues: Key[];\n  setExpandedValues: (keys: Key[]) => void;\n  mode: 'single' | 'multiple';\n  value: Key;\n  isLazy?: boolean;\n}\nexport function AccordionItem({\n  children,\n  label,\n  disabled,\n  bodyClassName,\n  labelClassName,\n  buttonPadding = 'py-10 pl-14 pr-10',\n  startIcon,\n  description,\n  endAppend,\n  chevronPosition = 'right',\n  isFirst,\n  isLast,\n  ...other\n}: AccordionItemProps) {\n  const {expandedValues, setExpandedValues, variant, value, mode, isLazy} =\n    other as ClonedItemProps;\n  const ref = useRef<HTMLButtonElement>(null);\n  const isExpanded = !disabled && expandedValues.includes(value);\n  const wasExpandedOnce = useRef(false);\n  if (isExpanded) {\n    wasExpandedOnce.current = true;\n  }\n  const focusManager = useFocusManager();\n  const id = useId();\n  const buttonId = `${id}-button`;\n  const panelId = `${id}-panel`;\n\n  const onKeyDown = (e: React.KeyboardEvent<HTMLButtonElement>) => {\n    switch (e.key) {\n      case 'ArrowDown':\n        focusManager?.focusNext();\n        break;\n      case 'ArrowUp':\n        focusManager?.focusPrevious();\n        break;\n      case 'Home':\n        focusManager?.focusFirst();\n        break;\n      case 'End':\n        focusManager?.focusLast();\n        break;\n    }\n  };\n\n  const toggle = () => {\n    const i = expandedValues.indexOf(value);\n    if (i > -1) {\n      const newKeys = [...expandedValues];\n      newKeys.splice(i, 1);\n      setExpandedValues(newKeys);\n    } else if (mode === 'single') {\n      setExpandedValues([value]);\n    } else {\n      setExpandedValues([...expandedValues, value]);\n    }\n  };\n\n  const chevron = (\n    <div className={clsx(variant === 'minimal' && '')}>\n      <ArrowDropDownIcon\n        aria-hidden=\"true\"\n        size=\"md\"\n        className={clsx(\n          disabled ? 'text-disabled' : 'text-muted',\n          isExpanded && 'rotate-180 transition-transform',\n        )}\n      />\n    </div>\n  );\n\n  return (\n    <div\n      className={clsx(\n        variant === 'default' && 'border-b',\n        variant === 'outline' && 'rounded-panel border',\n        disabled && 'text-disabled',\n      )}\n    >\n      <h3\n        className={clsx(\n          'flex w-full items-center justify-between text-sm',\n          disabled && 'pointer-events-none',\n          isFirst && variant === 'default' && 'border-t',\n          isExpanded && variant !== 'minimal'\n            ? 'border-b'\n            : 'border-b border-b-transparent',\n          variant === 'outline'\n            ? isExpanded\n              ? 'rounded-panel-t'\n              : 'rounded-panel'\n            : undefined,\n        )}\n      >\n        <button\n          disabled={disabled}\n          aria-expanded={isExpanded}\n          id={buttonId}\n          aria-controls={panelId}\n          type=\"button\"\n          ref={ref}\n          onKeyDown={onKeyDown}\n          onClick={() => {\n            if (!disabled) {\n              toggle();\n            }\n          }}\n          className={clsx(\n            'flex flex-auto items-center gap-10 text-left outline-none hover:bg-hover focus-visible:bg-primary/focus',\n            buttonPadding,\n          )}\n        >\n          {chevronPosition === 'left' && chevron}\n          {startIcon &&\n            cloneElement(startIcon, {\n              size: 'md',\n              className: clsx(\n                startIcon.props.className,\n                disabled ? 'text-disabled' : 'text-muted',\n              ),\n            })}\n          <div className=\"flex-auto overflow-hidden overflow-ellipsis\">\n            <div className={labelClassName} data-testid=\"accordion-label\">\n              {label}\n            </div>\n            {description && (\n              <div className=\"text-xs text-muted\">{description}</div>\n            )}\n          </div>\n          {chevronPosition === 'right' && chevron}\n        </button>\n        {endAppend && (\n          <div className=\"flex-shrink-0 px-4 text-sm text-muted\">\n            {endAppend}\n          </div>\n        )}\n      </h3>\n      <m.div\n        aria-labelledby={id}\n        role=\"region\"\n        variants={AccordionAnimation.variants}\n        transition={AccordionAnimation.transition}\n        initial={false}\n        animate={isExpanded ? 'open' : 'closed'}\n      >\n        <div className={clsx('p-16', bodyClassName)}>\n          {!isLazy || wasExpandedOnce ? children : null}\n        </div>\n      </m.div>\n    </div>\n  );\n}\n","import {FilterPanelProps} from './filter-panel-props';\nimport {FilterBooleanToggleControl} from '@common/datatable/filters/backend-filter';\n\nexport function BooleanFilterPanel({\n  filter,\n}: FilterPanelProps<FilterBooleanToggleControl>) {\n  // Toggling accordion in the dialog will already apply boolean filter, no need for any extra fields here\n  return null;\n}\n","import {Dialog} from '../../ui/overlays/dialog/dialog';\nimport {\n  BackendFilter,\n  CustomFilterControl,\n  DatePickerFilterControl,\n  FilterBooleanToggleControl,\n  FilterChipFieldControl,\n  FilterControlType,\n  FilterOperator,\n  FilterSelectControl,\n  FilterSelectModelControl,\n  FilterTextInputControl,\n} from './backend-filter';\nimport {Trans} from '../../i18n/trans';\nimport {Key, useState} from 'react';\nimport {DialogHeader} from '../../ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '../../ui/overlays/dialog/dialog-body';\nimport {useBackendFilterUrlParams} from './backend-filter-url-params';\nimport {useDialogContext} from '../../ui/overlays/dialog/dialog-context';\nimport {Accordion, AccordionItem} from '../../ui/accordion/accordion';\nimport {Button} from '../../ui/buttons/button';\nimport {useForm} from 'react-hook-form';\nimport {Form} from '../../ui/forms/form';\nimport {Checkbox} from '../../ui/forms/toggle/checkbox';\nimport {SelectFilterPanel} from './panels/select-filter-panel';\nimport {DateRangeFilterPanel} from './panels/date-range-filter-panel';\nimport {NormalizedModelFilterPanel} from './panels/normalized-model-filter-panel';\nimport {InputFilterPanel} from './panels/input-filter-panel';\nimport {BooleanFilterPanel} from './panels/boolean-filter-panel';\nimport clsx from 'clsx';\nimport {ChipFieldFilterPanel} from '@common/datatable/filters/panels/chip-field-filter-panel';\n\nexport interface FilterItemFormValue<T = any> {\n  value: T;\n  operator?: FilterOperator;\n}\n\ninterface AddFilterDialogProps {\n  filters: BackendFilter[];\n}\nexport function AddFilterDialog({filters}: AddFilterDialogProps) {\n  const {decodedFilters} = useBackendFilterUrlParams(filters);\n  const {formId} = useDialogContext();\n\n  // expand currently active filters\n  const [expandedFilters, setExpandedFilters] = useState<Key[]>(() => {\n    return decodedFilters.map(f => f.key);\n  });\n\n  const clearButton = (\n    <Button\n      size=\"xs\"\n      variant=\"outline\"\n      className=\"mr-auto\"\n      onClick={() => {\n        setExpandedFilters([]);\n      }}\n    >\n      <Trans message=\"Clear\" />\n    </Button>\n  );\n\n  const applyButton = (\n    <Button\n      size=\"xs\"\n      variant=\"flat\"\n      color=\"primary\"\n      className=\"ml-auto\"\n      type=\"submit\"\n      form={formId}\n    >\n      <Trans message=\"Apply\" />\n    </Button>\n  );\n\n  return (\n    <Dialog className=\"min-w-[300px]\" maxWidth=\"max-w-400\" size=\"auto\">\n      <DialogHeader\n        padding=\"px-14 py-10\"\n        leftAdornment={clearButton}\n        rightAdornment={applyButton}\n      >\n        <Trans message=\"Filter\" />\n      </DialogHeader>\n      <DialogBody padding=\"p-0\">\n        <FilterList\n          filters={filters}\n          expandedFilters={expandedFilters}\n          setExpandedFilters={setExpandedFilters}\n        />\n      </DialogBody>\n    </Dialog>\n  );\n}\n\ninterface FilterListProps {\n  filters: BackendFilter[];\n  expandedFilters: Key[];\n  setExpandedFilters: (value: Key[]) => void;\n}\nfunction FilterList({\n  filters,\n  expandedFilters,\n  setExpandedFilters,\n}: FilterListProps) {\n  const {decodedFilters, replaceAll} = useBackendFilterUrlParams(filters);\n\n  // either get value and operator from url params if filter is active, or get defaults from filter config\n  const defaultValues: Record<string, FilterItemFormValue> = {};\n  filters.forEach(filter => {\n    const appliedFilter = decodedFilters.find(f => f.key === filter.key);\n    defaultValues[filter.key] =\n      appliedFilter?.value !== undefined\n        ? // there might be some extra keys set on filter besides\n          // \"value\" and \"operator\", so add the whole object to form\n          appliedFilter\n        : {\n            value: filter.control.defaultValue,\n            operator: filter.defaultOperator,\n          };\n  });\n  const form = useForm<Record<string, FilterItemFormValue>>({defaultValues});\n  const {formId, close} = useDialogContext();\n\n  return (\n    <Form\n      form={form}\n      id={formId}\n      onSubmit={formValue => {\n        const filterValue = Object.entries(formValue)\n          // remove undefined and non-expanded filters, so \"clear\" button will correctly remove active filters\n          .filter(\n            ([key, fieldValue]) =>\n              expandedFilters.includes(key) && fieldValue !== undefined\n          )\n          .map(([key, fieldValue]) => ({\n            key,\n            ...fieldValue, // value and operator from form\n          }));\n\n        replaceAll(filterValue);\n        close();\n      }}\n    >\n      <Accordion\n        mode=\"multiple\"\n        expandedValues={expandedFilters}\n        onExpandedChange={setExpandedFilters}\n      >\n        {filters.map(filter => (\n          <AccordionItem\n            startIcon={\n              <Checkbox checked={expandedFilters.includes(filter.key)} />\n            }\n            key={filter.key}\n            value={filter.key}\n            label={<Trans {...filter.label} />}\n            bodyClassName=\"max-h-288 overflow-y-auto compact-scrollbar\"\n          >\n            {filter.description && (\n              <div\n                className={clsx(\n                  'text-xs text-muted',\n                  // boolean filter will have nothing in the panel, no need to add margin\n                  filter.control.type !== FilterControlType.BooleanToggle &&\n                    'mb-14'\n                )}\n              >\n                <Trans {...filter.description} />\n              </div>\n            )}\n            <AddFilterDialogPanel filter={filter} />\n          </AccordionItem>\n        ))}\n      </Accordion>\n    </Form>\n  );\n}\n\ninterface ActiveFilterPanelProps {\n  filter: BackendFilter;\n}\nexport function AddFilterDialogPanel({filter}: ActiveFilterPanelProps) {\n  switch (filter.control.type) {\n    case FilterControlType.Select:\n      return (\n        <SelectFilterPanel\n          filter={filter as BackendFilter<FilterSelectControl>}\n        />\n      );\n    case FilterControlType.ChipField:\n      return (\n        <ChipFieldFilterPanel\n          filter={filter as BackendFilter<FilterChipFieldControl>}\n        />\n      );\n    case FilterControlType.DateRangePicker:\n      return (\n        <DateRangeFilterPanel\n          filter={filter as BackendFilter<DatePickerFilterControl>}\n        />\n      );\n    case FilterControlType.SelectModel:\n      return (\n        <NormalizedModelFilterPanel\n          filter={filter as BackendFilter<FilterSelectModelControl>}\n        />\n      );\n    case FilterControlType.Input:\n      return (\n        <InputFilterPanel\n          filter={filter as BackendFilter<FilterTextInputControl>}\n        />\n      );\n    case FilterControlType.BooleanToggle:\n      return (\n        <BooleanFilterPanel\n          filter={filter as BackendFilter<FilterBooleanToggleControl>}\n        />\n      );\n    case 'custom':\n      const CustomComponent = filter.control.panel;\n      return (\n        <CustomComponent\n          filter={filter as BackendFilter<CustomFilterControl>}\n        />\n      );\n    default:\n      return null;\n  }\n}\n","import {Button, ButtonProps} from '../../ui/buttons/button';\nimport {BackendFilter} from './backend-filter';\nimport {FilterAltIcon} from '../../icons/material/FilterAlt';\nimport {Trans} from '../../i18n/trans';\nimport {useIsMobileMediaQuery} from '../../utils/hooks/is-mobile-media-query';\nimport {IconButton} from '../../ui/buttons/icon-button';\nimport {DialogTrigger} from '../../ui/overlays/dialog/dialog-trigger';\nimport {AddFilterDialog} from './add-filter-dialog';\nimport {ReactElement} from 'react';\n\ninterface AddFilterButtonProps {\n  filters: BackendFilter[];\n  icon?: ReactElement;\n  color?: ButtonProps['color'];\n  variant?: ButtonProps['variant'];\n  disabled?: boolean;\n  size?: ButtonProps['size'];\n  className?: string;\n}\nexport function AddFilterButton({\n  filters,\n  icon = <FilterAltIcon />,\n  color = 'primary',\n  variant = 'outline',\n  size = 'sm',\n  disabled,\n  className,\n}: AddFilterButtonProps) {\n  const isMobile = useIsMobileMediaQuery();\n\n  const desktopButton = (\n    <Button\n      variant={variant}\n      color={color}\n      startIcon={icon}\n      disabled={disabled}\n      size={size}\n      className={className}\n    >\n      <Trans message=\"Filter\" />\n    </Button>\n  );\n\n  const mobileButton = (\n    <IconButton\n      color={color}\n      size=\"sm\"\n      variant={variant}\n      disabled={disabled}\n      className={className}\n    >\n      {icon}\n    </IconButton>\n  );\n\n  return (\n    <DialogTrigger type=\"popover\">\n      {isMobile ? mobileButton : desktopButton}\n      <AddFilterDialog filters={filters} />\n    </DialogTrigger>\n  );\n}\n","import {\n  BackendFilter,\n  DatePickerFilterControl,\n  FilterControlType,\n  FilterOperator,\n} from './backend-filter';\nimport {\n  DateRangePreset,\n  DateRangePresets,\n} from '../../ui/forms/input-field/date/date-range-picker/dialog/date-range-presets';\nimport {message} from '../../i18n/message';\nimport {dateRangeToAbsoluteRange} from '../../ui/forms/input-field/date/date-range-picker/form-date-range-picker';\nimport {PartialWithRequired} from '@common/utils/ts/partial-with-required';\n\nexport function timestampFilter(\n  options: PartialWithRequired<\n    BackendFilter<DatePickerFilterControl>,\n    'key' | 'label'\n  >\n): BackendFilter<DatePickerFilterControl> {\n  return {\n    ...options,\n    defaultOperator: FilterOperator.between,\n    control: {\n      type: FilterControlType.DateRangePicker,\n      defaultValue:\n        options.control?.defaultValue ||\n        dateRangeToAbsoluteRange(\n          (DateRangePresets[3] as Required<DateRangePreset>).getRangeValue()\n        ),\n    },\n  };\n}\n\nexport function createdAtFilter(\n  options: Partial<BackendFilter<DatePickerFilterControl>>\n): BackendFilter<DatePickerFilterControl> {\n  return timestampFilter({\n    key: 'created_at',\n    label: message('Date created'),\n    ...options,\n  });\n}\n\nexport function updatedAtFilter(\n  options: Partial<BackendFilter<DatePickerFilterControl>>\n): BackendFilter<DatePickerFilterControl> {\n  return timestampFilter({\n    key: 'updated_at',\n    label: message('Last updated'),\n    ...options,\n  });\n}\n","import {Permission} from './permission';\nimport {Subscription} from '../billing/subscription';\nimport {Role} from './role';\nimport {SocialProfile} from './social-profile';\nimport {AccessToken} from './access-token';\nimport type {ActiveSession} from '@common/auth/ui/account-settings/sessions-panel/requests/use-user-sessions';\n\nexport const USER_MODEL = 'user';\n\nexport interface User {\n  id: number;\n  display_name: string;\n  username?: string;\n  first_name?: string;\n  last_name?: string;\n  avatar?: string;\n  email_verified_at: string;\n  permissions?: Permission[];\n  email: string;\n  password: string;\n  language: string;\n  timezone: string;\n  country: string;\n  created_at: string;\n  updated_at: string;\n  subscriptions?: Omit<Subscription, 'user'>[];\n  roles: Role[];\n  social_profiles: SocialProfile[];\n  tokens?: AccessToken[];\n  has_password: boolean;\n  available_space: number | null;\n  unread_notifications_count?: number;\n  card_last_four?: number;\n  card_brand?: string;\n  card_expires?: string;\n  model_type: typeof USER_MODEL;\n  banned_at?: string;\n  followed_users?: Omit<User, 'followed_users' | 'followers'>[];\n  followers_count?: number;\n  followed_users_count?: number;\n  followers?: Omit<User, 'followed_users' | 'followers'>[];\n  last_login?: ActiveSession;\n  bans?: {\n    id: number;\n    comment: string;\n    expired_at?: string;\n  }[];\n  two_factor_confirmed_at?: string;\n  two_factor_recovery_codes?: string[];\n}\n","import React, {ReactNode} from 'react';\nimport {Avatar, AvatarProps} from '../../ui/images/avatar';\nimport {Skeleton} from '@common/ui/skeleton/skeleton';\nimport clsx from 'clsx';\n\ninterface Props {\n  image?: string;\n  label: ReactNode;\n  description?: ReactNode;\n  labelClassName?: string;\n  avatarSize?: AvatarProps['size'];\n}\nexport function NameWithAvatar({\n  image,\n  label,\n  description,\n  labelClassName,\n  avatarSize = 'md',\n}: Props) {\n  return (\n    <div className=\"flex items-center gap-12\">\n      {image && (\n        <Avatar size={avatarSize} className=\"flex-shrink-0\" src={image} />\n      )}\n      <div className=\"min-w-0 overflow-hidden\">\n        <div\n          className={clsx(labelClassName, 'overflow-hidden overflow-ellipsis')}\n        >\n          {label}\n        </div>\n        {description && (\n          <div className=\"overflow-hidden overflow-ellipsis text-xs text-muted\">\n            {description}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport function NameWithAvatarPlaceholder({\n  labelClassName,\n  showDescription,\n}: Partial<Props> & {\n  showDescription?: boolean;\n}) {\n  return (\n    <div className=\"flex w-full max-w-4/5 items-center gap-12\">\n      <Skeleton size=\"w-40 h-40 md:w-32 md:h-32\" variant=\"rect\" />\n      <div className=\"flex-auto\">\n        <div className={clsx(labelClassName, 'leading-3')}>\n          <Skeleton />\n        </div>\n        {showDescription && (\n          <div className=\"mt-4 leading-3 text-muted\">{<Skeleton />}</div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const MoreVertIcon = createSvgIcon(\n  <path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\" />\n, 'MoreVertOutlined');\n","import React from 'react';\nimport clsx from 'clsx';\nimport {ButtonColor, ButtonVariant} from './get-shared-button-style';\nimport {ButtonProps} from './button';\nimport {ButtonSize} from './button-size';\n\nexport interface ButtonGroupProps {\n  children: React.ReactNode[];\n  color?: ButtonColor;\n  variant?: ButtonVariant;\n  size?: ButtonSize;\n  radius?: string;\n  className?: string;\n  value?: any;\n  onChange?: (newValue: any) => void;\n  multiple?: boolean;\n  disabled?: boolean;\n}\nexport function ButtonGroup({\n  children,\n  color,\n  variant,\n  radius = 'rounded-button',\n  size,\n  className,\n  value,\n  onChange,\n  multiple,\n  disabled,\n}: ButtonGroupProps) {\n  const isActive = (childValue: any): boolean => {\n    // assume that button group is not used as a toggle group, if there is no value given\n    if (value === undefined) return false;\n    if (multiple) {\n      return (value as any[]).includes(childValue);\n    }\n    return childValue === value;\n  };\n\n  const toggleMultipleValue = (childValue: any) => {\n    const newValue = [...value];\n    const childIndex = value.indexOf(childValue);\n    if (childIndex > -1) {\n      newValue.splice(childIndex, 1);\n    } else {\n      newValue.push(childValue);\n    }\n    return newValue;\n  };\n\n  const buttons = React.Children.map(children, (button, i) => {\n    if (React.isValidElement(button)) {\n      const active = isActive(button.props.value);\n      const adjustedColor = active ? 'primary' : color;\n      return React.cloneElement<ButtonProps>(button as any, {\n        color: active ? 'primary' : color,\n        variant,\n        size,\n        radius: null,\n        disabled: button.props.disabled || disabled,\n        ...button.props,\n        onClick: e => {\n          if (button.props.onClick) {\n            button.props.onClick(e);\n          }\n          if (!onChange) return;\n          if (multiple) {\n            onChange?.(toggleMultipleValue(button.props.value));\n          } else {\n            onChange?.(button.props.value);\n          }\n        },\n        className: clsx(\n          button.props.className,\n          // borders are hidden via negative margin, make sure both are visible for active item\n          active ? 'z-20' : 'z-10',\n          getStyle(i, children, radius, adjustedColor),\n        ),\n      });\n    }\n  });\n  return (\n    <div className={clsx(radius, 'isolate inline-flex', className)}>\n      {buttons}\n    </div>\n  );\n}\n\nfunction getStyle(\n  i: number,\n  children: ButtonGroupProps['children'],\n  radius: ButtonGroupProps['radius'],\n  color?: ButtonColor,\n): string {\n  // first\n  if (i === 0) {\n    return clsx(\n      radius,\n      'rounded-tr-none rounded-br-none',\n      !color && 'border-r-transparent disabled:border-r-transparent',\n    );\n  }\n  // last\n  if (i === children.length - 1) {\n    return clsx(radius, 'rounded-tl-none rounded-bl-none -ml-1');\n  }\n  return clsx(\n    'rounded-none -ml-1',\n    !color && 'border-r-transparent disabled:border-r-transparent',\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {Reply} from '@app/agent/reply';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {UseFormReturn} from 'react-hook-form';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\n\ninterface Response {\n  reply: Reply;\n}\n\nexport interface CreateCannedReplyPayload {\n  name: string;\n  body: string | null;\n  attachments?: number[];\n  shared?: boolean;\n}\n\nexport function useCreateCannedReply(\n  form: UseFormReturn<CreateCannedReplyPayload>,\n) {\n  return useMutation({\n    mutationFn: (payload: CreateCannedReplyPayload) =>\n      createCannedReply(payload),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({queryKey: ['canned-replies']});\n      toast(message('Saved reply created'));\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction createCannedReply(payload: CreateCannedReplyPayload) {\n  return apiClient.post<Response>(`canned-replies`, payload).then(r => r.data);\n}\n","import {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport React, {Fragment, useRef, useState} from 'react';\nimport {Editor} from '@tiptap/react';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport {getReplyBody} from '@app/reply-editor/get-reply-body';\nimport {Form} from '@common/ui/forms/form';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@common/i18n/trans';\nimport {FormSwitch} from '@common/ui/forms/toggle/switch';\nimport {ReplyEditor} from '@app/reply-editor/reply-editor';\nimport {CreateCannedReplyPayload} from '@app/agent/agent-ticket-page/canned-replies/requests/use-create-canned-reply';\nimport {UseFormReturn} from 'react-hook-form';\nimport {CannedReply} from '@app/agent/agent-ticket-page/canned-replies/canned-reply';\n\ninterface CannedReplyFormProps {\n  onSubmit: (value: CreateCannedReplyPayload) => void;\n  form: UseFormReturn<CreateCannedReplyPayload>;\n  reply?: CannedReply;\n}\n\nexport function CannedReplyForm({onSubmit, form, reply}: CannedReplyFormProps) {\n  const {formId} = useDialogContext();\n  const editorRef = useRef<Editor | null>(null);\n  const [attachments, setAttachments] = useState<FileEntry[]>(\n    reply?.attachments || []\n  );\n  const bodyError = form.formState.errors.body?.message;\n\n  const handleSubmit = () => {\n    onSubmit({\n      ...form.getValues(),\n      body: getReplyBody(editorRef),\n      attachments: attachments.map(a => a.id),\n    });\n  };\n\n  return (\n    <Form\n      id={formId}\n      form={form}\n      onSubmit={handleSubmit}\n      onBeforeSubmit={() => form.clearErrors()}\n    >\n      <Fragment>\n        <FileUploadProvider>\n          <FormTextField\n            autoFocus\n            className=\"mb-24\"\n            label={<Trans message=\"Name\" />}\n            name=\"name\"\n          />\n          <FormSwitch\n            className=\"mb-24\"\n            name=\"shared\"\n            description={\n              <Trans message=\"Shared replies will be visible to all agents, not just you.\" />\n            }\n          >\n            <Trans message=\"Shared\" />\n          </FormSwitch>\n          <ReplyEditor\n            initialContent={reply?.body || ''}\n            minHeight=\"min-h-[300px]\"\n            isLoading={false}\n            editorRef={editorRef}\n            attachments={attachments}\n            onAttachmentsChange={attachments => setAttachments(attachments)}\n            onSubmit={handleSubmit}\n          />\n          {bodyError && (\n            <div className=\"pt-10 text-xs text-danger\">{bodyError}</div>\n          )}\n        </FileUploadProvider>\n      </Fragment>\n    </Form>\n  );\n}\n","import {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {Trans} from '@common/i18n/trans';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {Button} from '@common/ui/buttons/button';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport React from 'react';\nimport {\n  CreateCannedReplyPayload,\n  useCreateCannedReply,\n} from '@app/agent/agent-ticket-page/canned-replies/requests/use-create-canned-reply';\nimport {useForm} from 'react-hook-form';\nimport {CannedReplyForm} from '@app/agent/agent-ticket-page/canned-replies/canned-reply-form';\n\nexport function CreateCannedReplyDialog() {\n  const {close, formId} = useDialogContext();\n  const form = useForm<CreateCannedReplyPayload>({\n    defaultValues: {\n      shared: false,\n    },\n  });\n  const createCannedReply = useCreateCannedReply(form);\n\n  const handleSubmit = (value: CreateCannedReplyPayload) => {\n    createCannedReply.mutate(value, {\n      onSuccess: () => close(),\n    });\n  };\n\n  return (\n    <Dialog size=\"lg\">\n      <DialogHeader>\n        <Trans message=\"New saved reply\" />\n      </DialogHeader>\n      <DialogBody>\n        <CannedReplyForm form={form} onSubmit={handleSubmit} />\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          type=\"submit\"\n          form={formId}\n          variant=\"flat\"\n          color=\"primary\"\n          disabled={createCannedReply.isPending}\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {\n  keepPreviousData,\n  useQuery,\n  UseQueryOptions,\n} from '@tanstack/react-query';\nimport {PaginatedBackendResponse} from '../../http/backend-response/pagination-response';\nimport {apiClient} from '../../http/query-client';\n\nexport interface GetDatatableDataParams {\n  orderBy?: string;\n  orderDir?: 'asc' | 'desc';\n  filters?: string | null;\n  query?: string;\n  with?: string;\n  perPage?: number | string | null;\n  page?: number | string;\n  [key: string]: string | number | boolean | undefined | null;\n}\n\nexport const DatatableDataQueryKey = (\n  endpoint: string,\n  params?: GetDatatableDataParams | Record<string, string | number | boolean>,\n) => {\n  // split endpoint by slash, so we can clear cache from the root later,\n  // for example, 'link-group' will clear 'link-group/1/links' endpoint\n  const key: (string | GetDatatableDataParams)[] = endpoint.split('/');\n  if (params) {\n    key.push(params);\n  }\n  return key;\n};\n\nexport function useDatatableData<T = object>(\n  endpoint: string,\n  params: GetDatatableDataParams,\n  options?: Omit<\n    UseQueryOptions<\n      PaginatedBackendResponse<T>,\n      unknown,\n      PaginatedBackendResponse<T>,\n      any[]\n    >,\n    'queryKey' | 'queryFn'\n  >,\n  onLoad?: (data: PaginatedBackendResponse<T>) => void,\n) {\n  return useQuery({\n    queryKey: DatatableDataQueryKey(endpoint, params),\n    queryFn: ({signal}) => paginate<T>(endpoint, params, onLoad, signal),\n    placeholderData: keepPreviousData,\n    ...options,\n  });\n}\n\nasync function paginate<T>(\n  endpoint: string,\n  params: GetDatatableDataParams,\n  onLoad?: (data: PaginatedBackendResponse<T>) => void,\n  signal?: AbortSignal,\n): Promise<PaginatedBackendResponse<T>> {\n  if (params.query) {\n    await new Promise(resolve => setTimeout(resolve, 300));\n  }\n  const response = await apiClient\n    .get(endpoint, {params, signal: params.query ? signal : undefined})\n    .then(response => response.data);\n  onLoad?.(response);\n  return response;\n}\n","import React, {useContext} from 'react';\nimport {GetDatatableDataParams} from '../requests/paginated-resources';\nimport {UseQueryResult} from '@tanstack/react-query';\nimport {PaginatedBackendResponse} from '../../http/backend-response/pagination-response';\n\nexport interface DataTableContextValue {\n  selectedRows: (string | number)[];\n  setSelectedRows: (keys: (string | number)[]) => void;\n  endpoint: string;\n  params: GetDatatableDataParams;\n  setParams: (value: GetDatatableDataParams) => void;\n  query: UseQueryResult<PaginatedBackendResponse<unknown>, unknown>;\n}\n\nexport const DataTableContext = React.createContext<DataTableContextValue>(\n  null!\n);\n\nexport function useDataTable() {\n  return useContext(DataTableContext);\n}\n","import React, {ComponentPropsWithoutRef, ReactNode} from 'react';\nimport {BackendFilter} from './filters/backend-filter';\nimport {useTrans} from '../i18n/use-trans';\nimport {TextField} from '../ui/forms/input-field/text-field/text-field';\nimport {SearchIcon} from '../icons/material/Search';\nimport {AddFilterButton} from './filters/add-filter-button';\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\nimport {message} from '@common/i18n/message';\n\ninterface Props {\n  actions?: ReactNode;\n  filters?: BackendFilter[];\n  filtersLoading?: boolean;\n  searchPlaceholder?: MessageDescriptor;\n  searchValue?: string;\n  onSearchChange: (value: string) => void;\n}\nexport function DataTableHeader({\n  actions,\n  filters,\n  filtersLoading,\n  searchPlaceholder = message('Type to search...'),\n  searchValue = '',\n  onSearchChange,\n}: Props) {\n  const {trans} = useTrans();\n  return (\n    <HeaderLayout>\n      <TextField\n        inputTestId=\"datatable-search\"\n        className=\"flex-auto max-w-440 mr-auto\"\n        inputWrapperClassName=\"mr-24 md:mr-0\"\n        placeholder={trans(searchPlaceholder)}\n        startAdornment={<SearchIcon />}\n        value={searchValue}\n        onChange={e => {\n          onSearchChange(e.target.value);\n        }}\n      />\n      {filters && (\n        <AddFilterButton filters={filters} disabled={filtersLoading} />\n      )}\n      {actions}\n    </HeaderLayout>\n  );\n}\n\ninterface AnimatedHeaderProps extends ComponentPropsWithoutRef<'div'> {\n  children: ReactNode;\n}\nexport function HeaderLayout({children, ...domProps}: AnimatedHeaderProps) {\n  return (\n    <div\n      className=\"mb-24 flex items-center gap-8 md:gap-12 text-muted relative h-42\"\n      {...domProps}\n    >\n      {children}\n    </div>\n  );\n}\n","import {Trans} from '@common/i18n/trans';\nimport React, {ReactNode} from 'react';\nimport {HeaderLayout} from '@common/datatable/data-table-header';\n\ninterface Props {\n  actions?: ReactNode;\n  selectedItemsCount: number;\n}\nexport function SelectedStateDatatableHeader({\n  actions,\n  selectedItemsCount,\n}: Props) {\n  return (\n    <HeaderLayout data-testid=\"datatable-selected-header\">\n      <div className=\"mr-auto\">\n        <Trans\n          message=\"[one 1 item|other :count items] selected\"\n          values={{count: selectedItemsCount}}\n        />\n      </div>\n      {actions}\n    </HeaderLayout>\n  );\n}\n","import {m} from 'framer-motion';\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\nimport {Skeleton} from '@common/ui/skeleton/skeleton';\nimport React from 'react';\n\nexport function FilterListSkeleton() {\n  return (\n    <m.div\n      className=\"flex items-center gap-6 h-30\"\n      key=\"filter-list-skeleton\"\n      {...opacityAnimation}\n    >\n      <Skeleton variant=\"rect\" size=\"h-full w-144\" radius=\"rounded-md\" />\n      <Skeleton variant=\"rect\" size=\"h-full w-112\" radius=\"rounded-md\" />\n      <Skeleton variant=\"rect\" size=\"h-full w-172\" radius=\"rounded-md\" />\n    </m.div>\n  );\n}\n","import React, {\n  cloneElement,\n  ComponentProps,\n  ReactElement,\n  ReactNode,\n  useState,\n} from 'react';\nimport {TableDataItem} from '../ui/tables/types/table-data-item';\nimport {BackendFilter} from './filters/backend-filter';\nimport {MessageDescriptor} from '../i18n/message-descriptor';\nimport {ColumnConfig} from './column-config';\nimport {useTrans} from '../i18n/use-trans';\nimport {useBackendFilterUrlParams} from './filters/backend-filter-url-params';\nimport {\n  GetDatatableDataParams,\n  useDatatableData,\n} from './requests/paginated-resources';\nimport {DataTableContext} from './page/data-table-context';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {ProgressBar} from '../ui/progress/progress-bar';\nimport {Table, TableProps} from '../ui/tables/table';\nimport {DataTablePaginationFooter} from './data-table-pagination-footer';\nimport {DataTableHeader} from './data-table-header';\nimport {FilterList} from './filters/filter-list/filter-list';\nimport {SelectedStateDatatableHeader} from '@common/datatable/selected-state-datatable-header';\nimport clsx from 'clsx';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\nimport {BackendFiltersUrlKey} from '@common/datatable/filters/backend-filters-url-key';\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\nimport {FilterListSkeleton} from '@common/datatable/filters/filter-list/filter-list-skeleton';\n\nexport interface DataTableProps<T extends TableDataItem> {\n  filters?: BackendFilter[];\n  filtersLoading?: boolean;\n  columns: ColumnConfig<T>[];\n  searchPlaceholder?: MessageDescriptor;\n  queryParams?: Record<string, string | number | undefined | null>;\n  endpoint: string;\n  resourceName?: ReactNode;\n  emptyStateMessage: ReactElement<{isFiltering: boolean}>;\n  actions?: ReactNode;\n  enableSelection?: boolean;\n  selectionStyle?: TableProps<T>['selectionStyle'];\n  selectedActions?: ReactNode;\n  onRowAction?: TableProps<T>['onAction'];\n  tableDomProps?: ComponentProps<'table'>;\n  children?: ReactNode;\n  collapseTableOnMobile?: boolean;\n  cellHeight?: string;\n}\nexport function DataTable<T extends TableDataItem>({\n  filters,\n  filtersLoading,\n  columns,\n  searchPlaceholder,\n  queryParams,\n  endpoint,\n  actions,\n  selectedActions,\n  emptyStateMessage,\n  tableDomProps,\n  onRowAction,\n  enableSelection = true,\n  selectionStyle = 'checkbox',\n  children,\n  cellHeight,\n  collapseTableOnMobile = true,\n}: DataTableProps<T>) {\n  const isMobile = useIsMobileMediaQuery();\n  const {trans} = useTrans();\n  const {encodedFilters} = useBackendFilterUrlParams(filters);\n  const [params, setParams] = useState<GetDatatableDataParams>({perPage: 15});\n  const [selectedRows, setSelectedRows] = useState<(string | number)[]>([]);\n  const query = useDatatableData<T>(\n    endpoint,\n    {\n      ...params,\n      ...queryParams,\n      [BackendFiltersUrlKey]: encodedFilters,\n    },\n    undefined,\n    () => setSelectedRows([]),\n  );\n\n  const isFiltering = !!(params.query || params.filters || encodedFilters);\n  const pagination = query.data?.pagination;\n\n  return (\n    <DataTableContext.Provider\n      value={{\n        selectedRows,\n        setSelectedRows,\n        endpoint,\n        params,\n        setParams,\n        query,\n      }}\n    >\n      {children}\n      <AnimatePresence initial={false} mode=\"wait\">\n        {selectedRows.length ? (\n          <SelectedStateDatatableHeader\n            selectedItemsCount={selectedRows.length}\n            actions={selectedActions}\n            key=\"selected\"\n          />\n        ) : (\n          <DataTableHeader\n            searchPlaceholder={searchPlaceholder}\n            searchValue={params.query}\n            onSearchChange={query => setParams({...params, query})}\n            actions={actions}\n            filters={filters}\n            filtersLoading={filtersLoading}\n            key=\"default\"\n          />\n        )}\n      </AnimatePresence>\n\n      {filters && (\n        <div className=\"mb-14\">\n          <AnimatePresence initial={false} mode=\"wait\">\n            {filtersLoading && encodedFilters ? (\n              <FilterListSkeleton />\n            ) : (\n              <m.div key=\"filter-list\" {...opacityAnimation}>\n                <FilterList filters={filters} />\n              </m.div>\n            )}\n          </AnimatePresence>\n        </div>\n      )}\n\n      <div\n        className={clsx(\n          'relative rounded-panel',\n          (!isMobile || !collapseTableOnMobile) && 'border',\n        )}\n      >\n        {query.isFetching && (\n          <ProgressBar\n            isIndeterminate\n            className=\"absolute left-0 top-0 z-10 w-full\"\n            aria-label={trans({message: 'Loading'})}\n            size=\"xs\"\n          />\n        )}\n\n        <div className=\"relative overflow-x-auto md:overflow-hidden\">\n          <Table\n            {...tableDomProps}\n            columns={columns}\n            data={pagination?.data || []}\n            sortDescriptor={params}\n            onSortChange={descriptor => {\n              setParams({...params, ...descriptor});\n            }}\n            selectedRows={selectedRows}\n            enableSelection={enableSelection}\n            selectionStyle={selectionStyle}\n            onSelectionChange={setSelectedRows}\n            onAction={onRowAction}\n            collapseOnMobile={collapseTableOnMobile}\n            cellHeight={cellHeight}\n          />\n        </div>\n\n        {(query.isFetched || query.isPlaceholderData) &&\n        !pagination?.data.length ? (\n          <div className=\"pt-50\">\n            {cloneElement(emptyStateMessage, {\n              isFiltering,\n            })}\n          </div>\n        ) : undefined}\n\n        <DataTablePaginationFooter\n          query={query}\n          onPageChange={page => setParams({...params, page})}\n          onPerPageChange={perPage => setParams({...params, perPage})}\n        />\n      </div>\n    </DataTableContext.Provider>\n  );\n}\n","import React, {ReactElement, ReactNode, useId} from 'react';\nimport {TableDataItem} from '../../ui/tables/types/table-data-item';\nimport {DataTable, DataTableProps} from '../data-table';\nimport {TableProps} from '../../ui/tables/table';\nimport {StaticPageTitle} from '../../seo/static-page-title';\nimport {MessageDescriptor} from '../../i18n/message-descriptor';\nimport clsx from 'clsx';\n\ninterface Props<T extends TableDataItem> extends DataTableProps<T> {\n  title?: ReactElement<MessageDescriptor>;\n  headerContent?: ReactNode;\n  headerItemsAlign?: string;\n  enableSelection?: boolean;\n  onRowAction?: TableProps<T>['onAction'];\n  className?: string;\n}\nexport function DataTablePage<T extends TableDataItem>({\n  title,\n  headerContent,\n  headerItemsAlign = 'items-end',\n  className,\n  ...dataTableProps\n}: Props<T>) {\n  const titleId = useId();\n\n  return (\n    <div className={clsx('p-12 md:p-24', className)}>\n      {title && (\n        <div\n          className={clsx(\n            'mb-16',\n            headerContent && `flex ${headerItemsAlign} gap-4`\n          )}\n        >\n          <StaticPageTitle>{title}</StaticPageTitle>\n          <h1 className=\"text-3xl font-light first:capitalize\" id={titleId}>\n            {title}\n          </h1>\n          {headerContent}\n        </div>\n      )}\n\n      <DataTable\n        {...dataTableProps}\n        tableDomProps={{\n          'aria-labelledby': title ? titleId : undefined,\n        }}\n      />\n    </div>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const AddIcon = createSvgIcon(\n  <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\" />\n, 'AddOutlined');\n","import {AddIcon} from '../icons/material/Add';\nimport {Button} from '../ui/buttons/button';\nimport React, {ReactNode} from 'react';\nimport {useIsMobileMediaQuery} from '../utils/hooks/is-mobile-media-query';\nimport {IconButton} from '../ui/buttons/icon-button';\nimport {To} from 'react-router-dom';\nimport {ButtonBaseProps} from '../ui/buttons/button-base';\n\nexport interface DataTableAddItemButtonProps {\n  children: ReactNode;\n  to?: To;\n  elementType?: ButtonBaseProps['elementType'];\n  onClick?: ButtonBaseProps['onClick'];\n}\nexport const DataTableAddItemButton = React.forwardRef<\n  HTMLButtonElement,\n  DataTableAddItemButtonProps\n>(({children, to, elementType, onClick}, ref) => {\n  const isMobile = useIsMobileMediaQuery();\n\n  if (isMobile) {\n    return (\n      <IconButton\n        ref={ref}\n        variant=\"flat\"\n        color=\"primary\"\n        className=\"flex-shrink-0\"\n        size=\"sm\"\n        to={to}\n        elementType={elementType}\n        onClick={onClick}\n      >\n        <AddIcon />\n      </IconButton>\n    );\n  }\n\n  return (\n    <Button\n      ref={ref}\n      startIcon={<AddIcon />}\n      variant=\"flat\"\n      color=\"primary\"\n      size=\"sm\"\n      to={to}\n      elementType={elementType}\n      onClick={onClick}\n    >\n      {children}\n    </Button>\n  );\n});\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {toast} from '../../ui/toast/toast';\nimport {DatatableDataQueryKey} from './paginated-resources';\nimport {useDataTable} from '../page/data-table-context';\nimport {message} from '../../i18n/message';\nimport {showHttpErrorToast} from '../../utils/http/show-http-error-toast';\nimport {Key} from 'react';\n\ninterface Response extends BackendResponse {\n  //\n}\n\nexport function useDeleteSelectedRows() {\n  const {endpoint, selectedRows, setSelectedRows} = useDataTable();\n  return useMutation({\n    mutationFn: () => deleteSelectedRows(endpoint, selectedRows),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey(endpoint),\n      });\n      toast(\n        message('Deleted [one 1 record|other :count records]', {\n          values: {count: selectedRows.length},\n        }),\n      );\n      setSelectedRows([]);\n    },\n    onError: err =>\n      showHttpErrorToast(err, message('Could not delete records')),\n  });\n}\n\nfunction deleteSelectedRows(endpoint: string, ids: Key[]): Promise<Response> {\n  return apiClient.delete(`${endpoint}/${ids.join(',')}`).then(r => r.data);\n}\n","import {Button} from '../../ui/buttons/button';\nimport {Trans} from '../../i18n/trans';\nimport {ConfirmationDialog} from '../../ui/overlays/dialog/confirmation-dialog';\nimport {DialogTrigger} from '../../ui/overlays/dialog/dialog-trigger';\nimport React from 'react';\nimport {useDeleteSelectedRows} from '../requests/delete-selected-rows';\nimport {useDataTable} from './data-table-context';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\n\nexport function DeleteSelectedItemsAction() {\n  return (\n    <DialogTrigger type=\"modal\">\n      <Button variant=\"flat\" color=\"danger\" className=\"ml-auto\">\n        <Trans message=\"Delete\" />\n      </Button>\n      <DeleteItemsDialog />\n    </DialogTrigger>\n  );\n}\n\nfunction DeleteItemsDialog() {\n  const deleteSelectedRows = useDeleteSelectedRows();\n  const {selectedRows} = useDataTable();\n  const {close} = useDialogContext();\n  return (\n    <ConfirmationDialog\n      isLoading={deleteSelectedRows.isPending}\n      title={\n        <Trans\n          message=\"Delete [one 1 item|other :count items]?\"\n          values={{count: selectedRows.length}}\n        />\n      }\n      body={\n        <Trans message=\"This will permanently remove the items and cannot be undone.\" />\n      }\n      confirm={<Trans message=\"Delete\" />}\n      isDanger\n      onConfirm={() => {\n        deleteSelectedRows.mutate(undefined, {onSuccess: () => close()});\n      }}\n    />\n  );\n}\n","export default \"__VITE_ASSET__421a551f__\"","import {\n  BackendFilter,\n  FilterControlType,\n  FilterOperator,\n} from '@common/datatable/filters/backend-filter';\nimport {message} from '@common/i18n/message';\nimport {\n  createdAtFilter,\n  updatedAtFilter,\n} from '@common/datatable/filters/timestamp-filters';\nimport {USER_MODEL} from '@common/auth/user';\n\nexport const CannedRepliesDatatableFilters: BackendFilter[] = [\n  {\n    key: 'shared',\n    label: message('Shared'),\n    description: message('Whether reply is marked as shared'),\n    defaultOperator: FilterOperator.eq,\n    control: {\n      type: FilterControlType.BooleanToggle,\n      defaultValue: true,\n    },\n  },\n  {\n    key: 'user_id',\n    label: message('Owner'),\n    description: message('User this reply was created by'),\n    defaultOperator: FilterOperator.eq,\n    control: {\n      type: FilterControlType.SelectModel,\n      model: USER_MODEL,\n    },\n  },\n  createdAtFilter({\n    description: message('Date reply was created'),\n  }),\n  updatedAtFilter({\n    description: message('Date reply was last updated'),\n  }),\n];\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\n\ninterface Payload {\n  ids: number[];\n}\n\nexport function useDeleteCannedReplies() {\n  return useMutation({\n    mutationFn: (payload: Payload) => deleteReplies(payload),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({queryKey: ['canned-replies']});\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction deleteReplies(payload: Payload) {\n  return apiClient\n    .delete(`canned-replies/${payload.ids.join(',')}`)\n    .then(r => r.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {Reply} from '@app/agent/reply';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {UseFormReturn} from 'react-hook-form';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {CreateCannedReplyPayload} from '@app/agent/agent-ticket-page/canned-replies/requests/use-create-canned-reply';\n\ninterface Response {\n  reply: Reply;\n}\n\nexport function useUpdateCannedReply(\n  form: UseFormReturn<CreateCannedReplyPayload>,\n  id: number,\n) {\n  return useMutation({\n    mutationFn: (payload: CreateCannedReplyPayload) =>\n      updateCannedReply(id, payload),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({queryKey: ['canned-replies']});\n      toast(message('Reply updated'));\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction updateCannedReply(id: number, payload: CreateCannedReplyPayload) {\n  return apiClient\n    .put<Response>(`canned-replies/${id}`, payload)\n    .then(r => r.data);\n}\n","import {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {Trans} from '@common/i18n/trans';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {Button} from '@common/ui/buttons/button';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport React from 'react';\nimport {CreateCannedReplyPayload} from '@app/agent/agent-ticket-page/canned-replies/requests/use-create-canned-reply';\nimport {useForm} from 'react-hook-form';\nimport {CannedReply} from '@app/agent/agent-ticket-page/canned-replies/canned-reply';\nimport {useUpdateCannedReply} from '@app/agent/agent-ticket-page/canned-replies/requests/use-update-canned-reply';\nimport {CannedReplyForm} from '@app/agent/agent-ticket-page/canned-replies/canned-reply-form';\n\ninterface Props {\n  reply: CannedReply;\n}\nexport function UpdateCannedReplyDialog({reply}: Props) {\n  const {close, formId} = useDialogContext();\n  const form = useForm<CreateCannedReplyPayload>({\n    defaultValues: {\n      name: reply.name,\n      body: reply.body,\n      shared: reply.shared,\n      attachments: reply.attachments?.map(a => a.id),\n    },\n  });\n  const updateCannedReply = useUpdateCannedReply(form, reply.id);\n\n  const handleSubmit = (value: CreateCannedReplyPayload) => {\n    updateCannedReply.mutate(value, {\n      onSuccess: () => close(),\n    });\n  };\n\n  return (\n    <Dialog size=\"lg\">\n      <DialogHeader>\n        <Trans message=\"Update saved reply\" />\n      </DialogHeader>\n      <DialogBody>\n        <CannedReplyForm form={form} onSubmit={handleSubmit} reply={reply} />\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          type=\"submit\"\n          form={formId}\n          variant=\"flat\"\n          color=\"primary\"\n          disabled={updateCannedReply.isPending}\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","export function truncateString(str: string, length: number, end = '...') {\n  if (length == null || length >= str.length) {\n    return str;\n  }\n  return str.slice(0, Math.max(0, length - end.length)) + end;\n}\n","export function stripTags(str: string) {\n  return str.replace(/<\\/?[^>]+(>|$)/g, '');\n}\n","import {ColumnConfig} from '@common/datatable/column-config';\nimport {Trans} from '@common/i18n/trans';\nimport {FormattedDate} from '@common/i18n/formatted-date';\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {EditIcon} from '@common/icons/material/Edit';\nimport React, {useContext} from 'react';\nimport {TableContext} from '@common/ui/tables/table-context';\nimport clsx from 'clsx';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {DeleteIcon} from '@common/icons/material/Delete';\nimport {ConfirmationDialog} from '@common/ui/overlays/dialog/confirmation-dialog';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {CannedReply} from '@app/agent/agent-ticket-page/canned-replies/canned-reply';\nimport {useDeleteCannedReplies} from '@app/agent/agent-ticket-page/canned-replies/requests/use-delete-canned-replies';\nimport {CheckIcon} from '@common/icons/material/Check';\nimport {CloseIcon} from '@common/icons/material/Close';\nimport {NameWithAvatar} from '@common/datatable/column-templates/name-with-avatar';\nimport {UpdateCannedReplyDialog} from '@app/agent/agent-ticket-page/canned-replies/update-canned-reply-dialog';\nimport {truncateString} from '@common/utils/string/truncate-string';\nimport {stripTags} from '@common/utils/string/strip-tags';\n\nexport const CannedRepliesDatatableColumns: ColumnConfig<CannedReply>[] = [\n  {\n    key: 'name',\n    width: 'flex-3 min-w-200',\n    visibleInMode: 'all',\n    header: () => <Trans message=\"Saved reply\" />,\n    body: reply => <CannedReplyColumn reply={reply} />,\n  },\n  {\n    key: 'user_id',\n    allowsSorting: true,\n    width: 'min-w-200',\n    visibleInMode: 'all',\n    header: () => <Trans message=\"Owner\" />,\n    body: reply =>\n      reply.user ? (\n        <NameWithAvatar\n          image={reply.user.avatar}\n          label={reply.user.display_name}\n          description={reply.user.email}\n        />\n      ) : null,\n  },\n  {\n    key: 'shared',\n    allowsSorting: true,\n    width: 'w-60 flex-shrink-0',\n    header: () => <Trans message=\"Shared\" />,\n    body: reply =>\n      reply.shared ? (\n        <CheckIcon size=\"md\" className=\"text-positive\" />\n      ) : (\n        <CloseIcon size=\"md\" className=\"text-danger\" />\n      ),\n  },\n  {\n    key: 'updatedAt',\n    allowsSorting: true,\n    width: 'w-96',\n    header: () => <Trans message=\"Last updated\" />,\n    body: reply => (\n      <time>\n        <FormattedDate date={reply.updated_at} />\n      </time>\n    ),\n  },\n  {\n    key: 'actions',\n    header: () => <Trans message=\"Actions\" />,\n    width: 'w-84 flex-shrink-0',\n    hideHeader: true,\n    align: 'end',\n    visibleInMode: 'all',\n    body: reply => (\n      <div className=\"text-muted\">\n        <DialogTrigger type=\"modal\">\n          <Tooltip label={<Trans message=\"Edit reply\" />}>\n            <IconButton size=\"md\">\n              <EditIcon />\n            </IconButton>\n          </Tooltip>\n          <UpdateCannedReplyDialog reply={reply} />\n        </DialogTrigger>\n        <DialogTrigger type=\"modal\">\n          <Tooltip label={<Trans message=\"Delete reply\" />}>\n            <IconButton>\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n          <DeleteCannedReplyDialog reply={reply} />\n        </DialogTrigger>\n      </div>\n    ),\n  },\n];\n\ninterface CannedReplyColumnProps {\n  reply: CannedReply;\n}\nfunction CannedReplyColumn({reply}: CannedReplyColumnProps) {\n  const {isCollapsedMode} = useContext(TableContext);\n  return (\n    <div className=\"min-w-0\">\n      <div\n        className={clsx(\n          isCollapsedMode\n            ? 'whitespace-normal'\n            : 'overflow-hidden overflow-ellipsis whitespace-nowrap font-medium',\n        )}\n      >\n        {reply.name}\n      </div>\n      {!isCollapsedMode && (\n        <p className=\"mt-4 max-w-680 whitespace-normal text-xs text-muted\">\n          {truncateString(stripTags(reply.body), 230)}\n        </p>\n      )}\n    </div>\n  );\n}\n\ninterface DeleteCannedReplyDialogProps {\n  reply: CannedReply;\n}\nexport function DeleteCannedReplyDialog({reply}: DeleteCannedReplyDialogProps) {\n  const deleteReplies = useDeleteCannedReplies();\n  const {close} = useDialogContext();\n  return (\n    <ConfirmationDialog\n      isDanger\n      isLoading={deleteReplies.isPending}\n      title={<Trans message=\"Delete saved reply\" />}\n      body={\n        <Trans message=\"Are you sure you want to delete this saved reply?\" />\n      }\n      confirm={<Trans message=\"Delete\" />}\n      onConfirm={() => {\n        deleteReplies.mutate({ids: [reply.id]}, {onSuccess: () => close()});\n      }}\n    />\n  );\n}\n","import {Trans} from '@common/i18n/trans';\nimport {DataTablePage} from '@common/datatable/page/data-table-page';\nimport {DataTableAddItemButton} from '@common/datatable/data-table-add-item-button';\nimport {DataTableEmptyStateMessage} from '@common/datatable/page/data-table-emty-state-message';\nimport {DeleteSelectedItemsAction} from '@common/datatable/page/delete-selected-items-action';\nimport onlineArticlesImg from '@app/admin/canned-replies/online-articles.svg';\nimport {CannedRepliesDatatableFilters} from '@app/admin/canned-replies/canned-replies-datatable-filters';\nimport {CannedRepliesDatatableColumns} from '@app/admin/canned-replies/canned-replies-datatable-columns';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {CreateCannedReplyDialog} from '@app/agent/agent-ticket-page/canned-replies/create-canned-reply-dialog';\nimport {useMemo} from 'react';\n\ninterface Props {\n  userId?: number;\n}\nexport function CannedRepliesDatatablePage({userId}: Props) {\n  const {columns, filters} = useMemo(() => {\n    return {\n      columns: CannedRepliesDatatableColumns.filter(\n        c => c.key !== 'user_id' || !userId\n      ),\n      filters: CannedRepliesDatatableFilters.filter(\n        f => f.key !== 'user_id' || !userId\n      ),\n    };\n  }, [userId]);\n\n  return (\n    <DataTablePage\n      endpoint=\"canned-replies\"\n      title={<Trans message=\"Saved replies\" />}\n      columns={columns}\n      filters={filters}\n      queryParams={{\n        shared: 'true',\n        with: !userId ? 'user' : undefined,\n        user_id: userId,\n      }}\n      actions={<Actions />}\n      selectedActions={<DeleteSelectedItemsAction />}\n      enableSelection={false}\n      cellHeight=\"h-76\"\n      emptyStateMessage={\n        <DataTableEmptyStateMessage\n          image={onlineArticlesImg}\n          title={<Trans message=\"No saved replies have been created yet\" />}\n          filteringTitle={<Trans message=\"No matching replies\" />}\n        />\n      }\n    />\n  );\n}\n\nfunction Actions() {\n  return (\n    <DialogTrigger type=\"modal\">\n      <DataTableAddItemButton>\n        <Trans message=\"Add reply\" />\n      </DataTableAddItemButton>\n      <CreateCannedReplyDialog />\n    </DialogTrigger>\n  );\n}\n","import {createSvgIcon} from '@common/icons/create-svg-icon';\n\nexport const InfoDialogTriggerIcon = createSvgIcon(\n  <path d=\"M9 8a1 1 0 0 0-1-1H5.5a1 1 0 1 0 0 2H7v4a1 1 0 0 0 2 0zM4 0h8a4 4 0 0 1 4 4v8a4 4 0 0 1-4 4H4a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4zm4 5.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3z\" />,\n  'InfoDialogTrigger'\n);\n","import {IconButton} from '@common/ui/buttons/icon-button';\nimport {InfoDialogTriggerIcon} from '@common/ui/overlays/dialog/info-dialog-trigger/info-dialog-trigger-icon';\nimport {Dialog, DialogSize} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport React, {ReactNode} from 'react';\nimport clsx from 'clsx';\n\ninterface InfoDialogTriggerProps {\n  title?: ReactNode;\n  body: ReactNode;\n  dialogSize?: DialogSize;\n  className?: string;\n}\nexport function InfoDialogTrigger({\n  title,\n  body,\n  dialogSize = 'sm',\n  className,\n}: InfoDialogTriggerProps) {\n  return (\n    <DialogTrigger type=\"popover\" triggerOnHover>\n      <IconButton\n        className={clsx('text-muted opacity-70', className)}\n        size=\"xs\"\n      >\n        <InfoDialogTriggerIcon viewBox=\"0 0 16 16\" />\n      </IconButton>\n      <Dialog size={dialogSize}>\n        {title && (\n          <DialogHeader padding=\"px-18 pt-12\" size=\"md\" hideDismissButton>\n            {title}\n          </DialogHeader>\n        )}\n        <DialogBody>{body}</DialogBody>\n      </Dialog>\n    </DialogTrigger>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {User} from '@common/auth/user';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@common/ui/toast/toast';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {message} from '@common/i18n/message';\n\ninterface Response extends BackendResponse {\n  user: User;\n}\n\nexport interface BanUserPayload {\n  ban_until?: string;\n  permanent?: boolean;\n  comment?: string;\n}\n\nexport function useBanUser(\n  form: UseFormReturn<BanUserPayload>,\n  userId: number,\n) {\n  return useMutation({\n    mutationFn: (payload: BanUserPayload) => banUser(userId, payload),\n    onSuccess: async () => {\n      toast(message('User suspended'));\n      await queryClient.invalidateQueries({queryKey: ['users']});\n    },\n    onError: r => onFormQueryError(r, form),\n  });\n}\n\nfunction banUser(userId: number, payload: BanUserPayload): Promise<Response> {\n  return apiClient.post(`users/${userId}/ban`, payload).then(r => r.data);\n}\n","import {useControlledState} from '@react-stately/utils';\nimport {HTMLAttributes, useCallback, useState} from 'react';\nimport {\n  CalendarDate,\n  DateValue,\n  isSameDay,\n  toCalendarDate,\n  toZoned,\n  ZonedDateTime,\n} from '@internationalized/date';\nimport {useBaseDatePickerState} from '../use-base-date-picker-state';\nimport {useCurrentDateTime} from '@common/i18n/use-current-date-time';\n\nexport type Granularity = 'day' | 'minute';\n\nexport type DatePickerState = BaseDatePickerState;\n\nexport interface BaseDatePickerState<T = ZonedDateTime, P = boolean> {\n  timezone: string;\n  granularity: Granularity;\n  selectedValue: T;\n  setSelectedValue: (value: T) => void;\n  calendarIsOpen: boolean;\n  setCalendarIsOpen: (isOpen: boolean) => void;\n  calendarDates: CalendarDate[];\n  setCalendarDates: (dates: CalendarDate[]) => void;\n  dayIsActive: (day: CalendarDate) => boolean;\n  dayIsHighlighted: (day: CalendarDate) => boolean;\n  dayIsRangeStart: (day: CalendarDate) => boolean;\n  dayIsRangeEnd: (day: CalendarDate) => boolean;\n  isPlaceholder: P;\n  setIsPlaceholder: (value: P) => void;\n  clear: () => void;\n  min?: ZonedDateTime;\n  max?: ZonedDateTime;\n  closeDialogOnSelection: boolean;\n  getCellProps: (\n    date: CalendarDate,\n    isSameMonth: boolean,\n  ) => HTMLAttributes<HTMLElement>;\n}\n\nexport interface DatePickerValueProps<V, CV = V> {\n  value?: V | null | '';\n  defaultValue?: V | null;\n  onChange?: (value: CV | null) => void;\n  min?: DateValue;\n  max?: DateValue;\n  granularity?: Granularity;\n  closeDialogOnSelection?: boolean;\n}\nexport function useDatePickerState(\n  props: DatePickerValueProps<ZonedDateTime>,\n): BaseDatePickerState {\n  const now = useCurrentDateTime();\n  const [isPlaceholder, setIsPlaceholder] = useState(\n    !props.value && !props.defaultValue,\n  );\n\n  // if user clears the date, we will want to still keep an\n  // instance internally, but return null via \"onChange\" callback\n  const setStateValue = props.onChange;\n  const [internalValue, setInternalValue] = useControlledState(\n    props.value || now,\n    props.defaultValue || now,\n    value => {\n      setIsPlaceholder(false);\n      setStateValue?.(value);\n    },\n  );\n\n  const {\n    min,\n    max,\n    granularity,\n    timezone,\n    calendarIsOpen,\n    setCalendarIsOpen,\n    closeDialogOnSelection,\n  } = useBaseDatePickerState(internalValue, props);\n\n  const clear = useCallback(() => {\n    setIsPlaceholder(true);\n    setInternalValue(now);\n    setStateValue?.(null);\n    setCalendarIsOpen(false);\n  }, [now, setInternalValue, setStateValue, setCalendarIsOpen]);\n\n  const [calendarDates, setCalendarDates] = useState<CalendarDate[]>(() => {\n    return [toCalendarDate(internalValue)];\n  });\n\n  const setSelectedValue = useCallback(\n    (newValue: DateValue) => {\n      if (min && newValue.compare(min) < 0) {\n        newValue = min;\n      } else if (max && newValue.compare(max) > 0) {\n        newValue = max;\n      }\n\n      // preserve time\n      const value = internalValue\n        ? internalValue.set(newValue)\n        : toZoned(newValue, timezone);\n      setInternalValue(value);\n      setCalendarDates([toCalendarDate(value)]);\n      setIsPlaceholder(false);\n    },\n    [setInternalValue, min, max, internalValue, timezone],\n  );\n\n  const dayIsActive = useCallback(\n    (day: DateValue) => !isPlaceholder && isSameDay(internalValue, day),\n    [internalValue, isPlaceholder],\n  );\n\n  const getCellProps = useCallback(\n    (date: DateValue): HTMLAttributes<HTMLElement> => {\n      return {\n        onClick: () => {\n          setSelectedValue?.(date);\n          if (closeDialogOnSelection) {\n            setCalendarIsOpen?.(false);\n          }\n        },\n      };\n    },\n    [setSelectedValue, setCalendarIsOpen, closeDialogOnSelection],\n  );\n\n  return {\n    selectedValue: internalValue,\n    setSelectedValue: setInternalValue,\n    calendarIsOpen,\n    setCalendarIsOpen,\n    dayIsActive,\n    dayIsHighlighted: () => false,\n    dayIsRangeStart: () => false,\n    dayIsRangeEnd: () => false,\n    getCellProps,\n    calendarDates,\n    setCalendarDates,\n    isPlaceholder,\n    clear,\n    setIsPlaceholder,\n    min,\n    max,\n    granularity,\n    timezone,\n    closeDialogOnSelection,\n  };\n}\n","import React, {\n  ComponentPropsWithoutRef,\n  Fragment,\n  MouseEvent,\n  useRef,\n} from 'react';\nimport {parseAbsoluteToLocal, ZonedDateTime} from '@internationalized/date';\nimport {useController} from 'react-hook-form';\nimport {mergeProps} from '@react-aria/utils';\nimport {\n  DatePickerValueProps,\n  useDatePickerState,\n} from './use-date-picker-state';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {DateRangeIcon} from '@common/icons/material/DateRange';\nimport {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {Calendar} from '../calendar/calendar';\nimport {\n  DatePickerField,\n  DatePickerFieldProps,\n} from '../date-range-picker/date-picker-field';\nimport {DateSegmentList} from '../segments/date-segment-list';\nimport {useDateFormatter} from '@common/i18n/use-date-formatter';\nimport {useTrans} from '@common/i18n/use-trans';\nimport clsx from 'clsx';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {Button} from '@common/ui/buttons/button';\nimport {Trans} from '@common/i18n/trans';\nimport {useCurrentDateTime} from '@common/i18n/use-current-date-time';\n\nexport interface DatePickerProps\n  extends Omit<DatePickerFieldProps, 'children'>,\n    DatePickerValueProps<ZonedDateTime> {}\nexport function DatePicker({showCalendarFooter, ...props}: DatePickerProps) {\n  const state = useDatePickerState(props);\n  const inputRef = useRef<HTMLDivElement>(null);\n  const now = useCurrentDateTime();\n\n  const footer = showCalendarFooter && (\n    <DialogFooter\n      padding=\"px-14 pb-14\"\n      startAction={\n        <Button\n          disabled={state.isPlaceholder}\n          variant=\"text\"\n          color=\"primary\"\n          onClick={() => {\n            state.clear();\n          }}\n        >\n          <Trans message=\"Clear\" />\n        </Button>\n      }\n    >\n      <Button\n        variant=\"text\"\n        color=\"primary\"\n        onClick={() => {\n          state.setSelectedValue(now);\n          state.setCalendarIsOpen(false);\n        }}\n      >\n        <Trans message=\"Today\" />\n      </Button>\n    </DialogFooter>\n  );\n\n  const dialog = (\n    <DialogTrigger\n      offset={8}\n      placement=\"bottom-start\"\n      isOpen={state.calendarIsOpen}\n      onOpenChange={state.setCalendarIsOpen}\n      type=\"popover\"\n      triggerRef={inputRef}\n      returnFocusToTrigger={false}\n      moveFocusToDialog={false}\n    >\n      <Dialog size=\"auto\">\n        <DialogBody\n          className=\"flex items-start gap-40\"\n          padding={showCalendarFooter ? 'px-24 pt-20 pb-10' : null}\n        >\n          <Calendar state={state} visibleMonths={1} />\n        </DialogBody>\n        {footer}\n      </Dialog>\n    </DialogTrigger>\n  );\n\n  const openOnClick: ComponentPropsWithoutRef<'div'> = {\n    onClick: e => {\n      e.stopPropagation();\n      e.preventDefault();\n      if (!isHourSegment(e)) {\n        state.setCalendarIsOpen(true);\n      } else {\n        state.setCalendarIsOpen(false);\n      }\n    },\n  };\n\n  return (\n    <Fragment>\n      <DatePickerField\n        ref={inputRef}\n        wrapperProps={openOnClick}\n        endAdornment={\n          <DateRangeIcon className={clsx(props.disabled && 'text-disabled')} />\n        }\n        {...props}\n      >\n        <DateSegmentList\n          segmentProps={openOnClick}\n          state={state}\n          value={state.selectedValue}\n          onChange={state.setSelectedValue}\n          isPlaceholder={state.isPlaceholder}\n        />\n      </DatePickerField>\n      {dialog}\n    </Fragment>\n  );\n}\n\ninterface FormDatePickerProps extends DatePickerProps {\n  name: string;\n}\nexport function FormDatePicker(props: FormDatePickerProps) {\n  const {min, max} = props;\n  const {trans} = useTrans();\n  const {format} = useDateFormatter();\n  const {\n    field: {onChange, onBlur, value = null, ref},\n    fieldState: {invalid, error},\n  } = useController({\n    name: props.name,\n    rules: {\n      validate: v => {\n        if (!v) return;\n        const date = parseAbsoluteToLocal(v);\n        if (min && date.compare(min) < 0) {\n          return trans({\n            message: 'Enter a date after :date',\n            values: {date: format(v)},\n          });\n        }\n        if (max && date.compare(max) > 0) {\n          return trans({\n            message: 'Enter a date before :date',\n            values: {date: format(v)},\n          });\n        }\n      },\n    },\n  });\n\n  const parsedValue: null | ZonedDateTime = value\n    ? parseAbsoluteToLocal(value)\n    : null;\n\n  const formProps: Partial<DatePickerProps> = {\n    onChange: e => {\n      onChange(e ? e.toAbsoluteString() : e);\n    },\n    onBlur,\n    value: parsedValue,\n    invalid,\n    errorMessage: error?.message,\n    inputRef: ref,\n  };\n\n  return <DatePicker {...mergeProps(formProps, props)} />;\n}\n\nfunction isHourSegment(e: MouseEvent<HTMLDivElement>): boolean {\n  return ['hour', 'minute', 'dayPeriod'].includes(\n    (e.currentTarget as HTMLElement).ariaLabel || ''\n  );\n}\n","import {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {Trans} from '@common/i18n/trans';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {Button} from '@common/ui/buttons/button';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {Form} from '@common/ui/forms/form';\nimport {useForm} from 'react-hook-form';\nimport {\n  BanUserPayload,\n  useBanUser,\n} from '@common/admin/users/requests/use-ban-user';\nimport {FormDatePicker} from '@common/ui/forms/input-field/date/date-picker/date-picker';\nimport {User} from '@common/auth/user';\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {message} from '@common/i18n/message';\nimport {FormSwitch} from '@common/ui/forms/toggle/switch';\n\ninterface Props {\n  user: User;\n}\nexport function BanUserDialog({user}: Props) {\n  const {trans} = useTrans();\n  const {close, formId} = useDialogContext();\n  const form = useForm<BanUserPayload>({\n    defaultValues: {\n      permanent: true,\n    },\n  });\n  const isPermanent = form.watch('permanent');\n  const banUser = useBanUser(form, user.id);\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Suspend “:name“\" values={{name: user.display_name}} />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          id={formId}\n          form={form}\n          onSubmit={values =>\n            banUser.mutate(values, {onSuccess: () => close()})\n          }\n        >\n          <FormDatePicker\n            name=\"ban_until\"\n            label={<Trans message=\"Suspend until\" />}\n            disabled={isPermanent}\n          />\n          <FormSwitch name=\"permanent\" className=\"mt-12\">\n            <Trans message=\"Permanent\" />\n          </FormSwitch>\n          <FormTextField\n            className=\"mt-24\"\n            name=\"comment\"\n            inputElementType=\"textarea\"\n            maxLength={250}\n            label={<Trans message=\"Reason\" />}\n            placeholder={trans(message('Optional'))}\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          form={formId}\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n          disabled={banUser.isPending}\n        >\n          <Trans message=\"Suspend\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {ColumnConfig} from '@common/datatable/column-config';\nimport {Trans} from '@common/i18n/trans';\nimport {FormattedRelativeTime} from '@common/i18n/formatted-relative-time';\nimport React, {ReactNode} from 'react';\nimport {CheckIcon} from '@common/icons/material/Check';\nimport {NameWithAvatar} from '@common/datatable/column-templates/name-with-avatar';\nimport {CloseIcon} from '@common/icons/material/Close';\nimport {CategoryLink} from '@app/help-center/categories/category-link';\nimport {Link} from 'react-router-dom';\nimport {LinkStyle} from '@common/ui/buttons/external-link';\nimport {InfoDialogTrigger} from '@common/ui/overlays/dialog/info-dialog-trigger/info-dialog-trigger';\nimport {SearchTermReport} from '@app/admin/reports/search-report/use-search-report';\n\ninterface Options {\n  skipCtr?: boolean;\n  description?: ReactNode;\n}\n\nexport function getSearchReportTableColumns({\n  skipCtr,\n  description,\n}: Options): ColumnConfig<SearchTermReport>[] {\n  const cols: (ColumnConfig<SearchTermReport> | null)[] = [\n    {\n      key: 'normalized_term',\n      header: () => (\n        <div className=\"flex items-center gap-4\">\n          <div>\n            <Trans message=\"Term\" />\n          </div>\n          {!!description && <InfoDialogTrigger body={description} />}\n        </div>\n      ),\n      visibleInMode: 'all',\n      body: item => (\n        <Link\n          to={`/hc/search/${item.term}`}\n          className={LinkStyle}\n          target=\"_blank\"\n        >\n          {item.term}\n        </Link>\n      ),\n    },\n    {\n      key: 'count',\n      header: () => <Trans message=\"Count\" />,\n      width: 'w-144',\n      body: item => <span>{item.count || 1}</span>,\n    },\n    skipCtr\n      ? null\n      : {\n          key: 'ctr',\n          header: () => <Trans message=\"CTR\" />,\n          width: 'w-144',\n          body: item => <span>{item.ctr}%</span>,\n        },\n    {\n      key: 'resulted_in_ticket',\n      header: () => <Trans message=\"Resulted in ticket\" />,\n      width: 'w-144',\n      body: item => (\n        <span className=\"text-muted\">\n          {item.resulted_in_ticket ? <CheckIcon /> : <CloseIcon />}\n        </span>\n      ),\n    },\n    {\n      key: 'last_seen',\n      header: () => <Trans message=\"Last seen\" />,\n      visibleInMode: 'all',\n      width: 'w-144',\n      body: item => <FormattedRelativeTime date={item.last_seen} />,\n    },\n    {\n      key: 'category',\n      header: () => <Trans message=\"Category\" />,\n      visibleInMode: 'all',\n      body: item =>\n        item.category ? (\n          <NameWithAvatar\n            image={item.category.image}\n            label={<CategoryLink category={item.category} target=\"_blank\" />}\n            description={item.category.description}\n          />\n        ) : null,\n    },\n  ];\n  return cols.filter(Boolean) as ColumnConfig<SearchTermReport>[];\n}\n","import {ZonedDateTime} from '@internationalized/date';\n\nexport type DateRangeValue = {\n  start: ZonedDateTime;\n  end: ZonedDateTime;\n  preset?: number;\n  compareStart?: ZonedDateTime;\n  compareEnd?: ZonedDateTime;\n  comparePreset?: number;\n};\n\nexport function dateRangeValueToPayload(value: {\n  dateRange?: DateRangeValue;\n  [key: string]: any;\n}) {\n  const payload = {\n    ...value,\n  };\n  if (payload.dateRange) {\n    payload.startDate = payload.dateRange.start.toAbsoluteString();\n    payload.endDate = payload.dateRange.end.toAbsoluteString();\n    payload.compareStartDate =\n      payload.dateRange.compareStart?.toAbsoluteString();\n    payload.compareEndDate = payload.dateRange.compareEnd?.toAbsoluteString();\n    payload.timezone = payload.dateRange.start.timeZone;\n    delete payload.dateRange;\n  }\n  return payload;\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {Category} from '@app/help-center/categories/category';\nimport {PaginatedBackendResponse} from '@common/http/backend-response/pagination-response';\nimport {\n  DateRangeValue,\n  dateRangeValueToPayload,\n} from '@common/ui/forms/input-field/date/date-range-picker/date-range-value';\n\nexport interface UseSearchReportResponse\n  extends PaginatedBackendResponse<SearchTermReport> {}\n\nexport interface SearchTermReport {\n  id: number;\n  term: string;\n  last_seen: string;\n  resulted_in_ticket: number;\n  count: string;\n  ctr: number;\n  category?: Category;\n}\n\nexport interface UseSearchReportParams {\n  page?: string | number;\n  perPage?: string | number;\n  userId?: string | number;\n  dateRange?: DateRangeValue;\n  failedSearches?: boolean;\n  orderBy?: 'last_seen' | 'count';\n}\n\nexport function useSearchReport(params: UseSearchReportParams) {\n  return useQuery({\n    queryKey: ['reports', 'search', params],\n    queryFn: () => fetchSearches(params),\n  });\n}\n\nfunction fetchSearches(params: UseSearchReportParams) {\n  return apiClient\n    .get<UseSearchReportResponse>(`reports/search`, {\n      params: dateRangeValueToPayload(params),\n    })\n    .then(response => response.data);\n}\n","import {useSearchParams} from 'react-router-dom';\nimport {GlobalLoadingProgress} from '@app/agent/global-loading-progress';\nimport React, {ReactNode, useMemo} from 'react';\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {SvgImage} from '@common/ui/images/svg-image/svg-image';\nimport searchImage from '@app/agent/agent-search-page/search.svg';\nimport {Trans} from '@common/i18n/trans';\nimport {DataTablePaginationFooter} from '@common/datatable/data-table-pagination-footer';\nimport {Table} from '@common/ui/tables/table';\nimport {getSearchReportTableColumns} from '@app/admin/reports/search-report/search-report-table-columns';\nimport {\n  useSearchReport,\n  UseSearchReportParams,\n} from '@app/admin/reports/search-report/use-search-report';\nimport {DateRangeValue} from '@common/ui/forms/input-field/date/date-range-picker/date-range-value';\n\ninterface Props {\n  userId?: number | string;\n  dateRange?: DateRangeValue;\n  failedSearches?: boolean;\n  description?: ReactNode;\n  orderBy?: UseSearchReportParams['orderBy'];\n}\nexport function SearchReportTable({\n  userId,\n  dateRange,\n  failedSearches,\n  description,\n}: Props) {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = useSearchReport({\n    dateRange,\n    userId,\n    failedSearches,\n    page: searchParams.get('page') || 1,\n    perPage: searchParams.get('perPage') || 15,\n  });\n  const {data, fetchStatus, isLoading, isPlaceholderData} = query;\n  const items = data?.pagination.data || [];\n  const isEmpty =\n    (fetchStatus === 'idle' && items.length === 0) ||\n    (!isLoading && !isPlaceholderData && items.length === 0);\n\n  const columns = useMemo(() => {\n    return getSearchReportTableColumns({\n      skipCtr: failedSearches,\n      description,\n    });\n  }, [description, failedSearches]);\n\n  return (\n    <div className=\"relative max-md:overflow-x-auto\">\n      <GlobalLoadingProgress query={query} />\n      <Table\n        columns={columns}\n        data={items}\n        enableSelection={false}\n        collapseOnMobile={false}\n        className=\"max-md:w-min\"\n      />\n      {isEmpty && (\n        <IllustratedMessage\n          className=\"mt-48\"\n          image={<SvgImage src={searchImage} />}\n          title={<Trans message=\"There are no searches to display\" />}\n        />\n      )}\n      <DataTablePaginationFooter\n        query={query}\n        onPageChange={page =>\n          setSearchParams(prev => {\n            prev.set('page', page.toString());\n            return prev;\n          })\n        }\n        onPerPageChange={perPage =>\n          setSearchParams(prev => {\n            prev.set('perPage', perPage.toString());\n            return prev;\n          })\n        }\n      />\n    </div>\n  );\n}\n"],"names":["_a","encodedFilters","decodedFilters","FilterControlType","FilterOperator","_b","Select","value","now","isSameMonth","isHourSegment","FilterList","attachments","createCannedReply","response","query","deleteSelectedRows","updateCannedReply","deleteReplies","banUser"],"mappings":"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"}